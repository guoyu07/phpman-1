AMQPChannel::__construct[AMQPChannel オブジェクトのインスタンスを作成する]
AMQPChannel::commitTransaction[未確定のトランザクションをコミットする]
AMQPChannel::isConnected[チャネルの接続を確認する]
AMQPChannel::qos[指定したチャネルの Quality Of Service を設定する]
AMQPChannel::rollbackTransaction[トランザクションをロールバックする]
AMQPChannel::setPrefetchCount[ブローカからプリフェッチするメッセージの数を設定する]
AMQPChannel::setPrefetchSize[ブローカからプリフェッチするウィンドウサイズを設定する]
AMQPChannel::startTransaction[トランザクションを開始する]
AMQPConnection::__construct[AMQPConnection のインスタンスを作成する]
AMQPConnection::connect[AMQP ブローカとの接続を確立する]
AMQPConnection::disconnect[AMQP ブローカとの接続を閉じる]
AMQPConnection::getHost[設定されたホストを取得する]
AMQPConnection::getLogin[設定されたログインを取得する]
AMQPConnection::getPassword[設定されたパスワードを取得する]
AMQPConnection::getPort[設定されたポートを取得する]
AMQPConnection::getTimeout[タイムアウトを取得する]
AMQPConnection::getVhost[設定された仮想ホストを取得する]
AMQPConnection::isConnected[AMQPConnectionオブジェクトがブローカと接続しているかどうかを調べる]
AMQPConnection::reconnect[開いている接続をすべて閉じ、AMQP ブローカへの新しい接続を作成する]
AMQPConnection::setHost[amqp ホストを設定する]
AMQPConnection::setLogin[ログイン文字列を設定する]
AMQPConnection::setPassword[パスワードを設定する]
AMQPConnection::setPort[ポートを設定する]
AMQPConnection::setTimeout[タイムアウトを設定する]
AMQPConnection::setVhost[AMQP 仮想ホストを設定する]
AMQPEnvelope::getAppId[メッセージのアプリケーション ID を取得する]
AMQPEnvelope::getBody[メッセージの本文を取得する]
AMQPEnvelope::getContentEncoding[メッセージのエンコーディングを取得する]
AMQPEnvelope::getContentType[メッセージのコンテンツタイプを取得する]
AMQPEnvelope::getCorrelationId[メッセージの相関 ID を取得する]
AMQPEnvelope::getDeliveryTag[メッセージの配送タグを取得する]
AMQPEnvelope::getExchange[メッセージの exchange を取得する]
AMQPEnvelope::getExpiration[メッセージの有効期限を取得する]
AMQPEnvelope::getHeader[メッセージのヘッダを取得する]
AMQPEnvelope::getHeaders[メッセージのヘッダを取得する]
AMQPEnvelope::getMessageId[メッセージの ID を取得する]
AMQPEnvelope::getPriority[メッセージの優先度を取得する]
AMQPEnvelope::getReplyTo[メッセージの返信先を取得する]
AMQPEnvelope::getRoutingKey[メッセージのルーティングキーを取得する]
AMQPEnvelope::getTimeStamp[メッセージのタイムスタンプを取得する]
AMQPEnvelope::getType[メッセージの型を取得する]
AMQPEnvelope::getUserId[メッセージのユーザー ID を取得する]
AMQPEnvelope::isRedelivery[メッセージの再送かどうかを取得する]
AMQPExchange::__construct[AMQPExchange のインスタンスを作成する]
AMQPExchange::bind[別の exchange にバインドする]
AMQPExchange::declare[新しい exchange をブローカ上で宣言する]
AMQPExchange::delete[exchange をブローカから削除する]
AMQPExchange::getArgument[指定したキーに関連づけられた引数を取得する]
AMQPExchange::getArguments[指定したキュー上で設定されたすべての引数を取得する]
AMQPExchange::getFlags[フラグのビットマスクを取得する]
AMQPExchange::getName[設定された名前を取得する]
AMQPExchange::getType[設定された型を取得する]
AMQPExchange::publish[メッセージを exchange に発行する]
AMQPExchange::setArgument[指定したキーの値を設定する]
AMQPExchange::setArguments[exchange 上のすべての引数を設定する]
AMQPExchange::setFlags[exchange のフラグを設定する]
AMQPExchange::setName[exchange の名前を設定する]
AMQPExchange::setType[exchange の型を設定する]
AMQPQueue::__construct[AMQPQueue オブジェクトのインスタンスを作成する]
AMQPQueue::ack[メッセージの受信を受け付ける]
AMQPQueue::bind[指定したキューを、exchange 上のルーティングキーにバインドする]
AMQPQueue::cancel[キューのバインドをキャンセルする]
AMQPQueue::consume[メッセージをキューから取得する]
AMQPQueue::declare[新しいキューを宣言する]
AMQPQueue::delete[キューとその中身を削除する]
AMQPQueue::getArgument[指定したキーに関連づけられた引数を取得する]
AMQPQueue::getArguments[指定したキュー上で設定されたすべての引数を取得する]
AMQPQueue::getFlags[フラグのビットマスクを取得する]
AMQPQueue::getName[設定された名前を取得する]
AMQPQueue::get[次のメッセージをキューから取得する]
AMQPQueue::nack[メッセージを明示的に受付前の状態にする]
AMQPQueue::purge[キューの中身をパージする]
AMQPQueue::setArgument[指定したキーの値を設定する]
AMQPQueue::setArguments[キュー上のすべての引数を設定する]
AMQPQueue::setFlags[キューのフラグを設定する]
AMQPQueue::setName[キューの名前を設定する]
AMQPQueue::unbind[キューをルーティングキーから削除する]
APCIterator::__construct[APCIterator イテレータオブジェクトを作成する]
APCIterator::current[現在の項目を取得する]
APCIterator::getTotalCount[総数を取得する]
APCIterator::getTotalHits[キャッシュヒットの総数を取得する]
APCIterator::getTotalSize[キャッシュのサイズの合計を取得する]
APCIterator::key[イテレータのキーを取得する]
APCIterator::next[ポインタを次の項目に移動させる]
APCIterator::rewind[イテレータを巻き戻す]
APCIterator::valid[現在位置が有効かどうかを調べる]
AppendIterator::append[イテレータを追加する]
AppendIterator::current[現在の値を取得する]
AppendIterator::getArrayIterator[ArrayIterator を取得する]
AppendIterator::getInnerIterator[内部イテレータを取得する]
AppendIterator::getIteratorIndex[イテレータのインデックスを取得する]
AppendIterator::key[現在のキーを取得する]
AppendIterator::next[次の要素に移動する]
AppendIterator::rewind[イテレータを巻き戻す]
AppendIterator::valid[現在の要素が有効かどうかを調べる]
ArrayAccess::offsetExists[オフセットが存在するかどうか]
ArrayAccess::offsetGet[オフセットを取得する]
ArrayAccess::offsetSet[オフセットを設定する]
ArrayAccess::offsetUnset[オフセットの設定を解除する]
ArrayIterator::__construct[ArrayIterator を作成する]
ArrayIterator::append[要素を追加する]
ArrayIterator::asort[値で配列をソートする]
ArrayIterator::count[要素を数える]
ArrayIterator::current[現在の配列エントリを返す]
ArrayIterator::getArrayCopy[配列のコピーを取得する]
ArrayIterator::getFlags[フラグを取得する]
ArrayIterator::key[現在の配列キーを返す]
ArrayIterator::ksort[キーで配列をソートする]
ArrayIterator::natcasesort[大文字小文字を区別せずに自然順で配列をソートする]
ArrayIterator::natsort[自然順で配列をソートする]
ArrayIterator::next[次のエントリに移動する]
ArrayIterator::offsetExists[オフセットが存在するかどうかを調べる]
ArrayIterator::offsetGet[オフセットの値を取得する]
ArrayIterator::offsetSet[オフセットの値を設定する]
ArrayIterator::offsetUnset[オフセットの値を削除する]
ArrayIterator::rewind[配列を最初に巻き戻す]
ArrayIterator::seek[位置を移動する]
ArrayIterator::serialize[シリアライズする]
ArrayIterator::setFlags[振る舞いのフラグを設定する]
ArrayIterator::uasort[ユーザー定義のソート]
ArrayIterator::uksort[ユーザー定義のソート]
ArrayIterator::unserialize[アンシリアライズする]
ArrayIterator::valid[配列がまだエントリを持っているかどうかチェックする]
ArrayObject::append[値を追加する]
ArrayObject::asort[値でエントリをソートする]
ArrayObject::count[ArrayObject の public プロパティの数を取得する]
ArrayObject::exchangeArray[配列を別の配列と交換する]
ArrayObject::getArrayCopy[ArrayObject のコピーを作成する]
ArrayObject::getFlags[振る舞いのフラグを取得する]
ArrayObject::getIteratorClass[ArrayObject のイテレータクラス名を取得する]
ArrayObject::getIterator[ArrayObject インスタンスから新規イテレータを生成する]
ArrayObject::ksort[キーでエントリをソートする]
ArrayObject::natcasesort[大文字小文字を区別しない "自然順" アルゴリズムでエントリをソートする]
ArrayObject::natsort["自然順" アルゴリズムでエントリをソートする]
ArrayObject::offsetExists[要求されたインデックスが存在するかどうかを返す]
ArrayObject::offsetGet[指定したインデックスの値を返す]
ArrayObject::offsetSet[指定したインデックスに新しい値をセットする]
ArrayObject::offsetUnset[指定したインデックスの値を解除する]
ArrayObject::serialize[ArrayObject をシリアライズする]
ArrayObject::setFlags[処理フラグを設定する]
ArrayObject::setIteratorClass[ArrayObject のイテレータクラス名を設定する]
ArrayObject::uasort[ユーザー定義の比較関数でエントリをソートし、キーとの対応は保持する]
ArrayObject::uksort[ユーザー定義の比較関数を使って、キーでエントリをソートする]
ArrayObject::unserialize[ArrayObject をアンシリアライズする]
CachingIterator::__construct[新しい CachingIterator オブジェクトを作成する]
CachingIterator::__toString[現在の要素の文字列表現を返す]
CachingIterator::count[イテレータ内の要素の数]
CachingIterator::current[現在の要素を返す]
CachingIterator::getCache[The getCache purpose]
CachingIterator::getFlags[使用しているフラグを取得する]
CachingIterator::getInnerIterator[内部イテレータを返す]
CachingIterator::hasNext[内部イテレータが有効な次の要素を持つかどうかをチェックする]
CachingIterator::key[現在の要素のキーを返す]
CachingIterator::next[イテレータを前方に移動する]
CachingIterator::offsetExists[The offsetExists purpose]
CachingIterator::offsetGet[The offsetGet purpose]
CachingIterator::offsetSet[The offsetSet purpose]
CachingIterator::offsetUnset[The offsetUnset purpose]
CachingIterator::rewind[イテレータを巻き戻す]
CachingIterator::setFlags[The setFlags purpose]
CachingIterator::valid[現在の要素が有効かどうかをチェックする]
Cairo::availableFonts[Retrieves the availables font types]
Cairo::availableSurfaces[Retrieves all available surfaces]
Cairo::statusToString[Retrieves the current status asstring]
Cairo::versionString[Retrieves cairo version as string]
Cairo::version[Retrives cairo's library version]
CairoContext::__construct[Creates a new CairoContext]
CairoContext::appendPath[Appends a path to current path]
CairoContext::arcNegative[Adds a negative arc]
CairoContext::arc[Adds a circular arc]
CairoContext::clipExtents[Computes the area inside the currentclip]
CairoContext::clipPreserve[Establishes a new clip region from thecurrent clip]
CairoContext::clipRectangleList[Retrieves the current clip as a list ofrectangles]
CairoContext::clip[Establishes a new clip region]
CairoContext::closePath[Closes the current path]
CairoContext::copyPage[Emits the current page]
CairoContext::copyPathFlat[Gets a flattened copy of the currentpath]
CairoContext::copyPath[Creates a copy of the current path]
CairoContext::curveTo[Adds a curve]
CairoContext::deviceToUserDistance[Transform a distance]
CairoContext::deviceToUser[Transform a coordinate]
CairoContext::fillExtents[Computes the filled area]
CairoContext::fillPreserve[Fills and preserve the current path]
CairoContext::fill[Fills the current path]
CairoContext::fontExtents[Get the font extents]
CairoContext::getAntialias[Retrives the current antialias mode]
CairoContext::getCurrentPoint[The getCurrentPoint purpose]
CairoContext::getDashCount[The getDashCount purpose]
CairoContext::getDash[The getDash purpose]
CairoContext::getFillRule[The getFillRule purpose]
CairoContext::getFontFace[The getFontFace purpose]
CairoContext::getFontMatrix[The getFontMatrix purpose]
CairoContext::getFontOptions[The getFontOptions purpose]
CairoContext::getGroupTarget[The getGroupTarget purpose]
CairoContext::getLineCap[The getLineCap purpose]
CairoContext::getLineJoin[The getLineJoin purpose]
CairoContext::getLineWidth[The getLineWidth purpose]
CairoContext::getMatrix[The getMatrix purpose]
CairoContext::getMiterLimit[The getMiterLimit purpose]
CairoContext::getOperator[The getOperator purpose]
CairoContext::getScaledFont[The getScaledFont purpose]
CairoContext::getSource[The getSource purpose]
CairoContext::getTarget[The getTarget purpose]
CairoContext::getTolerance[The getTolerance purpose]
CairoContext::glyphPath[The glyphPath purpose]
CairoContext::hasCurrentPoint[The hasCurrentPoint purpose]
CairoContext::identityMatrix[The identityMatrix purpose]
CairoContext::inFill[The inFill purpose]
CairoContext::inStroke[The inStroke purpose]
CairoContext::lineTo[The lineTo purpose]
CairoContext::maskSurface[The maskSurface purpose]
CairoContext::mask[The mask purpose]
CairoContext::moveTo[The moveTo purpose]
CairoContext::newPath[The newPath purpose]
CairoContext::newSubPath[The newSubPath purpose]
CairoContext::paintWithAlpha[The paintWithAlpha purpose]
CairoContext::paint[The paint purpose]
CairoContext::pathExtents[The pathExtents purpose]
CairoContext::popGroupToSource[The popGroupToSource purpose]
CairoContext::popGroup[The popGroup purpose]
CairoContext::pushGroupWithContent[The pushGroupWithContent purpose]
CairoContext::pushGroup[The pushGroup purpose]
CairoContext::rectangle[The rectangle purpose]
CairoContext::relCurveTo[The relCurveTo purpose]
CairoContext::relLineTo[The relLineTo purpose]
CairoContext::relMoveTo[The relMoveTo purpose]
CairoContext::resetClip[The resetClip purpose]
CairoContext::restore[The restore purpose]
CairoContext::rotate[The rotate purpose]
CairoContext::save[The save purpose]
CairoContext::scale[The scale purpose]
CairoContext::selectFontFace[The selectFontFace purpose]
CairoContext::setAntialias[The setAntialias purpose]
CairoContext::setDash[The setDash purpose]
CairoContext::setFillRule[The setFillRule purpose]
CairoContext::setFontFace[The setFontFace purpose]
CairoContext::setFontMatrix[The setFontMatrix purpose]
CairoContext::setFontOptions[The setFontOptions purpose]
CairoContext::setFontSize[The setFontSize purpose]
CairoContext::setLineCap[The setLineCap purpose]
CairoContext::setLineJoin[The setLineJoin purpose]
CairoContext::setLineWidth[The setLineWidth purpose]
CairoContext::setMatrix[The setMatrix purpose]
CairoContext::setMiterLimit[The setMiterLimit purpose]
CairoContext::setOperator[The setOperator purpose]
CairoContext::setScaledFont[The setScaledFont purpose]
CairoContext::setSourceRGBA[The setSourceRGBA purpose]
CairoContext::setSourceRGB[The setSourceRGB purpose]
CairoContext::setSourceSurface[The setSourceSurface purpose]
CairoContext::setSource[The setSource purpose]
CairoContext::setTolerance[The setTolerance purpose]
CairoContext::showPage[The showPage purpose]
CairoContext::showText[The showText purpose]
CairoContext::status[The status purpose]
CairoContext::strokeExtents[The strokeExtents purpose]
CairoContext::strokePreserve[The strokePreserve purpose]
CairoContext::stroke[The stroke purpose]
CairoContext::textExtents[The textExtents purpose]
CairoContext::textPath[The textPath purpose]
CairoContext::transform[The transform purpose]
CairoContext::translate[The translate purpose]
CairoContext::userToDeviceDistance[The userToDeviceDistance purpose]
CairoContext::userToDevice[The userToDevice purpose]
CairoFontFace::__construct[Creates a new CairoFontFace object]
CairoFontFace::getType[Retrieves the font face type]
CairoFontFace::status[Check for CairoFontFace errors]
CairoFontOptions::__construct[The __construct purpose]
CairoFontOptions::equal[The equal purpose]
CairoFontOptions::getAntialias[The getAntialias purpose]
CairoFontOptions::getHintMetrics[The getHintMetrics purpose]
CairoFontOptions::getHintStyle[The getHintStyle purpose]
CairoFontOptions::getSubpixelOrder[The getSubpixelOrder purpose]
CairoFontOptions::hash[The hash purpose]
CairoFontOptions::merge[The merge purpose]
CairoFontOptions::setAntialias[The setAntialias purpose]
CairoFontOptions::setHintMetrics[The setHintMetrics purpose]
CairoFontOptions::setHintStyle[The setHintStyle purpose]
CairoFontOptions::setSubpixelOrder[The setSubpixelOrder purpose]
CairoFontOptions::status[The status purpose]
CairoFormat::strideForWidth[Provides an appropiate stride to use]
CairoGradientPattern::addColorStopRgb[The addColorStopRgb purpose]
CairoGradientPattern::addColorStopRgba[The addColorStopRgba purpose]
CairoGradientPattern::getColorStopCount[The getColorStopCount purpose]
CairoGradientPattern::getColorStopRgba[The getColorStopRgba purpose]
CairoGradientPattern::getExtend[The getExtend purpose]
CairoGradientPattern::setExtend[The setExtend purpose]
CairoImageSurface::__construct[Creates a new CairoImageSurface]
CairoImageSurface::createForData[The createForData purpose]
CairoImageSurface::createFromPng[Creates a new CairoImageSurface form a pngimage file]
CairoImageSurface::getData[Gets the image data as string]
CairoImageSurface::getFormat[Get the image format]
CairoImageSurface::getHeight[Retrieves the height of theCairoImageSurface]
CairoImageSurface::getStride[The getStride purpose]
CairoImageSurface::getWidth[Retrieves the width of theCairoImageSurface]
CairoLinearGradient::__construct[The __construct purpose]
CairoLinearGradient::getPoints[The getPoints purpose]
CairoMatrix::__construct[Creates a new CairoMatrix object]
CairoMatrix::initIdentity[Creates a new identity matrix]
CairoMatrix::initRotate[Creates a new rotated matrix]
CairoMatrix::initScale[Creates a new scaling matrix]
CairoMatrix::initTranslate[Creates a new translation matrix]
CairoMatrix::invert[The invert purpose]
CairoMatrix::multiply[The multiply purpose]
CairoMatrix::rotate[The rotate purpose]
CairoMatrix::scale[Applies scaling to a matrix]
CairoMatrix::transformDistance[The transformDistance purpose]
CairoMatrix::transformPoint[The transformPoint purpose]
CairoMatrix::translate[The translate purpose]
CairoPattern::__construct[The __construct purpose]
CairoPattern::getMatrix[The getMatrix purpose]
CairoPattern::getType[The getType purpose]
CairoPattern::setMatrix[The setMatrix purpose]
CairoPattern::status[The status purpose]
CairoPdfSurface::__construct[The __construct purpose]
CairoPdfSurface::setSize[The setSize purpose]
CairoPsSurface::__construct[The __construct purpose]
CairoPsSurface::dscBeginPageSetup[The dscBeginPageSetup purpose]
CairoPsSurface::dscBeginSetup[The dscBeginSetup purpose]
CairoPsSurface::dscComment[The dscComment purpose]
CairoPsSurface::getEps[The getEps purpose]
CairoPsSurface::getLevels[The getLevels purpose]
CairoPsSurface::levelToString[The levelToString purpose]
CairoPsSurface::restrictToLevel[The restrictToLevel purpose]
CairoPsSurface::setEps[The setEps purpose]
CairoPsSurface::setSize[The setSize purpose]
CairoRadialGradient::__construct[The __construct purpose]
CairoRadialGradient::getCircles[The getCircles purpose]
CairoScaledFont::__construct[The __construct purpose]
CairoScaledFont::extents[The extents purpose]
CairoScaledFont::getCtm[The getCtm purpose]
CairoScaledFont::getFontFace[The getFontFace purpose]
CairoScaledFont::getFontMatrix[The getFontMatrix purpose]
CairoScaledFont::getFontOptions[The getFontOptions purpose]
CairoScaledFont::getScaleMatrix[The getScaleMatrix purpose]
CairoScaledFont::getType[The getType purpose]
CairoScaledFont::glyphExtents[The glyphExtents purpose]
CairoScaledFont::status[The status purpose]
CairoScaledFont::textExtents[The textExtents purpose]
CairoSolidPattern::__construct[The __construct purpose]
CairoSolidPattern::getRgba[The getRgba purpose]
CairoSurface::__construct[The __construct purpose]
CairoSurface::copyPage[The copyPage purpose]
CairoSurface::createSimilar[The createSimilar purpose]
CairoSurface::finish[The finish purpose]
CairoSurface::flush[The flush purpose]
CairoSurface::getContent[The getContent purpose]
CairoSurface::getDeviceOffset[The getDeviceOffset purpose]
CairoSurface::getFontOptions[The getFontOptions purpose]
CairoSurface::getType[The getType purpose]
CairoSurface::markDirtyRectangle[The markDirtyRectangle purpose]
CairoSurface::markDirty[The markDirty purpose]
CairoSurface::setDeviceOffset[The setDeviceOffset purpose]
CairoSurface::setFallbackResolution[The setFallbackResolution purpose]
CairoSurface::showPage[The showPage purpose]
CairoSurface::status[The status purpose]
CairoSurface::writeToPng[The writeToPng purpose]
CairoSurfacePattern::__construct[The __construct purpose]
CairoSurfacePattern::getExtend[The getExtend purpose]
CairoSurfacePattern::getFilter[The getFilter purpose]
CairoSurfacePattern::getSurface[The getSurface purpose]
CairoSurfacePattern::setExtend[The setExtend purpose]
CairoSurfacePattern::setFilter[The setFilter purpose]
CairoSvgSurface::__construct[The __construct purpose]
CairoSvgSurface::getVersions[Used to retrieve a list of supported SVGversions]
CairoSvgSurface::restrictToVersion[The restrictToVersion purpose]
CairoSvgSurface::versionToString[The versionToString purpose]
CallbackFilterIterator::accept[現在の値、現在のキー、そして内部イテレータを引数としてでコールバックを呼び出す]
Closure::__construct[インスタンス作成を無効化したコンストラクタ]
Closure::bindTo[新しくバインドしたオブジェクトとクラスのスコープで、クロージャを複製する]
Closure::bind[バインドされたオブジェクトとクラスのスコープでクロージャを複製する]
Collator::asort[インデックスの情報を保持しつつ配列を並べ替える]
Collator::compare[ふたつの Unicode 文字列を比較する]
Collator::create[collator を作成する]
Collator::getAttribute[照合用の属性の値を取得する]
Collator::getErrorCode[collator の直近のエラーコードを取得する]
Collator::getErrorMessage[collator の直近のエラーコードのテキストを取得する]
Collator::getLocale[collator のロケール名を取得する]
Collator::getSortKey[文字列のソート用のキーを取得する]
Collator::getStrength[現在の照合強度を取得する]
Collator::setAttribute[照合用の属性を設定する]
Collator::setStrength[照合強度を設定する]
Collator::sortWithSortKeys[指定した collator とキーで配列を並べ替える]
Collator::sort[指定した collator で配列を並べ替える]
Cond::broadcast[条件をブロードキャストする]
Cond::create[条件を作る]
Cond::destroy[条件を破棄する]
Cond::signal[条件を通知する]
Cond::wait[条件を待つ]
Countable::count[オブジェクトの要素数を数える]
Counter::bumpValue[カウンタの現在値を変更する]
Counter::getMeta[カウンタのメタ情報を返す]
Counter::getNamed[既存のカウンタを取得する]
Counter::getValue[カウンタの現在値を取得する]
Counter::resetValue[カウンタの現在値をリセットする]
Counter::setCounterClass[Counter::getNamed() が返すクラスを設定する]
DOMAttr::__construct[新しい DOMAttrオブジェクトを作成する]
DOMAttr::isId[属性が定義済みの ID かどうかを調べる]
DOMCharacterData::appendData[ノードの文字データの最後に文字列を追加する]
DOMCharacterData::deleteData[指定した範囲の文字列をノードから削除する]
DOMCharacterData::insertData[指定した 16 ビット単位のオフセットに、文字列を挿入する]
DOMCharacterData::replaceData[DOMCharacterData ノードの文字列の一部を置換する]
DOMCharacterData::substringData[ノードから指定した範囲のデータを抽出する]
DOMComment::__construct[新しい DOMComment オブジェクトを作成する]
DOMDocument::__construct[新しい DOMDocument オブジェクトを作成する]
DOMDocument::createAttributeNS[関連付けられた名前空間に新しい属性を作成する]
DOMDocument::createAttribute[新しい属性を作成する]
DOMDocument::createCDATASection[新しい cdata ノードを作成する]
DOMDocument::createComment[新しい comment ノードを作成する]
DOMDocument::createDocumentFragment[新しい文書片を作成する]
DOMDocument::createElementNS[関連付けられた名前空間に新しい要素を作成する]
DOMDocument::createElement[新しい要素ノードを作成する]
DOMDocument::createEntityReference[新しいエンティティ参照ノードを作成する]
DOMDocument::createProcessingInstruction[新しい PI ノードを作成する]
DOMDocument::createTextNode[新しいテキストノードを作成する]
DOMDocument::getElementById[id に対応する要素を検索する]
DOMDocument::getElementsByTagNameNS[指定した名前空間で、タグ名に対応するすべての要素を検索する]
DOMDocument::getElementsByTagName[指定したローカルタグ名に対応するすべての要素を検索する]
DOMDocument::importNode[現在のドキュメントにノードをインポートする]
DOMDocument::loadHTMLFile[ファイルから HTML を読み込む]
DOMDocument::loadHTML[文字列から HTML を読み込む]
DOMDocument::loadXML[文字列から XML を読み込む]
DOMDocument::load[ファイルから XML を読み込む]
DOMDocument::normalizeDocument[ドキュメントを正規化する]
DOMDocument::registerNodeClass[基底ノード型を作成する際に使用する拡張クラスを登録する]
DOMDocument::relaxNGValidateSource[ドキュメントを relaxNG で検証する]
DOMDocument::relaxNGValidate[ドキュメントを relaxNG で検証する]
DOMDocument::saveHTMLFile[内部のドキュメントを HTML 形式でファイルに出力する]
DOMDocument::saveHTML[内部のドキュメントを HTML 形式の文字列として出力する]
DOMDocument::saveXML[内部の XML ツリーを文字列として出力する]
DOMDocument::save[内部の XML ツリーをファイルに出力する]
DOMDocument::schemaValidateSource[スキーマに基づいてドキュメントを検証する]
DOMDocument::schemaValidate[スキーマに基づいてドキュメントを検証する]
DOMDocument::validate[DTD に基づいてドキュメントを検証する]
DOMDocument::xinclude[DOMDocument オブジェクト内の XIncludes を置換する]
DOMDocumentFragment::appendXML[生の XML データを追加する]
DOMElement::__construct[新しい DOMElement オブジェクトを作成する]
DOMElement::getAttributeNS[属性の値を返す]
DOMElement::getAttributeNodeNS[属性ノードを返す]
DOMElement::getAttributeNode[属性ノードを返す]
DOMElement::getAttribute[属性の値を返す]
DOMElement::getElementsByTagNameNS[名前空間 URI とローカル名から要素を取得する]
DOMElement::getElementsByTagName[タグ名から要素を取得する]
DOMElement::hasAttributeNS[属性が存在するかどうかを調べる]
DOMElement::hasAttribute[属性が存在するかどうかを調べる]
DOMElement::removeAttributeNS[属性を削除する]
DOMElement::removeAttributeNode[属性を削除する]
DOMElement::removeAttribute[属性を削除する]
DOMElement::setAttributeNS[新しい属性を追加する]
DOMElement::setAttributeNodeNS[新しい属性ノードを要素に追加する]
DOMElement::setAttributeNode[新しい属性ノードを要素に追加する]
DOMElement::setAttribute[新しい属性を追加する]
DOMElement::setIdAttributeNS[ID 型の属性をローカル名および名前空間 URI で宣言する]
DOMElement::setIdAttributeNode[ID 型の属性をノードで宣言する]
DOMElement::setIdAttribute[ID 型の属性を名前で宣言する]
DOMEntityReference::__construct[新しい DOMEntityReference オブジェクトを作成する]
DOMImplementation::__construct[新しい DOMImplementation オブジェクトを作成する]
DOMImplementation::createDocumentType[空の DOMDocumentType オブジェクトを作成する]
DOMImplementation::createDocument[指定した型とドキュメント要素の DOMDocumentオブジェクトを作成する]
DOMImplementation::hasFeature[DOM 実装が、指定した機能を実装しているかどうかを調べる]
DOMNamedNodeMap::getNamedItemNS[ローカル名および名前空間 URI で指定したノードを取得する]
DOMNamedNodeMap::getNamedItem[名前で指定されたノードを取得する]
DOMNamedNodeMap::item[インデックスで指定したノードを取得する]
DOMNode::C14NFile[ノードをファイルに正規化する]
DOMNode::C14N[ノードを文字列に正規化する]
DOMNode::appendChild[子要素群の最後に新しい子要素を追加する]
DOMNode::cloneNode[ノードを複製する]
DOMNode::getLineNo[ノードが存在する行の番号を取得します。]
DOMNode::getNodePath[ノードの XPath を取得する]
DOMNode::hasAttributes[ノードが属性を保持しているかどうかを調べる]
DOMNode::hasChildNodes[ノードが子を保持しているかどうかを調べる]
DOMNode::insertBefore[参照しているノードの前に新しい子を追加する]
DOMNode::isDefaultNamespace[指定した namespaceURI がデフォルトの名前空間かどうかを調べる]
DOMNode::isSameNode[2 つのノードが等しいかどうかを調べる]
DOMNode::isSupported[指定したバージョンで機能がサポートされているかどうかを調べる]
DOMNode::lookupNamespaceURI[プレフィックスに基づいて、ノードの名前空間 URI を取得する]
DOMNode::lookupPrefix[名前空間 URI に基づいて、ノードの名前空間プレフィックスを取得する]
DOMNode::normalize[ノードを正規化する]
DOMNode::removeChild[子要素群から子要素を削除する]
DOMNode::replaceChild[子を置き換える]
DOMNodelist::item[インデックスで指定したノードを取得する]
DOMProcessingInstruction::__construct[新しい DOMProcessingInstruction オブジェクトを作成する]
DOMText::isWhitespaceInElementContent[このテキストノードが空白を含むかどうかを示す]
DOMText::splitText[指定したオフセットでノードを 2 つに分割する]
DOMXPath::__construct[新しい DOMXPathオブジェクトを作成する]
DOMXPath::evaluate[与えられた XPath 式を評価し、可能であれば結果を返す]
DOMXPath::query[与えられた XPath 式を評価する]
DOMXPath::registerNamespace[DOMXPathオブジェクトの名前空間を登録する]
DOMXPath::registerPhpFunctions[PHP の関数を XPath 関数として登録する]
DateInterval::createFromDateString[相対指定文字列から DateInterval を作成する]
DateInterval::format[間隔をフォーマットする]
DateTime::__construct[新しい DateTime オブジェクトを返す]
DateTime::__set_state[__set_state ハンドラ]
DateTime::__wakeup[__wakeup ハンドラ]
DateTime::add[年月日時分秒の値を DateTime オブジェクトに加える]
DateTime::createFromFormat[指定した書式でフォーマットした新しい DateTime オブジェクトを返す]
DateTime::diff[ふたつの DateTime オブジェクトの差を返す]
DateTime::format[指定した書式でフォーマットした日付を返す]
DateTime::getLastErrors[警告およびエラーを返す]
DateTime::getOffset[タイムゾーンのオフセットを返す]
DateTime::getTimestamp[Unix タイムスタンプを取得する]
DateTime::getTimezone[指定した DateTime に関連するタイムゾーンを返す]
DateTime::modify[タイムスタンプを変更する]
DateTime::setDate[日付を設定する]
DateTime::setISODate[ISO 日付を設定する]
DateTime::setTime[時刻を設定する]
DateTime::setTimestamp[Unix タイムスタンプを用いて日付と時刻を設定する]
DateTime::setTimezone[DateTime オブジェクトのタイムゾーンを設定する]
DateTime::sub[年月日時分秒の値を DateTime オブジェクトから引く]
DateTimeZone::__construct[新しい DateTimeZone オブジェクトを作成する]
DateTimeZone::getLocation[タイムゾーンの位置情報を返す]
DateTimeZone::getName[タイムゾーンの名前を返す]
DateTimeZone::getOffset[GMT からのタイムゾーンのオフセットを返す]
DateTimeZone::getTransitions[タイムゾーンの変遷を返す]
DateTimeZone::listAbbreviations[夏時間、オフセットおよびタイムゾーン名を含む連想配列を返す]
DateTimeZone::listIdentifiers[すべてのタイムゾーン識別子を含む配列を返す]
Directory::close[ディレクトリハンドルをクローズする]
Directory::read[ディレクトリハンドルからエントリを読み込む]
Directory::rewind[ディレクトリハンドルを元に戻す]
DirectoryIterator::__toString[ファイル名を文字列として取得する]
DirectoryIterator::current[現在の DirectoryIterator アイテムを返す]
DirectoryIterator::getATime[現在の DirectoryIteratorアイテムの最終アクセス時刻を取得する]
DirectoryIterator::getBasename[現在の DirectoryIterator のアイテムのベース名を取得する]
DirectoryIterator::getCTime[現在の DirectoryIterator アイテムの inode修正時刻を取得する]
DirectoryIterator::getExtension[ファイルの拡張子を取得する]
DirectoryIterator::getFilename[現在の DirectoryIterator アイテムのファイル名を返す]
DirectoryIterator::getGroup[現在の DirectoryIterator アイテムのグループを取得する]
DirectoryIterator::getInode[現在の DirectoryIterator アイテムの inodeを取得する]
DirectoryIterator::getMTime[現在の DirectoryIteratorアイテムの最終修正時刻を取得する]
DirectoryIterator::getOwner[現在の DirectoryIterator アイテムの所有者を取得する]
DirectoryIterator::getPath[現在の Iterator アイテムのパスをファイル名抜きで返す]
DirectoryIterator::getPathname[現在の DirectoryIteratorアイテムのパスとファイル名を返す]
DirectoryIterator::getPerms[現在の DirectoryIteratorアイテムのパーミッションを取得する]
DirectoryIterator::getSize[現在の DirectoryIterator アイテムのサイズを取得する]
DirectoryIterator::getType[現在の DirectoryIterator アイテムのタイプを判定する]
DirectoryIterator::isDir[現在の DirectoryIteratorアイテムがディレクトリであるかどうかを調べる]
DirectoryIterator::isDot[現在の DirectoryIterator アイテムが '.' もしくは '..'であるかどうかを調べる]
DirectoryIterator::isExecutable[現在の DirectoryIteratorアイテムが実行可能であるかどうかを調べる]
DirectoryIterator::isFile[現在の DirectoryIteratorアイテムが通常のファイルであるかどうかを調べる]
DirectoryIterator::isLink[現在の DirectoryIteratorアイテムがシンボリックリンクであるかどうかを調べる]
DirectoryIterator::isReadable[現在の DirectoryIteratorアイテムが読込可能であるかどうかを調べる]
DirectoryIterator::isWritable[現在の DirectoryIteratorアイテムが書き込み可能であるかどうかを調べる]
DirectoryIterator::key[現在の DirectoryIterator アイテムのキーを返す]
DirectoryIterator::next[次の DirectoryIterator アイテムに移動する]
DirectoryIterator::rewind[DirectoryIterator を最初に巻き戻す]
DirectoryIterator::seek[DirectoryIterator のアイテムを移動する]
DirectoryIterator::valid[現在の DirectoryIteratorの位置が有効なファイルであるかどうかチェックする]
EmptyIterator::current[current() メソッド]
EmptyIterator::key[key() メソッド]
EmptyIterator::next[next() メソッド]
EmptyIterator::rewind[rewind() メソッド]
EmptyIterator::valid[valid() メソッド]
ErrorException::getSeverity[例外の深刻度を取得する]
Ev::backend[libev が使うバックエンドを表す整数値を返す]
Ev::depth[再帰の深さを返す]
Ev::embeddableBackends[他のイベントループに埋め込めるバックエンド群を返す]
Ev::feedSignalEvent[シグナルイベントの情報をデフォルトループに送る]
Ev::feedSignal[シグナルイベントを Ev に送る]
Ev::iteration[デフォルトのイベントループが新しいイベントをポーリングした回数を返す]
Ev::nowUpdate[カーネルに問い合わせて現在時刻を確認し、処理中の Ev::nowが返す時刻を更新する]
Ev::now[デフォルトのイベントループで直近の処理が始まった時刻を返す]
Ev::recommendedBackends[Returns a bit mask of recommended backendsfor current platform.]
Ev::resume[一時停止していたデフォルトのイベントループを再開させる]
Ev::run[イベントのチェックとデフォルトループのコールバックの呼び出しを開始する]
Ev::sleep[指定した秒数だけプロセスをブロックする]
Ev::stop[デフォルトのイベントループを止める]
Ev::supportedBackends[現在の libev の構成でサポートするバックエンド群を返す]
Ev::suspend[デフォルトのイベントループを一時停止する]
Ev::time[epoch から現在時刻までの秒数を返す]
Ev::verify[内部の整合性をチェックする (デバッグ用)]
EvCheck::__construct[EvCheck ウォッチャーオブジェクトを作る]
EvCheck::createStopped[停止した EvCheck ウォッチャーのインスタンスを作る]
EvChild::__construct[EvChild ウォッチャーオブジェクトを作る]
EvChild::createStopped[停止した EvChild ウォッチャーのインスタンスを作る]
EvChild::set[ウォッチャーを設定する]
EvEmbed::__construct[EvEmbed オブジェクトを作る]
EvEmbed::createStopped[停止した EvEmbed ウォッチャーのインスタンスを作る]
EvEmbed::set[ウォッチャーを設定する]
EvEmbed::sweep[埋め込んだループに対して単一の非ブロックスイープを行う]
EvFork::__construct[EvFork ウォッチャーオブジェクトを作る]
EvFork::createStopped[停止した EvFork ウォッチャーのインスタンスを作る]
EvIdle::__construct[Constructs the EvIdle watcher object]
EvIdle::createStopped[Creates instance of a stopped EvIdle watcherobject]
EvIo::__construct[Constructs EvIo watcher object]
EvIo::createStopped[Create stopped EvIo watcher object]
EvIo::set[Configures the watcher]
EvLoop::__construct[Constructs the event loop object]
EvLoop::backend[Returns an integer describing the backendused by libev.]
EvLoop::check[Creates EvCheck object associated with thecurrent event loop instance]
EvLoop::child[Creates EvChild object associated with thecurrent event loop]
EvLoop::defaultLoop[Returns or creates the default eventloop.]
EvLoop::embed[Creates an instance of EvEmbed watcherassociated with the current EvLoop object.]
EvLoop::fork[Creates EvFork watcher object associatedwith the current event loop instance]
EvLoop::idle[Creates EvIdle watcher object associatedwith the current event loop instance]
EvLoop::invokePending[Invoke all pending watchers while resettingtheir pending state]
EvLoop::io[Create EvIo watcher object associated withthe current event loop instance]
EvLoop::loopFork[Must be called after a fork]
EvLoop::nowUpdate[Establishes the current time by querying thekernel, updating the time returned by EvLoop::now in theprogress.]
EvLoop::now[Returns the current "event loop time"]
EvLoop::periodic[Creates EvPeriodic watcher object associatedwith the current event loop instance]
EvLoop::prepare[Creates EvPrepare watcher object associatedwith the current event loop instance]
EvLoop::resume[Resume previously suspended default eventloop]
EvLoop::run[Begin checking for events and callingcallbacks for the loop]
EvLoop::signal[Creates EvSignal watcher object associatedwith the current event loop instance]
EvLoop::stat[Creates EvStat watcher object associatedwith the current event loop instance]
EvLoop::stop[Stops the event loop]
EvLoop::suspend[Suspend the loop]
EvLoop::timer[Creates EvTimer watcher object associatedwith the current event loop instance]
EvLoop::verify[Performs internal consistency checks(fordebugging)]
EvPeriodic::__construct[Constructs EvPeriodic watcher object]
EvPeriodic::again[Simply stops and restarts the periodicwatcher again.]
EvPeriodic::at[Returns the absolute time that this watcheris supposed to trigger next]
EvPeriodic::createStopped[Create a stopped EvPeriodic watcher]
EvPeriodic::set[Configures the watcher]
EvPrepare::__construct[EvPrepare ウォッチャーオブジェクトを作る]
EvPrepare::createStopped[停止した EvPrepare ウォッチャーのインスタンスを作る]
EvSignal::__construct[Constructs EvPeriodic watcher object]
EvSignal::createStopped[Create stopped EvSignal watcherobject]
EvSignal::set[Configures the watcher]
EvStat::__construct[Constructs EvStat watcher object]
EvStat::attr[Returns the values most recently detected byEv]
EvStat::createStopped[Create a stopped EvStat watcherobject]
EvStat::prev[Returns the previous set of values returnedby EvStat::attr]
EvStat::set[Configures the watcher]
EvStat::stat[Initiates the stat call]
EvTimer::__construct[Constructs an EvTimer watcher object]
EvTimer::again[Restarts the timer watcher]
EvTimer::createStopped[Creates EvTimer stopped watcherobject]
EvTimer::set[Configures the watcher]
EvWatcher::__construct[Abstract constructor of a watcherobject]
EvWatcher::clear[Clear watcher pending status]
EvWatcher::feed[Feeds the given revents set into the eventloop]
EvWatcher::getLoop[Returns the loop responsible for thewatcher]
EvWatcher::invoke[Invokes the watcher callback with the givenreceived events bit mask]
EvWatcher::keepalive[Configures whether to keep the loop fromreturning]
EvWatcher::setCallback[Sets new callback for the watcher]
EvWatcher::start[Starts the watcher]
EvWatcher::stop[Stops the watcher]
Exception::__clone[例外をコピーする]
Exception::__toString[例外の文字列表現]
Exception::getCode[例外コードを取得する]
Exception::getFile[例外が発生したファイルを取得する]
Exception::getLine[例外が発生した行を取得する]
Exception::getMessage[例外メッセージを取得する]
Exception::getPrevious[前の例外を返す]
Exception::getTraceAsString[スタックトレースを文字列で取得する]
Exception::getTrace[スタックトレースを取得する]
FilesystemIterator::__construct[新しい filesystem イテレータを作成する]
FilesystemIterator::current[現在のファイル]
FilesystemIterator::getFlags[処理フラグを取得する]
FilesystemIterator::key[現在のファイルのキーを取得する]
FilesystemIterator::next[次のファイルに移動する]
FilesystemIterator::rewind[先頭に巻き戻す]
FilesystemIterator::setFlags[処理フラグを設定する]
FilterIterator::__construct[filterIterator を作成する]
FilterIterator::accept[イテレータの現在の要素がフィルタを満たすかどうかを調べる]
FilterIterator::current[現在の要素の値を取得する]
FilterIterator::getInnerIterator[内部イテレータを取得する]
FilterIterator::key[現在のキーを取得する]
FilterIterator::next[イテレータを前に移動する]
FilterIterator::rewind[イテレータを巻き戻す]
FilterIterator::valid[現在の要素が有効かどうかをチェックする]
FrenchToJD[フランス革命暦をユリウス積算日に変換する]
GearmanClient::__construct[Create a GearmanClient instance]
GearmanClient::addOptions[Add client options]
GearmanClient::addServer[Add a job server to the client]
GearmanClient::addServers[Add a list of job servers to theclient]
GearmanClient::addTaskBackground[Add a background task to be run inparallel]
GearmanClient::addTaskHighBackground[Add a high priority background task to berun in parallel]
GearmanClient::addTaskHigh[Add a high priority task to run inparallel]
GearmanClient::addTaskLowBackground[Add a low priority background task to be runin parallel]
GearmanClient::addTaskLow[Add a low priority task to run inparallel]
GearmanClient::addTaskStatus[Add a task to get status]
GearmanClient::addTask[Add a task to be run in parallel]
GearmanClient::clearCallbacks[Clear all task callback functions]
GearmanClient::clone[Create a copy of a GearmanClient object]
GearmanClient::context[Get the application context]
GearmanClient::data[Get the application data (deprecated)]
GearmanClient::doBackground[Run a task in the background]
GearmanClient::doHighBackground[Run a high priority task in thebackground]
GearmanClient::doHigh[Run a single high priority task]
GearmanClient::doJobHandle[Get the job handle for the runningtask]
GearmanClient::doLowBackground[Run a low priority task in thebackground]
GearmanClient::doLow[Run a single low priority task]
GearmanClient::doNormal[Run a single task and return a result]
GearmanClient::doStatus[Get the status for the running task]
GearmanClient::do[Run a single task and return a result(deprecated)]
GearmanClient::echo[Send data to all job servers to see if theyecho it back (deprecated)]
GearmanClient::error[Returns an error string for the last errorencountered.]
GearmanClient::getErrno[Get an errno value]
GearmanClient::jobStatus[Get the status of a background job]
GearmanClient::ping[Send data to all job servers to see if theyecho it back]
GearmanClient::removeOptions[Remove client options]
GearmanClient::returnCode[Get the last Gearman return code]
GearmanClient::runTasks[Run a list of tasks in parallel]
GearmanClient::setClientCallback[Callback function when there is a datapacket for a task (deprecated)]
GearmanClient::setCompleteCallback[Set a function to be called on taskcompletion]
GearmanClient::setContext[Set application context]
GearmanClient::setCreatedCallback[Set a callback for when a task isqueued]
GearmanClient::setDataCallback[Callback function when there is a datapacket for a task]
GearmanClient::setData[Set application data (deprecated)]
GearmanClient::setExceptionCallback[Set a callback for worker exceptions]
GearmanClient::setFailCallback[Set callback for job failure]
GearmanClient::setOptions[Set client options]
GearmanClient::setStatusCallback[Set a callback for collecting taskstatus]
GearmanClient::setTimeout[Set socket I/O activity timeout]
GearmanClient::setWarningCallback[Set a callback for worker warnings]
GearmanClient::setWorkloadCallback[Set a callback for accepting incrementaldata updates]
GearmanClient::timeout[Get current socket I/O activity timeoutvalue]
GearmanJob::__construct[Create a GearmanJob instance]
GearmanJob::complete[Send the result and complete status(deprecated)]
GearmanJob::data[Send data for a running job(deprecated)]
GearmanJob::exception[Send exception for running job(deprecated)]
GearmanJob::fail[Send fail status (deprecated)]
GearmanJob::functionName[Get function name]
GearmanJob::handle[Get the job handle]
GearmanJob::returnCode[Get last return code]
GearmanJob::sendComplete[Send the result and complete status]
GearmanJob::sendData[Send data for a running job]
GearmanJob::sendException[Send exception for running job(exception)]
GearmanJob::sendFail[Send fail status]
GearmanJob::sendStatus[Send status]
GearmanJob::sendWarning[Send a warning]
GearmanJob::setReturn[Set a return value]
GearmanJob::status[Send status (deprecated)]
GearmanJob::unique[Get the unique identifier]
GearmanJob::warning[Send a warning (deprecated)]
GearmanJob::workloadSize[Get size of work load]
GearmanJob::workload[Get workload]
GearmanTask::__construct[Create a GearmanTask instance]
GearmanTask::create[Create a task (deprecated)]
GearmanTask::dataSize[Get the size of returned data]
GearmanTask::data[Get data returned for a task]
GearmanTask::functionName[Get associated function name]
GearmanTask::function[Get associated function name(deprecated)]
GearmanTask::isKnown[Determine if task is known]
GearmanTask::isRunning[Test whether the task is currentlyrunning]
GearmanTask::jobHandle[Get the job handle]
GearmanTask::recvData[Read work or result data into a buffer for atask]
GearmanTask::returnCode[Get the last return code]
GearmanTask::sendData[Send data for a task (deprecated)]
GearmanTask::sendWorkload[Send data for a task]
GearmanTask::taskDenominator[Get completion percentage denominator]
GearmanTask::taskNumerator[Get completion percentage numerator]
GearmanTask::unique[Get the unique identifier for a task]
GearmanTask::uuid[Get the unique identifier for a task(deprecated)]
GearmanWorker::__construct[Create a GearmanWorker instance]
GearmanWorker::addFunction[Register and add callback function]
GearmanWorker::addOptions[Add worker options]
GearmanWorker::addServer[Add a job server]
GearmanWorker::addServers[Add job servers]
GearmanWorker::clone[Create a copy of the worker]
GearmanWorker::echo[Test job server response]
GearmanWorker::error[Get the last error encountered]
GearmanWorker::getErrno[Get errno]
GearmanWorker::options[Get worker options]
GearmanWorker::register[Register a function with the jobserver]
GearmanWorker::removeOptions[Remove worker options]
GearmanWorker::returnCode[Get last Gearman return code]
GearmanWorker::setId[Give the worker an identifier so it can betracked when asking gearmand for the list of availableworkers.]
GearmanWorker::setOptions[Set worker options]
GearmanWorker::setTimeout[Set socket I/O activity timeout]
GearmanWorker::timeout[Get socket I/O activity timeout]
GearmanWorker::unregisterAll[Unregister all function names with the jobservers]
GearmanWorker::unregister[Unregister a function name with the jobservers]
GearmanWorker::wait[Wait for activity from one of the jobservers]
GearmanWorker::work[Wait for and perform jobs]
Gender-Gender::__construct[Gender オブジェクトを作る]
Gender-Gender::connect[外部の名前ディレクトリに接続する]
Gender-Gender::country[国を表すテキストを取得する]
Gender-Gender::get[性別を取得する]
GlobIterator::__construct[glob を使うディレクトリを作成する]
GlobIterator::count[ディレクトリやファイルの数を取得する]
Gmagick::__construct[Gmagick のコンストラクタ]
Gmagick::addimage[新しい画像を Gmagick オブジェクトの画像リストに追加する]
Gmagick::addnoiseimage[ランダムなノイズを画像に追加する]
Gmagick::annotateimage[画像にテキストによる注記を加える]
Gmagick::blurimage[blur (にじみ) フィルタを画像に追加する]
Gmagick::borderimage[画像の周りを枠線で囲む]
Gmagick::charcoalimage[木炭画をシミュレートする]
Gmagick::chopimage[画像の一部を取り除き、切り詰める]
Gmagick::clear[Gmagick オブジェクトに関連付けられたすべてのリソースをクリアする]
Gmagick::commentimage[コメントを画像に追加する]
Gmagick::compositeimage[ある画像を別の画像に合成する]
Gmagick::cropimage[画像の一部を抽出する]
Gmagick::cropthumbnailimage[切り取ってサムネイルを作成する]
Gmagick::current[現在の Gmagick オブジェクトへの参照を返す]
Gmagick::cyclecolormapimage[画像のカラーマップを移動する]
Gmagick::deconstructimages[画像間の特定のピクセルの差を返す]
Gmagick::despeckleimage[画像内のスペックルノイズを軽減する]
Gmagick::destroy[Gmagick オブジェクトを破棄する]
Gmagick::drawimage[現在の画像上の GmagickDraw オブジェクトをレンダリングする]
Gmagick::edgeimage[画像の輪郭を強調する]
Gmagick::embossimage[グレースケール画像に三次元効果を施して返す]
Gmagick::enhanceimage[ノイジーな画像の品質を向上させる]
Gmagick::equalizeimage[画像ヒストグラムを均等化する]
Gmagick::flipimage[垂直方向に反転した画像を作成する]
Gmagick::flopimage[水平方向に反転した画像を作成する]
Gmagick::frameimage[三次元の枠線をシミュレートする]
Gmagick::gammaimage[画像をガンマ補正する]
Gmagick::getcopyright[GraphicsMagick API の著作権情報を文字列で返す]
Gmagick::getfilename[画像シーケンスに関連付けられたファイル名を取得する]
Gmagick::getimagebackgroundcolor[画像の背景色を返す]
Gmagick::getimageblueprimary[青が一番強い点を返す]
Gmagick::getimagebordercolor[画像の前景色を返す]
Gmagick::getimagechanneldepth[特定の画像チャネルの深度を返す]
Gmagick::getimagecolors[指定した色マップインデックスの色を返す]
Gmagick::getimagecolorspace[画像の色空間を取得する]
Gmagick::getimagecompose[画像の合成演算子を返す]
Gmagick::getimagedelay[画像の遅延を取得する]
Gmagick::getimagedepth[画像の深度を取得する]
Gmagick::getimagedispose[画像の配置方法を取得する]
Gmagick::getimageextrema[画像の極値を取得する]
Gmagick::getimagefilename[シーケンス内の特定の画像のファイル名を返す]
Gmagick::getimageformat[シーケンス内の特定の画像のフォーマットを返す]
Gmagick::getimagegamma[画像のガンマを取得する]
Gmagick::getimagegreenprimary[緑が一番強い点を返す]
Gmagick::getimageheight[画像の高さを返す]
Gmagick::getimagehistogram[画像のヒストグラムを取得する]
Gmagick::getimageindex[現在アクティブな画像のインデックスを取得する]
Gmagick::getimageinterlacescheme[画像のインターレース手法を取得する]
Gmagick::getimageiterations[画像の反復を取得する]
Gmagick::getimagematte[画像がマットチャネルを持っているかどうかを返す]
Gmagick::getimagemattecolor[画像のマット色を返す]
Gmagick::getimageprofile[指定した名前の画像プロファイルを返す]
Gmagick::getimageredprimary[赤が一番強い点を返す]
Gmagick::getimagerenderingintent[画像のレンダリング方向を取得する]
Gmagick::getimageresolution[画像の X 方向と Y 方向の解像度を取得する]
Gmagick::getimagescene[画像のシーンを取得する]
Gmagick::getimagesignature[SHA-256 メッセージダイジェストを生成する]
Gmagick::getimagetype[画像の型を取得する]
Gmagick::getimageunits[画像の解像度の単位を取得する]
Gmagick::getimagewhitepoint[色度が白い点を返す]
Gmagick::getimagewidth[画像の幅を返す]
Gmagick::getpackagename[GraphicsMagick パッケージ名を返す]
Gmagick::getquantumdepth[Gmagick quantum depth を取得する]
Gmagick::getreleasedate[GraphicsMagick のリリース日を返す]
Gmagick::getsamplingfactors[水平方向および垂直方向のサンプリング係数を取得する]
Gmagick::getsize[Gmagick オブジェクトのサイズを取得する]
Gmagick::getversion[GraphicsMagick API のバージョンを返す]
Gmagick::hasnextimage[オブジェクトが次の画像を保持しているかどうかを調べる]
Gmagick::haspreviousimage[オブジェクトが前の画像を保持しているかどうかを調べる]
Gmagick::implodeimage[新しい画像をコピーとして作成する]
Gmagick::labelimage[ラベルを画像に追加する]
Gmagick::levelimage[画像のレベルを調節する]
Gmagick::magnifyimage[画像を二倍に比例拡大する]
Gmagick::mapimage[画像の色を、参照画像の中の最も近い色に置き換える]
Gmagick::medianfilterimage[デジタルフィルタを適用する]
Gmagick::minifyimage[画像をその半分のサイズに比例縮小する]
Gmagick::modulateimage[明度、彩度、色相を制御する]
Gmagick::motionblurimage[モーションブラーをシミュレートする]
Gmagick::newimage[新しい画像を作成する]
Gmagick::nextimage[次の画像に移動する]
Gmagick::normalizeimage[カラー画像のコントラストを強調する]
Gmagick::oilpaintimage[油絵をシミュレートする]
Gmagick::previousimage[オブジェクト内の前の画像に移動する]
Gmagick::profileimage[画像のプロファイルを追加あるいは削除する]
Gmagick::quantizeimage[参照画像内の色を解析する]
Gmagick::quantizeimages[画像シーケンス内の色を解析する]
Gmagick::queryfontmetrics[フォントメトリクスを表す配列を返す]
Gmagick::queryfonts[設定したフォントを返す]
Gmagick::queryformats[Gmagick がサポートするフォーマットを返す]
Gmagick::radialblurimage[画像にラジアルブラーを施す]
Gmagick::raiseimage[三次元のボタン風の効果をシミュレートする]
Gmagick::read[ファイルから画像を読み込む]
Gmagick::readimage[ファイルから画像を読み込む]
Gmagick::readimageblob[バイナリ文字列から画像を読み込む]
Gmagick::readimagefile[オープンしているファイルハンドルから画像を読み込む]
Gmagick::reducenoiseimage[画像の輪郭をなめらかにする]
Gmagick::removeimage[画像リストから画像を削除する]
Gmagick::removeimageprofile[指定した名前の画像プロファイルを削除して返す]
Gmagick::resampleimage[画像を指定した解像度にリサンプリングする]
Gmagick::resizeimage[画像のサイズを変更する]
Gmagick::rollimage[画像を補正する]
Gmagick::rotateimage[画像を回転する]
Gmagick::scaleimage[画像のサイズを変更する]
Gmagick::separateimagechannel[画像からチャネルを分離する]
Gmagick::setfilename[画像を読み書きする前にファイル名を設定する]
Gmagick::setimagebackgroundcolor[画像の背景色を設定する]
Gmagick::setimageblueprimary[青が一番強い点を設定する]
Gmagick::setimagebordercolor[画像の前景色を設定する]
Gmagick::setimagechanneldepth[特定の画像チャネルの深度を設定する]
Gmagick::setimagecolorspace[画像の色空間を設定する]
Gmagick::setimagecompose[画像の合成演算子を設定する]
Gmagick::setimagedelay[画像の遅延を設定する]
Gmagick::setimagedepth[画像の深度を設定する]
Gmagick::setimagedispose[画像の配置方法を設定する]
Gmagick::setimagefilename[シーケンス内の特定の画像のファイル名を設定する]
Gmagick::setimageformat[特定の画像のフォーマットを設定する]
Gmagick::setimagegamma[画像のガンマを設定する]
Gmagick::setimagegreenprimary[緑が一番強い点を設定する]
Gmagick::setimageindex[画像リスト内でのイテレータの位置を、indexパラメータで指定した場所に設定する]
Gmagick::setimageinterlacescheme[画像のインターレース手法を設定する]
Gmagick::setimageiterations[画像の反復を設定する]
Gmagick::setimageprofile[指定した名前の画像プロファイルを Gmagick オブジェクトに追加する]
Gmagick::setimageredprimary[赤が一番強い点を設定する]
Gmagick::setimagerenderingintent[画像のレンダリング方向を設定する]
Gmagick::setimageresolution[画像の解像度を設定する]
Gmagick::setimagescene[画像のシーンを設定する]
Gmagick::setimagetype[画像の型を設定する]
Gmagick::setimageunits[画像の解像度の単位を設定する]
Gmagick::setimagewhitepoint[画像の色度が白い点を設定する]
Gmagick::setsamplingfactors[画像のサンプリング係数を設定する]
Gmagick::setsize[Gmagick オブジェクトのサイズを設定する]
Gmagick::shearimage[平行四辺形を作成する]
Gmagick::solarizeimage[画像にソラリゼーション効果を適用する]
Gmagick::spreadimage[ブロック内の各ピクセルをランダムに移動する]
Gmagick::stripimage[画像からすべてのプロパティやコメントを除去する]
Gmagick::swirlimage[画像の中心から、ピクセルを渦巻状にする]
Gmagick::thumbnailimage[画像のサイズを変更する]
Gmagick::trimimage[画像の輪郭を削除する]
Gmagick::write[画像を指定したファイル名で書き出す]
Gmagick::writeimage[画像を指定したファイル名で書き出す]
GmagickDraw::annotate[画像の上にテキストを描画する]
GmagickDraw::arc[弧を描く]
GmagickDraw::bezier[ベジエ曲線を描く]
GmagickDraw::ellipse[楕円を画像上に描く]
GmagickDraw::getfillcolor[塗りつぶし色を返す]
GmagickDraw::getfillopacity[描画に使う不透明度を返す]
GmagickDraw::getfont[フォントを返す]
GmagickDraw::getfontsize[フォントのポイント数を返す]
GmagickDraw::getfontstyle[フォントスタイルを返す]
GmagickDraw::getfontweight[フォントのウェイトを返す]
GmagickDraw::getstrokecolor[オブジェクトの輪郭の描画に使う色を返す]
GmagickDraw::getstrokeopacity[オブジェクトの輪郭の不透明度を返す]
GmagickDraw::getstrokewidth[オブジェクトの輪郭の描画に使う線の幅を返す]
GmagickDraw::gettextdecoration[テキストのデコレーションを返す]
GmagickDraw::gettextencoding[テキストのアノテーションで使うコードセットを返す]
GmagickDraw::line[直線を描く]
GmagickDraw::point[点を描く]
GmagickDraw::polygon[多角形を描く]
GmagickDraw::polyline[ポリラインを描く]
GmagickDraw::rectangle[矩形を描く]
GmagickDraw::rotate[指定した回転角を現在の座標空間に適用する]
GmagickDraw::roundrectangle[角が丸い矩形を描く]
GmagickDraw::scale[倍率を調整する]
GmagickDraw::setfillcolor[オブジェクトの塗りつぶしに使う色を設定する]
GmagickDraw::setfillopacity[不透明度を設定する]
GmagickDraw::setfont[テキストのアノテーションで使うフォントの完全な名前を設定する]
GmagickDraw::setfontsize[テキストのアノテーションで使うフォントのポイント数を設定する]
GmagickDraw::setfontstyle[テキストのアノテーションで使うフォントのスタイルを設定する]
GmagickDraw::setfontweight[フォントのウェイトを設定する]
GmagickDraw::setstrokecolor[オブジェクトの輪郭の描画に使う色を設定する]
GmagickDraw::setstrokeopacity[オブジェクトの輪郭の不透明度を設定する]
GmagickDraw::setstrokewidth[オブジェクトの輪郭の描画に使う線の幅を設定する]
GmagickDraw::settextdecoration[デコレーションを設定する]
GmagickDraw::settextencoding[テキストのコードセットを設定する]
GmagickPixel::__construct[GmagickPixel のコンストラクタ]
GmagickPixel::getcolor[色を返す]
GmagickPixel::getcolorcount[この色の色カウントを返す]
GmagickPixel::getcolorvalue[指定した色チャネルの正規化した値を取得する]
GmagickPixel::setcolor[色を設定する]
GmagickPixel::setcolorvalue[色チャネルの正規化した値を設定する]
GregorianToJD[グレゴリウス日をユリウス積算日に変換する]
HaruAnnotation::setBorderStyle[アノテーションの枠の形式を設定する]
HaruAnnotation::setHighlightMode[アノテーションの強調モードを設定する]
HaruAnnotation::setIcon[アノテーションのアイコンの形式を設定する]
HaruAnnotation::setOpened[アノテーションの初期状態を設定する]
HaruDestination::setFitBH[ページの表示を、バウンディングボックスの幅にあわせるよう設定する]
HaruDestination::setFitBV[ページの表示を、バウンディングボックスの高さにあわせるよう設定する]
HaruDestination::setFitB[ページの表示を、ページのバウンディングボックスをウィンドウにあわせるよう設定する]
HaruDestination::setFitH[ページの表示を、ウィンドウの幅にあわせるよう設定する]
HaruDestination::setFitR[ページの表示を、指定した矩形にあわせるよう設定する]
HaruDestination::setFitV[ページの表示を、ウィンドウの高さにあわせるよう設定する]
HaruDestination::setFit[ページの表示を、ウィンドウにあわせるよう設定する]
HaruDestination::setXYZ[ページの表示を設定する]
HaruDoc::__construct[新しい HaruDocのインスタンスを作成する]
HaruDoc::addPageLabel[指定した範囲のページにおけるページラベルの形式を設定する]
HaruDoc::addPage[新しいページをドキュメントに追加する]
HaruDoc::createOutline[HaruOutlineのインスタンスを作成する]
HaruDoc::getCurrentEncoder[ドキュメントが現在使用している HaruEncoderを取得する]
HaruDoc::getCurrentPage[ドキュメントの現在のページを返す]
HaruDoc::getEncoder[指定したエンコーディングの HaruEncoderのインスタンスを取得する]
HaruDoc::getFont[HaruFontのインスタンスを取得する]
HaruDoc::getInfoAttr[指定したドキュメント属性の現在の値を取得する]
HaruDoc::getPageLayout[現在のページレイアウトを取得する]
HaruDoc::getPageMode[現在のページモードを取得する]
HaruDoc::getStreamSize[一時ストリームの大きさを取得する]
HaruDoc::insertPage[指定したページの直前に新しいページを挿入する]
HaruDoc::loadJPEG[JPEG 画像を読み込む]
HaruDoc::loadPNG[PNG 画像を読み込み、HaruImageのインスタンスを返す]
HaruDoc::loadRaw[RAW 画像を読み込む]
HaruDoc::loadTTC[TTC ファイルから指定したインデックスのフォントを読み込む]
HaruDoc::loadTTF[TTF フォントファイルを読み込む]
HaruDoc::loadType1[Type1 フォントを読み込む]
HaruDoc::output[ドキュメントデータを出力バッファに書き出す]
HaruDoc::readFromStream[データを一時ストリームから読み込む]
HaruDoc::resetError[ドキュメントハンドルのエラーの状態をリセットする]
HaruDoc::resetStream[一時ストリームを巻き戻す]
HaruDoc::saveToStream[ドキュメントを一時ストリームに保存する]
HaruDoc::save[ドキュメントを指定したファイルに保存する]
HaruDoc::setCompressionMode[ドキュメントの圧縮モードを設定する]
HaruDoc::setCurrentEncoder[ドキュメントの現在のエンコーダを設定する]
HaruDoc::setEncryptionMode[ドキュメントの暗号化モードを設定する]
HaruDoc::setInfoAttr[ドキュメントの情報属性を設定する]
HaruDoc::setInfoDateAttr[ドキュメントの情報属性に日付と時刻を設定する]
HaruDoc::setOpenAction[ドキュメントを開いたときにどのページを表示するかを定義する]
HaruDoc::setPageLayout[ページをどのように表示するかを設定する]
HaruDoc::setPageMode[ドキュメントをどのように表示するかを設定する]
HaruDoc::setPagesConfiguration[ページ群単位のページ数を設定する]
HaruDoc::setPassword[ドキュメントに所有者パスワードおよびユーザーパスワードを設定する]
HaruDoc::setPermission[ドキュメントの使用権限を設定する]
HaruDoc::useCNSEncodings[簡体字中国語エンコーディングを有効にする]
HaruDoc::useCNSFonts[組み込みの簡体字中国語フォントを有効にする]
HaruDoc::useCNTEncodings[繁体字中国語エンコーディングを有効にする]
HaruDoc::useCNTFonts[組み込みの繁体字中国語フォントを有効にする]
HaruDoc::useJPEncodings[日本語エンコーディングを有効にする]
HaruDoc::useJPFonts[組み込みの日本語フォントを有効にする]
HaruDoc::useKREncodings[韓国/朝鮮語エンコーディングを有効にする]
HaruDoc::useKRFonts[組み込みの韓国/朝鮮語フォントを有効にする]
HaruEncoder::getByteType[テキスト内のバイトの型を取得する]
HaruEncoder::getType[エンコーダの型を取得する]
HaruEncoder::getUnicode[指定した文字を unicode に変換する]
HaruEncoder::getWritingMode[エンコーダの書き込みモードを取得する]
HaruFont::getAscent[フォントの垂直 ascent を取得する]
HaruFont::getCapHeight[大文字のベースラインからの距離を取得する]
HaruFont::getDescent[フォントの垂直 descent を取得する]
HaruFont::getEncodingName[エンコーディング名を取得する]
HaruFont::getFontName[フォント名を取得する]
HaruFont::getTextWidth[テキスト全体の幅、文字数、単語数および空白の数を取得する]
HaruFont::getUnicodeWidth[フォントの文字の幅を取得する]
HaruFont::getXHeight[小文字のベースラインからの距離を取得する]
HaruFont::measureText[指定した幅に収めることのできる文字数を計算する]
HaruImage::getBitsPerComponent[画像の各色コンポーネントで使用するビット数を取得する]
HaruImage::getColorSpace[色空間の名前を取得する]
HaruImage::getHeight[画像の高さを取得する]
HaruImage::getSize[画像の大きさを取得する]
HaruImage::getWidth[画像の幅を取得する]
HaruImage::setColorMask[画像の色マスクを設定する]
HaruImage::setMaskImage[画像マスクを設定する]
HaruOutline::setDestination[アウトラインの対象を設定する]
HaruOutline::setOpened[アウトラインの初期状態を設定する]
HaruPage::arc[現在のパスに弧を追加する]
HaruPage::beginText[テキストオブジェクトを開始し、テキストの現在位置を (0,0) に設定する]
HaruPage::circle[現在のパスに円を追加する]
HaruPage::closePath[現在の位置からパスの開始位置に直線を追加する]
HaruPage::concat[現在のページの変換行列と指定した行列を連結する]
HaruPage::createDestination[新しい HaruDestination のインスタンスを作成する]
HaruPage::createLinkAnnotation[新しい HaruAnnotation のインスタンスを作成する]
HaruPage::createTextAnnotation[新しい HaruAnnotation のインスタンスを作成する]
HaruPage::createURLAnnotation[新しい HaruAnnotation のインスタンスを作成する]
HaruPage::curveTo2[ベジエ曲線を現在のパスに追加する]
HaruPage::curveTo3[ベジエ曲線を現在のパスに追加する]
HaruPage::curveTo[ベジエ曲線を現在のパスに追加する]
HaruPage::drawImage[画像をページに表示する]
HaruPage::ellipse[楕円を現在のパスに追加する]
HaruPage::endPath[塗りつぶしや描画を行わずに現在のパスオブジェクトを終了する]
HaruPage::endText[現在のテキストオブジェクトを終了する]
HaruPage::eoFillStroke[奇偶規則を使用して現在のパスを塗りつぶす]
HaruPage::eofill[奇偶規則を使用して現在のパスを塗りつぶす]
HaruPage::fillStroke[ノンゼロワインディング規則を使用して現在のパスを塗りつぶす]
HaruPage::fill[ノンゼロワインディング規則を使用して現在のパスを塗りつぶす]
HaruPage::getCMYKFill[現在の塗りつぶし色を取得する]
HaruPage::getCMYKStroke[現在の描画色を取得する]
HaruPage::getCharSpace[現在の文字間隔を取得する]
HaruPage::getCurrentFontSize[現在のフォントのサイズを取得する]
HaruPage::getCurrentFont[現在使用中のフォントを取得する]
HaruPage::getCurrentPos[パスの描画用の現在の位置を取得する]
HaruPage::getCurrentTextPos[テキストの印字用の現在の位置を取得する]
HaruPage::getDash[現在の破線のパターンを取得する]
HaruPage::getFillingColorSpace[現在の塗りつぶしの色空間を取得する]
HaruPage::getFlatness[ページの平坦度を取得する]
HaruPage::getGMode[現在のグラフィックスモードを取得する]
HaruPage::getGrayFill[現在の塗りつぶし色を取得する]
HaruPage::getGrayStroke[現在の描画色を取得する]
HaruPage::getHeight[ページの高さを取得する]
HaruPage::getHorizontalScaling[現在の水平方向の拡大率を取得する]
HaruPage::getLineCap[現在のパスの終端の形式を取得する]
HaruPage::getLineJoin[現在のパスの角の形式を取得する]
HaruPage::getLineWidth[現在の線幅を取得する]
HaruPage::getMiterLimit[マイターリミットの値を取得する]
HaruPage::getRGBFill[現在の塗りつぶし色を取得する]
HaruPage::getRGBStroke[現在の描画色を取得する]
HaruPage::getStrokingColorSpace[現在の描画の色空間を取得する]
HaruPage::getTextLeading[現在の行間隔の値を取得する]
HaruPage::getTextMatrix[そのページの現在のテキスト変換行列を取得する]
HaruPage::getTextRenderingMode[現在のテキストのレンダリングモードを取得する]
HaruPage::getTextRise[現在のテキストライズの値を取得する]
HaruPage::getTextWidth[現在のフォントサイズ、文字エンコーディングおよび単語間隔を使用してテキストの幅を取得する]
HaruPage::getTransMatrix[そのページの現在の変換行列を取得する]
HaruPage::getWidth[ページの幅を取得する]
HaruPage::getWordSpace[現在の単語間隔の値を取得する]
HaruPage::lineTo[現在位置から指定した位置まで直線を描画する]
HaruPage::measureText[指定した幅の中に配置できる文字の数を計算する]
HaruPage::moveTextPos[テキストの位置を、指定したオフセットに移動する]
HaruPage::moveToNextLine[テキストの位置を次の行の行頭に移動する]
HaruPage::moveTo[新しい描画パスの開始位置を設定する]
HaruPage::rectangle[現在のパスに矩形を追加する]
HaruPage::setCMYKFill[ページの塗りつぶし色を設定する]
HaruPage::setCMYKStroke[ページの描画色を設定する]
HaruPage::setCharSpace[ページの文字間隔を設定する]
HaruPage::setDash[ページの破線パターンを設定する]
HaruPage::setFlatness[ページの平坦度を設定する]
HaruPage::setFontAndSize[ページのフォントおよびフォントサイズを設定する]
HaruPage::setGrayFill[ページの塗りつぶし色を設定する]
HaruPage::setGrayStroke[ページの描画色を設定する]
HaruPage::setHeight[ページの高さを設定する]
HaruPage::setHorizontalScaling[ページの横方向の拡大率を設定する]
HaruPage::setLineCap[パスの終端の形式を設定する]
HaruPage::setLineJoin[そのページのパスの角の形式を設定する]
HaruPage::setLineWidth[ページの線幅を設定する]
HaruPage::setMiterLimit[ページのマイターリミットの現在値を設定する]
HaruPage::setRGBFill[ページの塗りつぶし色を設定する]
HaruPage::setRGBStroke[ページの描画色を設定する]
HaruPage::setRotate[ページの回転角度を設定する]
HaruPage::setSize[ページのサイズおよび方向を設定する]
HaruPage::setSlideShow[ページの移動方式を設定する]
HaruPage::setTextLeading[ページのテキストリーディング (行間隔) を設定する]
HaruPage::setTextMatrix[そのページの現在のテキスト変換行列を設定する]
HaruPage::setTextRenderingMode[そのページの現在のテキストのレンダリングモードを設定する]
HaruPage::setTextRise[現在のテキストライズの値を設定する]
HaruPage::setWidth[ページの幅を設定する]
HaruPage::setWordSpace[ページの単語間隔を設定する]
HaruPage::showTextNextLine[現在位置を次の行の行頭に移動してテキストを表示する]
HaruPage::showText[ページの現在位置にテキストを表示する]
HaruPage::stroke[現在のパスを描画する]
HaruPage::textOut[テキストを指定した位置に表示する]
HaruPage::textRect[指定した領域内にテキストを表示する]
HttpDeflateStream::__construct[HttpDeflateStream クラスのコンストラクタ]
HttpDeflateStream::factory[HttpDeflateStream クラスのファクトリ]
HttpDeflateStream::finish[圧縮ストリームを終了する]
HttpDeflateStream::flush[圧縮ストリームをフラッシュする]
HttpDeflateStream::update[圧縮ストリームを更新する]
HttpInflateStream::__construct[HttpInflateStream クラスのコンストラクタ]
HttpInflateStream::factory[HttpInflateStream クラスのファクトリ]
HttpInflateStream::finish[展開ストリームを終了する]
HttpInflateStream::flush[展開ストリームをフラッシュする]
HttpInflateStream::update[展開ストリームを更新する]
HttpMessage::__construct[HttpMessage のコンストラクタ]
HttpMessage::addHeaders[ヘッダを追加する]
HttpMessage::detach[HttpMessage をデタッチする]
HttpMessage::factory[文字列から HttpMessage を作成する]
HttpMessage::fromEnv[環境から HttpMessage を作成する]
HttpMessage::fromString[文字列から HttpMessage を作成する]
HttpMessage::getBody[メッセージの本文を取得する]
HttpMessage::getHeader[ヘッダを取得する]
HttpMessage::getHeaders[メッセージのヘッダを取得する]
HttpMessage::getHttpVersion[HTTP バージョンを取得する]
HttpMessage::getParentMessage[親メッセージを取得する]
HttpMessage::getRequestMethod[リクエストメソッドを取得する]
HttpMessage::getRequestUrl[リクエスト URL を取得する]
HttpMessage::getResponseCode[レスポンスコードを取得する]
HttpMessage::getResponseStatus[レスポンスのステータスを取得する]
HttpMessage::getType[メッセージの型を取得する]
HttpMessage::guessContentType[content type を推測する]
HttpMessage::prepend[メッセージを先頭に追加する]
HttpMessage::reverse[メッセージチェインを逆順にする]
HttpMessage::send[メッセージを送信する]
HttpMessage::setBody[メッセージの本文を設定する]
HttpMessage::setHeaders[ヘッダを設定する]
HttpMessage::setHttpVersion[HTTP バージョンを設定する]
HttpMessage::setRequestMethod[リクエストメソッドを設定する]
HttpMessage::setRequestUrl[リクエスト URL を設定する]
HttpMessage::setResponseCode[レスポンスコードを設定する]
HttpMessage::setResponseStatus[レスポンスのステータスを設定する]
HttpMessage::setType[メッセージの型を設定する]
HttpMessage::toMessageTypeObject[メッセージの型に応じた HTTP オブジェクトを作成する]
HttpMessage::toString[文字列表現を取得する]
HttpQueryString::__construct[HttpQueryString のコンストラクタ]
HttpQueryString::get[クエリ文字列 (の一部) を取得する]
HttpQueryString::mod[クエリ文字列の複製を変更する]
HttpQueryString::set[クエリ文字列パラメータを設定する]
HttpQueryString::singleton[HttpQueryString のシングルトン]
HttpQueryString::toArray[クエリ文字列を配列で取得する]
HttpQueryString::toString[クエリ文字列を取得する]
HttpQueryString::xlate[クエリ文字列の文字セットを変更する]
HttpRequest::__construct[HttpRequest のコンストラクタ]
HttpRequest::addCookies[クッキーを追加する]
HttpRequest::addHeaders[ヘッダを追加する]
HttpRequest::addPostFields[POST フィールドを追加する]
HttpRequest::addPostFile[POST ファイルを追加する]
HttpRequest::addPutData[PUT データを追加する]
HttpRequest::addQueryData[クエリデータを追加する]
HttpRequest::addRawPostData[生の POST データを追加する]
HttpRequest::addSslOptions[SSL オプションを追加する]
HttpRequest::clearHistory[履歴を消去する]
HttpRequest::enableCookies[クッキーを有効にする]
HttpRequest::getContentType[content type を取得する]
HttpRequest::getCookies[クッキーを取得する]
HttpRequest::getHeaders[ヘッダを取得する]
HttpRequest::getHistory[履歴を取得する]
HttpRequest::getMethod[メソッドを取得する]
HttpRequest::getOptions[オプションを取得する]
HttpRequest::getPostFields[POST フィールドを取得する]
HttpRequest::getPostFiles[POST ファイルを取得する]
HttpRequest::getPutData[PUT データを取得する]
HttpRequest::getPutFile[PUT ファイルを取得する]
HttpRequest::getQueryData[クエリデータを取得する]
HttpRequest::getRawPostData[生の POST データを取得する]
HttpRequest::getRawRequestMessage[名前のリクエストメッセージを取得する]
HttpRequest::getRawResponseMessage[生のレスポンスメッセージを取得する]
HttpRequest::getRequestMessage[リクエストメッセージを取得する]
HttpRequest::getResponseBody[レスポンスの本文を取得する]
HttpRequest::getResponseCode[レスポンスコードを取得する]
HttpRequest::getResponseCookies[レスポンスのクッキーを取得する]
HttpRequest::getResponseData[レスポンスデータを取得する]
HttpRequest::getResponseHeader[レスポンスヘッダを取得する]
HttpRequest::getResponseInfo[レスポンスの情報を取得する]
HttpRequest::getResponseMessage[レスポンスメッセージを取得する]
HttpRequest::getResponseStatus[レスポンスのステータスを取得する]
HttpRequest::getSslOptions[ssl オプションを取得する]
HttpRequest::getUrl[url を取得する]
HttpRequest::resetCookies[クッキーをリセットする]
HttpRequest::send[リクエストを送信する]
HttpRequest::setBody[送信する本文を設定し、既に設定されている本文を上書きする]
HttpRequest::setContentType[content type を設定する]
HttpRequest::setCookies[クッキーを設定する]
HttpRequest::setHeaders[ヘッダを設定する]
HttpRequest::setMethod[メソッドを設定する]
HttpRequest::setOptions[オプションを設定する]
HttpRequest::setPostFields[POST フィールドを設定する]
HttpRequest::setPostFiles[POST ファイルを設定する]
HttpRequest::setPutData[PUT データを設定する]
HttpRequest::setPutFile[PUT ファイルを設定する]
HttpRequest::setQueryData[クエリデータを設定する]
HttpRequest::setRawPostData[生の POST データを設定する]
HttpRequest::setSslOptions[SSL オプションを設定する]
HttpRequest::setUrl[URL を設定する]
HttpRequestPool::__construct[HttpRequestPool のコンストラクタ]
HttpRequestPool::__destruct[HttpRequestPool のデストラクタ]
HttpRequestPool::attach[HttpRequest をアタッチする]
HttpRequestPool::detach[HttpRequest をデタッチする]
HttpRequestPool::getAttachedRequests[アタッチされているリクエストを取得する]
HttpRequestPool::getFinishedRequests[終了したリクエストを取得する]
HttpRequestPool::reset[リクエストプールをリセットする]
HttpRequestPool::send[すべてのリクエストを送信する]
HttpRequestPool::socketPerform[ソケットアクションを実行する]
HttpRequestPool::socketSelect[ソケットの選択を実行する]
HttpResponse::capture[スクリプトの出力を取り込む]
HttpResponse::getBufferSize[バッファサイズを取得する]
HttpResponse::getCacheControl[cache control を取得する]
HttpResponse::getCache[キャッシュを取得する]
HttpResponse::getContentDisposition[content disposition を取得する]
HttpResponse::getContentType[content type を取得する]
HttpResponse::getData[データを取得する]
HttpResponse::getETag[ETag を取得する]
HttpResponse::getFile[ファイルを取得する]
HttpResponse::getGzip[gzip を取得する]
HttpResponse::getHeader[ヘッダを取得する]
HttpResponse::getLastModified[最終更新日時を取得する]
HttpResponse::getRequestBodyStream[リクエストの本文をストリームとして取得する]
HttpResponse::getRequestBody[リクエストの本文を取得する]
HttpResponse::getRequestHeaders[リクエストのヘッダを取得する]
HttpResponse::getStream[ストリームを取得する]
HttpResponse::getThrottleDelay[throttle delay を取得する]
HttpResponse::guessContentType[content type を推測する]
HttpResponse::redirect[リダイレクトする]
HttpResponse::send[レスポンスを送信する]
HttpResponse::setBufferSize[バッファサイズを設定する]
HttpResponse::setCacheControl[cache control を設定する]
HttpResponse::setCache[キャッシュを設定する]
HttpResponse::setContentDisposition[content disposition を設定する]
HttpResponse::setContentType[content type を設定する]
HttpResponse::setData[データを設定する]
HttpResponse::setETag[ETag を設定する]
HttpResponse::setFile[ファイルを設定する]
HttpResponse::setGzip[gzip を設定する]
HttpResponse::setHeader[ヘッダを設定する]
HttpResponse::setLastModified[最終更新日時を設定する]
HttpResponse::setStream[ストリームを設定する]
HttpResponse::setThrottleDelay[throttle delay を設定する]
HttpResponse::status[HTTP レスポンスステータスを送信する]
Imagick::__construct[Imagick のコンストラクタ]
Imagick::adaptiveBlurImage[adaptive blur (順応性にじみ) フィルタを画像に追加する]
Imagick::adaptiveResizeImage[データに依存する三角測量にもとづいて画像のサイズを変更する]
Imagick::adaptiveSharpenImage[順応して画像をシャープにする]
Imagick::adaptiveThresholdImage[輝度の範囲にもとづいて各ピクセルの閾値を選択する]
Imagick::addImage[新しい画像を Imagick オブジェクトの画像リストに追加する]
Imagick::addNoiseImage[ランダムなノイズを画像に追加する]
Imagick::affineTransformImage[画像を変換する]
Imagick::animateImages[画像を動かす]
Imagick::annotateImage[画像にテキストによる注記を加える]
Imagick::appendImages[画像群を追加する]
Imagick::averageImages[画像群を平均化する]
Imagick::blackThresholdImage[閾値に満たないすべてのピクセルを黒にする]
Imagick::blurImage[blur (にじみ) フィルタを画像に追加する]
Imagick::borderImage[画像の周りを枠線で囲む]
Imagick::charcoalImage[木炭画をシミュレートする]
Imagick::chopImage[画像の一部を取り除き、切り詰める]
Imagick::clear[Imagick オブジェクトに関連付けられたすべてのリソースをクリアする]
Imagick::clipImage[8BIM プロファイルの最初のパスにそって切り取る]
Imagick::clipPathImage[8BIM プロファイルの指定した名前のパスにそって切り取る]
Imagick::clone[Imagick オブジェクトの完全なコピーを作成する]
Imagick::clutImage[画像の色を置き換える]
Imagick::coalesceImages[複数の画像を合成する]
Imagick::colorFloodfillImage[対象にマッチする任意の点の色の値を変更する]
Imagick::colorizeImage[塗りつぶし色と画像を混合する]
Imagick::combineImages[ひとつあるいは複数の画像をひとつにまとめる]
Imagick::commentImage[コメントを画像に追加する]
Imagick::compareImageChannels[ひとつあるいは複数の画像の差を返す]
Imagick::compareImageLayers[複数の画像の中で最大の境界範囲を返す]
Imagick::compareImages[ある画像を再構築された画像と比較する]
Imagick::compositeImage[ある画像を別の画像に合成する]
Imagick::contrastImage[画像のコントラストを変更する]
Imagick::contrastStretchImage[カラー画像のコントラストを強調する]
Imagick::convolveImage[独自の畳み込み関数を画像に適用する]
Imagick::cropImage[画像の一部を抽出する]
Imagick::cropThumbnailImage[切り取ってサムネイルを作成する]
Imagick::current[現在の Imagick オブジェクトへの参照を返す]
Imagick::cycleColormapImage[画像のカラーマップを移動する]
Imagick::decipherImage[画像を復号する]
Imagick::deconstructImages[画像間の特定のピクセルの差を返す]
Imagick::deleteImageArtifact[画像のアーチファクトを削除する]
Imagick::deskewImage[傾きを除去する]
Imagick::despeckleImage[画像内のスペックルノイズを軽減する]
Imagick::destroy[Imagick オブジェクトを破棄する]
Imagick::displayImage[画像を表示する]
Imagick::displayImages[画像あるいは画像シーケンスを表示する]
Imagick::distortImage[さまざまな方式で画像を歪める]
Imagick::drawImage[現在の画像上の ImagickDraw オブジェクトをレンダリングする]
Imagick::edgeImage[画像の輪郭を強調する]
Imagick::embossImage[グレースケール画像に三次元効果を施して返す]
Imagick::encipherImage[画像を暗号化する]
Imagick::enhanceImage[ノイジーな画像の品質を向上させる]
Imagick::equalizeImage[画像ヒストグラムを均等化する]
Imagick::evaluateImage[式を画像に適用する]
Imagick::exportImagePixels[画像の生のピクセルをエクスポートする]
Imagick::extentImage[画像のサイズを設定する]
Imagick::flattenImages[画像シーケンスをマージする]
Imagick::flipImage[垂直方向に反転した画像を作成する]
Imagick::floodFillPaintImage[対象にマッチする任意のピクセルの値を変更する]
Imagick::flopImage[水平方向に反転した画像を作成する]
Imagick::frameImage[三次元の枠線をシミュレートする]
Imagick::functionImage[画像に関数を適用する]
Imagick::fxImage[式を画像の各ピクセルに適用する]
Imagick::gammaImage[画像をガンマ補正する]
Imagick::gaussianBlurImage[画像をぼかす]
Imagick::getColorspace[色空間を取得する]
Imagick::getCompressionQuality[オブジェクトの圧縮品質を取得する]
Imagick::getCompression[オブジェクトの圧縮形式を取得する]
Imagick::getCopyright[ImageMagick API の著作権情報を文字列で返す]
Imagick::getFilename[画像シーケンスに関連付けられたファイル名を取得する]
Imagick::getFont[フォントを取得する]
Imagick::getFormat[Imagick オブジェクトのフォーマットを取得する]
Imagick::getGravity[gravity を取得する]
Imagick::getHomeURL[ImageMagick のホーム URL を返す]
Imagick::getImageAlphaChannel[画像のアルファチャネルを取得する]
Imagick::getImageArtifact[画像のアーチファクトを取得する]
Imagick::getImageBackgroundColor[画像の背景色を返す]
Imagick::getImageBlob[画像シーケンスを blob で返す]
Imagick::getImageBluePrimary[青が一番強い点を返す]
Imagick::getImageBorderColor[画像の前景色を返す]
Imagick::getImageChannelDepth[特定の画像チャネルの深度を返す]
Imagick::getImageChannelDistortion[画像のチャネルを再構築した画像と比較する]
Imagick::getImageChannelDistortions[チャネルの歪みを取得する]
Imagick::getImageChannelExtrema[ひとつあるいは複数の画像チャネルの極値を取得する]
Imagick::getImageChannelKurtosis[getImageChannelKurtosis]
Imagick::getImageChannelMean[平均値と標準偏差を取得する]
Imagick::getImageChannelRange[チャネルの範囲を取得する]
Imagick::getImageChannelStatistics[画像の各チャネルの統計情報を返す]
Imagick::getImageClipMask[画像のクリップマスクを取得する]
Imagick::getImageColormapColor[指定したインデックスに対応する色マップ上の色を返す]
Imagick::getImageColors[画像で使われている色の数を取得する]
Imagick::getImageColorspace[画像の色空間を取得する]
Imagick::getImageCompose[画像の合成演算子を返す]
Imagick::getImageCompressionQuality[現在の画像の圧縮品質を取得する]
Imagick::getImageCompression[現在の画像の圧縮形式を取得する]
Imagick::getImageDelay[画像の遅延を取得する]
Imagick::getImageDepth[画像の深度を取得する]
Imagick::getImageDispose[画像の配置方法を取得する]
Imagick::getImageDistortion[ある画像と再構築した画像を比較する]
Imagick::getImageExtrema[画像の極値を取得する]
Imagick::getImageFilename[シーケンス内の特定の画像のファイル名を返す]
Imagick::getImageFormat[シーケンス内の特定の画像のフォーマットを返す]
Imagick::getImageGamma[画像のガンマを取得する]
Imagick::getImageGeometry[幅と高さを連想配列で取得する]
Imagick::getImageGravity[画像の gravity を取得する]
Imagick::getImageGreenPrimary[緑が一番強い点を返す]
Imagick::getImageHeight[画像の高さを返す]
Imagick::getImageHistogram[画像のヒストグラムを取得する]
Imagick::getImageIndex[現在アクティブな画像のインデックスを取得する]
Imagick::getImageInterlaceScheme[画像のインターレース手法を取得する]
Imagick::getImageInterpolateMethod[画像の補間方式を返す]
Imagick::getImageIterations[画像の反復を取得する]
Imagick::getImageLength[画像の長さをバイト数で取得する]
Imagick::getImageMagickLicense[ImageMagick のライセンスを文字列で返す]
Imagick::getImageMatteColor[画像のマット色を返す]
Imagick::getImageMatte[画像がマットチャネルを持っているかどうかを返す]
Imagick::getImageOrientation[画像の方向を取得する]
Imagick::getImagePage[ページのジオメトリを返す]
Imagick::getImagePixelColor[指定したピクセルの色を返す]
Imagick::getImageProfile[指定した名前の画像プロファイルを返す]
Imagick::getImageProfiles[画像プロファイルを返す]
Imagick::getImageProperties[画像のプロパティを返す]
Imagick::getImageProperty[指定した名前の画像のプロパティを返す]
Imagick::getImageRedPrimary[赤が一番強い点を返す]
Imagick::getImageRegion[画像の一部を抽出する]
Imagick::getImageRenderingIntent[画像のレンダリング方向を取得する]
Imagick::getImageResolution[画像の X 方向と Y 方向の解像度を取得する]
Imagick::getImageScene[画像のシーンを取得する]
Imagick::getImageSignature[SHA-256 メッセージダイジェストを生成する]
Imagick::getImageSize[画像の長さをバイト数で返す]
Imagick::getImageTicksPerSecond[画像の ticks-per-second を取得する]
Imagick::getImageTotalInkDensity[画像の総インク密度を取得する]
Imagick::getImageType[画像の型を取得する]
Imagick::getImageUnits[画像の解像度の単位を取得する]
Imagick::getImageVirtualPixelMethod[仮想ピクセルメソッドを取得する]
Imagick::getImageWhitePoint[色度が白い点を返す]
Imagick::getImageWidth[画像の幅を返す]
Imagick::getImage[新しい Imagick オブジェクトを返す]
Imagick::getImagesBlob[すべての画像シーケンスを blob で返す]
Imagick::getInterlaceScheme[オブジェクトのインターレース方式を取得する]
Imagick::getIteratorIndex[現在アクティブな画像のインデックスを取得する]
Imagick::getNumberImages[オブジェクト内の画像の数を返す]
Imagick::getOption[指定したキーに対応する値を返す]
Imagick::getPackageName[ImageMagick パッケージ名を返す]
Imagick::getPage[ページのジオメトリを返す]
Imagick::getPixelIterator[MagickPixelIterator を返す]
Imagick::getPixelRegionIterator[画像セクションの ImagickPixelIterator を取得する]
Imagick::getPointSize[ポイントサイズを取得する]
Imagick::getQuantumDepth[quantum depth を取得する]
Imagick::getQuantumRange[Imagick quantum range を返す]
Imagick::getReleaseDate[ImageMagick のリリース日を返す]
Imagick::getResourceLimit[指定したリソースの制限を返す]
Imagick::getResource[指定したリソースのメモリ使用状況を返す]
Imagick::getSamplingFactors[水平方向および垂直方向のサンプリング係数を取得する]
Imagick::getSizeOffset[サイズのオフセットを返す]
Imagick::getSize[Imagick オブジェクトのサイズを取得する]
Imagick::getVersion[ImageMagick API のバージョンを返す]
Imagick::haldClutImage[画像内の色を置換する]
Imagick::hasNextImage[オブジェクトが次の画像を保持しているかどうかを調べる]
Imagick::hasPreviousImage[オブジェクトが前の画像を保持しているかどうかを調べる]
Imagick::identifyImage[画像を識別し、属性を取得する]
Imagick::implodeImage[新しい画像をコピーとして作成する]
Imagick::importImagePixels[画像のピクセルをインポートする]
Imagick::labelImage[ラベルを画像に追加する]
Imagick::levelImage[画像のレベルを調節する]
Imagick::linearStretchImage[画像の輝度を引き伸ばして飽和させる]
Imagick::liquidRescaleImage[画像を動かす]
Imagick::magnifyImage[画像を 2 倍に比例拡大する]
Imagick::mapImage[画像の色を、参照画像の中の最も近い色に置き換える]
Imagick::matteFloodfillImage[色の透明度を変更する]
Imagick::medianFilterImage[デジタルフィルタを適用する]
Imagick::mergeImageLayers[画像のレイヤーをマージする]
Imagick::minifyImage[画像をその半分のサイズに比例縮小する]
Imagick::modulateImage[明度、飽和度、色相を制御する]
Imagick::montageImage[合成画像を作成する]
Imagick::morphImages[複数の画像をモーフィングする]
Imagick::mosaicImages[画像からモザイクを作成する]
Imagick::motionBlurImage[モーションブラーをシミュレートする]
Imagick::negateImage[画像の色を打ち消す]
Imagick::newImage[新しい画像を作成する]
Imagick::newPseudoImage[新しい画像を作成する]
Imagick::nextImage[次の画像に移動する]
Imagick::normalizeImage[カラー画像のコントラストを強調する]
Imagick::oilPaintImage[油絵をシミュレートする]
Imagick::opaquePaintImage[対象にマッチする任意のピクセルの色を変更する]
Imagick::optimizeImageLayers[画像の繰り返し部分を削除して最適化する]
Imagick::orderedPosterizeImage[配列ディザリングを行う]
Imagick::paintFloodfillImage[色にマッチするピクセルを変更する]
Imagick::paintOpaqueImage[色にマッチするピクセルを変更する]
Imagick::paintTransparentImage[色にマッチするピクセルを塗りつぶし色に変更する]
Imagick::pingImageBlob[手早く属性を取得する]
Imagick::pingImageFile[画像の基本属性を手軽に取得する]
Imagick::pingImage[画像の基本属性を取得する]
Imagick::polaroidImage[ポラロイド写真をシミュレートする]
Imagick::posterizeImage[指定した色数まで画像を減色する]
Imagick::previewImages[画像処理用の適切なパラメータを手早く取得する]
Imagick::previousImage[オブジェクト内の前の画像に移動する]
Imagick::profileImage[画像のプロファイルを追加あるいは削除する]
Imagick::quantizeImage[参照画像内の色を解析する]
Imagick::quantizeImages[画像シーケンス内の色を解析する]
Imagick::queryFontMetrics[フォントメトリクスを表す配列を返す]
Imagick::queryFonts[設定したフォントを返す]
Imagick::queryFormats[Imagick がサポートするフォーマットを返す]
Imagick::radialBlurImage[画像にラジアルブラーを施す]
Imagick::raiseImage[三次元のボタン風の効果をシミュレートする]
Imagick::randomThresholdImage[コントラストの高い 2 色の画像を作成する]
Imagick::readImageBlob[バイナリ文字列から画像を読み込む]
Imagick::readImageFile[オープンしているファイルハンドルから画像を読み込む]
Imagick::readImage[ファイルから画像を読み込む]
Imagick::recolorImage[画像の色を変更する]
Imagick::reduceNoiseImage[画像の輪郭をなめらかにする]
Imagick::remapImage[画像の色を再配置する]
Imagick::removeImageProfile[指定した名前の画像プロファイルを削除してそれを返す]
Imagick::removeImage[画像リストから画像を削除する]
Imagick::render[それまでのすべての描画コマンドをレンダリングする]
Imagick::resampleImage[画像を指定した解像度にリサンプリングする]
Imagick::resetImagePage[画像のページをリセットする]
Imagick::resizeImage[画像のサイズを変更する]
Imagick::rollImage[画像を補正する]
Imagick::rotateImage[画像を回転する]
Imagick::roundCorners[画像の角を丸める]
Imagick::sampleImage[ピクセルのサンプリングによって画像の倍率を変更する]
Imagick::scaleImage[画像のサイズを変更する]
Imagick::segmentImage[画像を分割する]
Imagick::separateImageChannel[画像からチャネルを分離する]
Imagick::sepiaToneImage[画像をセピア調にする]
Imagick::setBackgroundColor[オブジェクトのデフォルト背景色を設定する]
Imagick::setColorspace[色空間を設定する]
Imagick::setCompressionQuality[オブジェクトのデフォルトの圧縮品質を設定する]
Imagick::setCompression[オブジェクトのデフォルトの圧縮方式を設定する]
Imagick::setFilename[画像を読み書きする前にファイル名を設定する]
Imagick::setFirstIterator[Imagick イテレータを最初の画像に設定する]
Imagick::setFont[フォントを設定する]
Imagick::setFormat[Imagick オブジェクトのフォーマットを設定する]
Imagick::setGravity[gravity を設定する]
Imagick::setImageAlphaChannel[画像のアルファチャネルを設定する]
Imagick::setImageArtifact[画像のアーチファクトを設定する]
Imagick::setImageBackgroundColor[画像の背景色を設定する]
Imagick::setImageBias[画像を折りたたむ任意のメソッドについて画像のバイアスを設定する]
Imagick::setImageBluePrimary[青が一番強い点を設定する]
Imagick::setImageBorderColor[画像の前景色を設定する]
Imagick::setImageChannelDepth[特定の画像チャネルの深度を設定する]
Imagick::setImageClipMask[画像のクリップマスクを設定する]
Imagick::setImageColormapColor[指定した色マップインデックスの色を設定する]
Imagick::setImageColorspace[画像の色空間を設定する]
Imagick::setImageCompose[画像の合成演算子を設定する]
Imagick::setImageCompressionQuality[画像の圧縮品質を設定する]
Imagick::setImageCompression[画像の圧縮を設定する]
Imagick::setImageDelay[画像の遅延を設定する]
Imagick::setImageDepth[画像の深度を設定する]
Imagick::setImageDispose[画像の配置方法を設定する]
Imagick::setImageExtent[画像のサイズを設定する]
Imagick::setImageFilename[特定の画像のファイル名を設定する]
Imagick::setImageFormat[特定の画像のフォーマットを設定する]
Imagick::setImageGamma[画像のガンマを設定する]
Imagick::setImageGravity[画像の gravity を設定する]
Imagick::setImageGreenPrimary[緑が一番強い点を設定する]
Imagick::setImageIndex[イテレータの位置を設定する]
Imagick::setImageInterlaceScheme[画像のインターレース手法を設定する]
Imagick::setImageInterpolateMethod[画像のピクセル補間方式を設定する]
Imagick::setImageIterations[画像の反復を設定する]
Imagick::setImageMatteColor[画像のマット色を設定する]
Imagick::setImageMatte[画像のマットチャネルを設定する]
Imagick::setImageOpacity[画像の不透明度を設定する]
Imagick::setImageOrientation[画像の方向を設定する]
Imagick::setImagePage[画像のページのジオメトリを設定する]
Imagick::setImageProfile[指定した名前の画像プロファイルを Imagick オブジェクトに追加する]
Imagick::setImageProperty[画像のプロパティを設定する]
Imagick::setImageRedPrimary[赤が一番強い点を設定する]
Imagick::setImageRenderingIntent[画像のレンダリング方向を設定する]
Imagick::setImageResolution[画像の解像度を設定する]
Imagick::setImageScene[画像のシーンを設定する]
Imagick::setImageTicksPerSecond[画像の ticks-per-second を設定する]
Imagick::setImageType[画像の型を設定する]
Imagick::setImageUnits[画像の解像度の単位を設定する]
Imagick::setImageVirtualPixelMethod[画像の仮想ピクセルメソッドを設定する]
Imagick::setImageWhitePoint[画像の色度が白い点を設定する]
Imagick::setImage[オブジェクト内の画像を置き換える]
Imagick::setInterlaceScheme[画像の圧縮を設定する]
Imagick::setIteratorIndex[イテレータの位置を設定する]
Imagick::setLastIterator[Imagick イテレータを最後の画像に設定する]
Imagick::setOption[オプションを設定する]
Imagick::setPage[Imagick オブジェクトのページジオメトリを設定する]
Imagick::setPointSize[ポイントサイズを設定する]
Imagick::setResolution[画像の解像度を設定する]
Imagick::setResourceLimit[特定のリソースの制限をメガバイト単位で設定する]
Imagick::setSamplingFactors[画像のサンプリング係数を設定する]
Imagick::setSizeOffset[Imagick オブジェクトのサイズのオフセットを設定する]
Imagick::setSize[Imagick オブジェクトのサイズを設定する]
Imagick::setType[画像タイプ属性を設定する]
Imagick::shadeImage[3D 効果を作成する]
Imagick::shadowImage[画像の影をシミュレートする]
Imagick::sharpenImage[画像をシャープにする]
Imagick::shaveImage[画像の輪郭からピクセルを刈り取る]
Imagick::shearImage[平行四辺形を作成する]
Imagick::sigmoidalContrastImage[画像のコントラストを調整する]
Imagick::sketchImage[鉛筆画をシミュレートする]
Imagick::solarizeImage[画像にソラリゼーション効果を適用する]
Imagick::sparseColorImage[色を補間する]
Imagick::spliceImage[無地の画像を作成する]
Imagick::spreadImage[ブロック内の各ピクセルをランダムに移動する]
Imagick::steganoImage[デジタル透かしを画像に埋め込む]
Imagick::stereoImage[ふたつの画像を合成する]
Imagick::stripImage[画像からすべてのプロパティやコメントを除去する]
Imagick::swirlImage[画像の中心から、ピクセルを渦巻状にする]
Imagick::textureImage[テクスチャ画像をタイル状に並べる]
Imagick::thresholdImage[閾値にもとづいて個々のピクセルの値を変更する]
Imagick::thumbnailImage[画像のサイズを変更する]
Imagick::tintImage[色ベクトルを画像の各ピクセルに適用する]
Imagick::transformImage[切り取るサイズと画像のジオメトリを設定する便利なメソッド]
Imagick::transparentPaintImage[ピクセルを透過させる]
Imagick::transposeImage[垂直方向に反転させた画像を作成する]
Imagick::transverseImage[水平方向に反転させた画像を作成する]
Imagick::trimImage[画像の輪郭を削除する]
Imagick::uniqueImageColors[ある 1 色以外のすべての色のピクセルを削除する]
Imagick::unsharpMaskImage[画像をシャープにする]
Imagick::valid[現在のアイテムが有効かどうかを調べる]
Imagick::vignetteImage[ビネットフィルタを画像に追加する]
Imagick::waveImage[ウェーブフィルタを画像に適用する]
Imagick::whiteThresholdImage[閾値に満たないすべてのピクセルを白にする]
Imagick::writeImageFile[画像をファイルハンドルに書き出す]
Imagick::writeImage[指定した名前で画像を書き込む]
Imagick::writeImagesFile[フレームをファイルハンドルに書き出す]
Imagick::writeImages[画像あるいは画像シーケンスを書き込む]
ImagickDraw::__construct[ImagickDraw コンストラクタ]
ImagickDraw::affine[現在のアフィン変換行列を設定する]
ImagickDraw::annotation[画像上にテキストを描画する]
ImagickDraw::arc[円弧を描画する]
ImagickDraw::bezier[ベジエ曲線を描画する]
ImagickDraw::circle[円を描画する]
ImagickDraw::clear[ImagickDraw をクリアする]
ImagickDraw::clone[指定した ImagickDraw オブジェクトの完全なコピーを作成する]
ImagickDraw::color[画像上に色を描画する]
ImagickDraw::comment[コメントを追加する]
ImagickDraw::composite[現在の画像上に別の画像を合成する]
ImagickDraw::destroy[関連付けられたすべてのリソースを開放する]
ImagickDraw::ellipse[画像上に楕円を描画する]
ImagickDraw::getClipPath[現在のクリッピングパスの ID を取得する]
ImagickDraw::getClipRule[現在の多角形塗りつぶしルールを返す]
ImagickDraw::getClipUnits[クリップパスの単位の解釈を返す]
ImagickDraw::getFillColor[塗りつぶし色を返す]
ImagickDraw::getFillOpacity[描画時の透過度を返す]
ImagickDraw::getFillRule[塗りつぶしルールを返す]
ImagickDraw::getFontFamily[フォントファミリーを返す]
ImagickDraw::getFontSize[フォントのポイント数を返す]
ImagickDraw::getFontStyle[フォントのスタイルを返す]
ImagickDraw::getFontWeight[フォントの重さを返す]
ImagickDraw::getFont[フォントを返す]
ImagickDraw::getGravity[テキストの配置時の gravity を返す]
ImagickDraw::getStrokeAntialias[現在の縁取りのアンチエイリアス設定を返す]
ImagickDraw::getStrokeColor[オブジェクトの縁取りに使用する色を返す]
ImagickDraw::getStrokeDashArray[パスの描画に使用する破線のパターンを表す配列を返す]
ImagickDraw::getStrokeDashOffset[破線パターンにおける破線の開始オフセットを返す]
ImagickDraw::getStrokeLineCap[開かれたサブパスを描画する際に使用する端点の形状を返す]
ImagickDraw::getStrokeLineJoin[パスの角を描画する際に使用する形状を返す]
ImagickDraw::getStrokeMiterLimit[マイターリミットを返す]
ImagickDraw::getStrokeOpacity[オブジェクトの枠線の透明度を返す]
ImagickDraw::getStrokeWidth[オブジェクトの枠線の描画に使用する線の幅を返す]
ImagickDraw::getTextAlignment[テキストの配置を返す]
ImagickDraw::getTextAntialias[現在のテキストのアンチエイリアス設定を返す]
ImagickDraw::getTextDecoration[テキストの装飾を返す]
ImagickDraw::getTextEncoding[テキストによる注記の際に使用するコードセットを返す]
ImagickDraw::getTextUnderColor[テキストの背景色を返す]
ImagickDraw::getVectorGraphics[ベクターグラフィックを含む文字列を返す]
ImagickDraw::line[直線を描画する]
ImagickDraw::matte[画像の opacity チャネル上に描画する]
ImagickDraw::pathClose[パス要素を現在のパスに追加する]
ImagickDraw::pathCurveToAbsolute[三次ベジエ曲線を描画する]
ImagickDraw::pathCurveToQuadraticBezierAbsolute[二次ベジエ曲線を描画する]
ImagickDraw::pathCurveToQuadraticBezierRelative[二次ベジエ曲線を描画する]
ImagickDraw::pathCurveToQuadraticBezierSmoothAbsolute[二次ベジエ曲線を描画する]
ImagickDraw::pathCurveToQuadraticBezierSmoothRelative[二次ベジエ曲線を描画する]
ImagickDraw::pathCurveToRelative[三次ベジエ曲線を描画する]
ImagickDraw::pathCurveToSmoothAbsolute[三次ベジエ曲線を描画する]
ImagickDraw::pathCurveToSmoothRelative[三次ベジエ曲線を描画する]
ImagickDraw::pathEllipticArcAbsolute[楕円弧を描画する]
ImagickDraw::pathEllipticArcRelative[楕円弧を描画する]
ImagickDraw::pathFinish[現在のパスを終了する]
ImagickDraw::pathLineToAbsolute[直線パスを描画する]
ImagickDraw::pathLineToHorizontalAbsolute[水平直線パスを描画する]
ImagickDraw::pathLineToHorizontalRelative[水平直線パスを描画する]
ImagickDraw::pathLineToRelative[直線パスを描画する]
ImagickDraw::pathLineToVerticalAbsolute[垂直直線パスを描画する]
ImagickDraw::pathLineToVerticalRelative[垂直直線パスを描画する]
ImagickDraw::pathMoveToAbsolute[新しいサブパスを開始する]
ImagickDraw::pathMoveToRelative[新しいサブパスを開始する]
ImagickDraw::pathStart[パス描画リストの開始を宣言する]
ImagickDraw::point[点を描画する]
ImagickDraw::polygon[多角形を描画する]
ImagickDraw::polyline[線分群を描画する]
ImagickDraw::popClipPath[クリップパスの定義を終了する]
ImagickDraw::popDefs[定義リストを終了する]
ImagickDraw::popPattern[パターン定義を終了する]
ImagickDraw::pop[スタック内の現在の ImagickDraw を破棄し、事前に push されたImagickDraw を返す]
ImagickDraw::pushClipPath[クリップパスの定義を開始する]
ImagickDraw::pushDefs[後に続くコマンドが、処理の前に名前つき要素を作成することを示す]
ImagickDraw::pushPattern[後に続く ImagickDraw::opPattern()までのコマンドが、名前付きパターンを構成することを示す]
ImagickDraw::push[現在の ImagickDraw をコピーしてスタックに格納する]
ImagickDraw::rectangle[矩形を描画する]
ImagickDraw::render[これまでのすべての描画コマンドを画像上にレンダリングする]
ImagickDraw::rotate[指定した回転を現在の座標空間に適用する]
ImagickDraw::roundRectangle[角が丸い矩形を描画する]
ImagickDraw::scale[倍率を調整する]
ImagickDraw::setClipPath[指定した名前のクリッピングパスを画像に関連付ける]
ImagickDraw::setClipRule[クリッピングパスで使用する多角形塗りつぶしルールを設定する]
ImagickDraw::setClipUnits[クリップパスの単位の解釈を設定する]
ImagickDraw::setFillAlpha[色やテクスチャによる塗りつぶしの際の透過度を設定する]
ImagickDraw::setFillColor[オブジェクトの塗りつぶしに使用する色を設定する]
ImagickDraw::setFillOpacity[色やテクスチャによる塗りつぶしの際の透過度を設定する]
ImagickDraw::setFillPatternURL[オブジェクトの塗りつぶしパターンとして使用する URL を設定する]
ImagickDraw::setFillRule[多角形の描画時に使用する塗りつぶしルールを設定する]
ImagickDraw::setFontFamily[テキストによる注記を行う際に使用するフォントファミリーを設定する]
ImagickDraw::setFontSize[テキストによる注記を行う際に使用するフォントのポイント数を設定する]
ImagickDraw::setFontStretch[テキストによる注記を行う際に使用するフォントの伸縮を設定する]
ImagickDraw::setFontStyle[テキストによる注記を行う際に使用するフォントのスタイルを設定する]
ImagickDraw::setFontWeight[フォントの重さを設定する]
ImagickDraw::setFont[テキストによる注記を行う際に使用するフォントを設定する]
ImagickDraw::setGravity[テキストの配置時の gravity を設定する]
ImagickDraw::setStrokeAlpha[オブジェクトの枠線の透明度を指定する]
ImagickDraw::setStrokeAntialias[縁取りの枠線をアンチエイリアス処理するかどうかを制御する]
ImagickDraw::setStrokeColor[オブジェクトの縁取りに使用する色を設定する]
ImagickDraw::setStrokeDashArray[パスの描画に使用する破線のパターンを指定する]
ImagickDraw::setStrokeDashOffset[破線パターンにおける破線の開始オフセットを指定する]
ImagickDraw::setStrokeLineCap[開かれたサブパスを描画する際に使用する端点の形状を指定する]
ImagickDraw::setStrokeLineJoin[パスの角を描画する際に使用する形状を指定する]
ImagickDraw::setStrokeMiterLimit[マイターリミットを指定する]
ImagickDraw::setStrokeOpacity[オブジェクトの枠線の透明度を指定する]
ImagickDraw::setStrokePatternURL[オブジェクトの枠線の描画に使用するパターンを設定する]
ImagickDraw::setStrokeWidth[オブジェクトの枠線の描画に使用する線の幅を設定する]
ImagickDraw::setTextAlignment[テキストの配置を指定する]
ImagickDraw::setTextAntialias[テキストをアンチエイリアス処理するかどうかを制御する]
ImagickDraw::setTextDecoration[装飾を指定する]
ImagickDraw::setTextEncoding[テキストのコードセットを指定する]
ImagickDraw::setTextUnderColor[背景の矩形の色を指定する]
ImagickDraw::setVectorGraphics[ベクターグラフィックを設定する]
ImagickDraw::setViewbox[キャンバス全体の大きさを設定する]
ImagickDraw::skewX[現在の座標系を水平方向に傾ける]
ImagickDraw::skewY[現在の座標系を垂直方向に傾ける]
ImagickDraw::translate[現在の座標系に変換を適用する]
ImagickPixel::__construct[ImagickPixel のコンストラクタ]
ImagickPixel::clear[このオブジェクトに関連付けられたリソースを消去する]
ImagickPixel::destroy[このオブジェクトに関連付けられているリソースの割り当てを解除する]
ImagickPixel::getColorAsString[色を文字列で返す]
ImagickPixel::getColorCount[この色に関連付けられている色カウントを返す]
ImagickPixel::getColorValue[指定した色チャネルの値を正規化したものを取得する]
ImagickPixel::getColor[色を返す]
ImagickPixel::getHSL[ImagickPixel オブジェクトの HSLカラーを正規化したものを返す]
ImagickPixel::setColorValue[指定したチャネルの正規化した値を設定する]
ImagickPixel::setColor[色を設定する]
ImagickPixel::setHSL[正規化した HSL カラーを設定する]
ImagickPixelIterator::__construct[ImagickPixelIterator のコンストラクタ]
ImagickPixelIterator::clear[PixelIterator に関連付けられたリソースを消去する]
ImagickPixelIterator::destroy[PixelIteratorに関連付けられているリソースの割り当てを解除する]
ImagickPixelIterator::getCurrentIteratorRow[ImagickPixel オブジェクトのの現在の行を返す]
ImagickPixelIterator::getIteratorRow[pixel iterator の現在の行を返す]
ImagickPixelIterator::getNextIteratorRow[pixel iterator の次の行を返す]
ImagickPixelIterator::getPreviousIteratorRow[前の行を返す]
ImagickPixelIterator::newPixelIterator[新しい pixel iterator を返す]
ImagickPixelIterator::newPixelRegionIterator[新しい pixel iterator を返す]
ImagickPixelIterator::resetIterator[pixel iterator をリセットする]
ImagickPixelIterator::setIteratorFirstRow[pixel iterator を最初の行に設定する]
ImagickPixelIterator::setIteratorLastRow[pixel iterator を最後の行に設定する]
ImagickPixelIterator::setIteratorRow[pixel iterator の行を設定する]
ImagickPixelIterator::syncIterator[pixel iterator を同期する]
InfiniteIterator::__construct[InfiniteIterator を作成する]
InfiniteIterator::next[内部イテレータを次に移動するか、巻き戻す]
IntlDateFormatter::create[Date Formatter を作成する]
IntlDateFormatter::formatObject[オブジェクトの書式を設定する]
IntlDateFormatter::format[日付/時刻 の値を文字列としてフォーマットする]
IntlDateFormatter::getCalendarObject[カレンダーを取得する]
IntlDateFormatter::getCalendar[IntlDateFormatter が使用するカレンダーを取得する]
IntlDateFormatter::getDateType[IntlDateFormatter が使用する日付形式を取得する]
IntlDateFormatter::getErrorCode[直近の操作のエラーコードを取得する]
IntlDateFormatter::getErrorMessage[直近の操作のエラーテキストを取得する]
IntlDateFormatter::getLocale[Formatter が使用するロケールを取得する]
IntlDateFormatter::getPattern[IntlDateFormatter が使用するパターンを取得する]
IntlDateFormatter::getTimeType[IntlDateFormatter が使用する時刻形式を取得する]
IntlDateFormatter::getTimeZoneId[IntlDateFormatter が使用するタイムゾーン IDを取得する]
IntlDateFormatter::getTimeZone[タイムゾーンを取得する]
IntlDateFormatter::isLenient[IntlDateFormatter で使用する寛大さを取得する]
IntlDateFormatter::localtime[文字列をパースして、フィールドベースの時刻値にする]
IntlDateFormatter::parse[文字列をパースしてタイムスタンプにする]
IntlDateFormatter::setCalendar[使用するカレンダーを設定する]
IntlDateFormatter::setLenient[パーサの寛大さを設定する]
IntlDateFormatter::setPattern[IntlDateFormatter が使用するパターンを設定する]
IntlDateFormatter::setTimeZoneId[使用するタイムゾーンを設定する]
IntlDateFormatter::setTimeZone[タイムゾーンを設定する]
Iterator::current[現在の要素を返す]
Iterator::key[現在の要素のキーを返す]
Iterator::next[次の要素に進む]
Iterator::rewind[イテレータの最初の要素に巻き戻す]
Iterator::valid[現在位置が有効かどうかを調べる]
IteratorAggregate::getIterator[外部イテレータを取得する]
IteratorIterator::__construct[traversable な何かからイテレータを作成する]
IteratorIterator::current[現在の値を取得する]
IteratorIterator::getInnerIterator[内部イテレータを取得する]
IteratorIterator::key[現在の要素のキーを取得する]
IteratorIterator::next[次の要素に移動する]
IteratorIterator::rewind[最初の要素に巻き戻す]
IteratorIterator::valid[イテレータが有効かどうかを調べる]
JDDayOfWeek[曜日を返す]
JDMonthName[月の名前を返す]
JDToFrench[ユリウス積算日をフランス革命暦(共和暦)に変換する]
JDToGregorian[ユリウス積算日をグレゴリウス日に変換する]
JDToJulian[ユリウス積算日をユリウス暦に変換する]
JewishToJD[ユダヤ暦の日付けをユリウス積算日に変換する]
JsonSerializable::jsonSerialize[JSON にシリアライズしたいデータを指定する]
Judy::__construct[Construct a new Judy object]
Judy::__destruct[Destruct a Judy object]
Judy::byCount[Locate the Nth index present in the Judy array]
Judy::count[Count the number of elements in the Judy array]
Judy::firstEmpty[Search for the first absent index in the Judy array]
Judy::first[Search for the first index in the Judy array]
Judy::free[Free the entire Judy array]
Judy::getType[Return the type of the current Judy array]
Judy::lastEmpty[Search for the last absent index in the Judy array]
Judy::last[Search for the last index in the Judy array]
Judy::memoryUsage[Return the memory used by the Judy array]
Judy::nextEmpty[Search for the next absent index in the Judy array]
Judy::next[Search for the next index in the Judy array]
Judy::offsetExists[Whether a offset exists]
Judy::offsetGet[Offset to retrieve]
Judy::offsetSet[Offset to set]
Judy::offsetUnset[Offset to unset]
Judy::prevEmpty[Search for the previous absent index in the Judy array]
Judy::prev[Search for the previous index in the Judy array]
Judy::size[Return the size of the current Judy array]
JulianToJD[ユリウス暦をユリウス積算日に変換する]
KTaglib_ID3v2_AttachedPictureFrame::getDescription[画像フレーム内の画像の説明を返す]
KTaglib_ID3v2_AttachedPictureFrame::getMimeType[画像の mime type を返す]
KTaglib_ID3v2_AttachedPictureFrame::getType[画像の型を返す]
KTaglib_ID3v2_AttachedPictureFrame::savePicture[画像をファイルに保存する]
KTaglib_ID3v2_AttachedPictureFrame::setMimeType[画像の mime type を設定する]
KTaglib_ID3v2_AttachedPictureFrame::setPicture[フレームの画像を、指定したものに設定する]
KTaglib_ID3v2_AttachedPictureFrame::setType[画像の型を設定する]
KTaglib_ID3v2_Frame::__toString[フレームの文字列表現を返す]
KTaglib_ID3v2_Frame::getSize[フレームのサイズをバイト単位で返す]
KTaglib_ID3v2_Tag::addFrame[フレームを ID3v2 タグに追加する]
KTaglib_ID3v2_Tag::getFrameList[ID3v2 フレームの配列に ID3v2 タグを関連付けたものを返す]
KTaglib_MPEG_AudioProperties::getBitrate[MPEG ファイルのビットレートを返す]
KTaglib_MPEG_AudioProperties::getChannels[MPEG ファイルのチャンネル数を返す]
KTaglib_MPEG_AudioProperties::getLayer[MPEG ファイルのレイヤを返す]
KTaglib_MPEG_AudioProperties::getLength[MPEG ファイルの長さを返す]
KTaglib_MPEG_AudioProperties::getSampleBitrate[MPEG ファイルのサンプルビットレートを返す]
KTaglib_MPEG_AudioProperties::getVersion[MPEG ファイルのバージョンを返す]
KTaglib_MPEG_AudioProperties::isCopyrighted[MPEG ファイルの著作権保護の状態を返す]
KTaglib_MPEG_AudioProperties::isOriginal[ファイルがオリジナルであるかどうかを返す]
KTaglib_MPEG_AudioProperties::isProtectionEnabled[MPEG ファイルの保護機構が有効かどうかを返す]
KTaglib_MPEG_File::getAudioProperties[音声プロパティへのアクセス機能を持つオブジェクトを返す]
KTaglib_MPEG_File::getID3v1Tag[ID3v1 タグを表すオブジェクトを返す]
KTaglib_MPEG_File::getID3v2Tag[ID3v2 オブジェクトを返す]
KTaglib_Tag::getAlbum[ID3 タグからアルバム文字列を返す]
KTaglib_Tag::getArtist[ID3 タグからアーティスト文字列を返す]
KTaglib_Tag::getComment[ID3 タグからコメントを返す]
KTaglib_Tag::getGenre[ID3 タグからジャンルを返す]
KTaglib_Tag::getTitle[ID3 タグからタイトル文字列を返す]
KTaglib_Tag::getTrack[ID3 タグからトラック番号を返す]
KTaglib_Tag::getYear[ID3 タグから年を返す]
KTaglib_Tag::isEmpty[タグが空の場合に true を返す]
Lapack::eigenValues[This function returns the eigenvalues for agiven square matrix]
Lapack::identity[Return an identity matrix]
Lapack::leastSquaresByFactorisation[Calculate the linear least squares solutionof a matrix using QR factorisation]
Lapack::leastSquaresBySVD[Solve the linear least squares problem,using SVD]
Lapack::pseudoInverse[Calculate the inverse of a matrix]
Lapack::singularValues[Calculated the singular values of amatrix]
Lapack::solveLinearEquation[Solve a system of linear equations]
LimitIterator::__construct[LimitIterator を作成する]
LimitIterator::current[現在の要素を取得する]
LimitIterator::getInnerIterator[内部イテレータを取得する]
LimitIterator::getPosition[現在の位置を返す]
LimitIterator::key[現在のキーを取得する]
LimitIterator::next[イテレータを前に移動する]
LimitIterator::rewind[イテレータを指定した開始オフセットに巻き戻す]
LimitIterator::seek[与えられた位置に移動する]
LimitIterator::valid[現在の要素が有効かどうかをチェックする]
Locale::acceptFromHttp[最もあてはまるロケールを HTTP "Accept-Language"ヘッダにもとづいて探す]
Locale::composeLocale[正しく並べ替えて区切られたロケール ID を返す]
Locale::filterMatches[言語タグフィルタがロケールにマッチするかどうかを調べる]
Locale::getAllVariants[入力ロケールの変化系を取得する]
Locale::getDefault[INTL のグローバル 'default_locale'からデフォルトのロケールを取得する]
Locale::getDisplayLanguage[入力ロケールの言語の表示名を、適切に地域化して返す]
Locale::getDisplayName[入力ロケールの表示名を、適切に地域化して返す]
Locale::getDisplayRegion[入力ロケールの地域の表示名を、適切に地域化して返す]
Locale::getDisplayScript[入力ロケールの文字の表示名を、適切に地域化して返す]
Locale::getDisplayVariant[入力ロケールの変化形の表示名を、適切に地域化して返す]
Locale::getKeywords[入力ロケールのキーワードを取得する]
Locale::getPrimaryLanguage[入力ロケールのプライマリ言語を取得する]
Locale::getRegion[入力ロケールの地域を取得する]
Locale::getScript[入力ロケールの文字を取得する]
Locale::lookup[その言語にマッチする言語タグの一覧を検索する]
Locale::parseLocale[ロケール ID のサブタグ要素を連想配列で返す]
Locale::setDefault[デフォルトの実行時ロケールを設定する]
Lua::__construct[Lua コンストラクタ]
Lua::assign[PHP 変数を Lua にアサイン]
Lua::call[Lua 関数を呼び出す]
Lua::eval[文字列を Lua コードとして評価]
Lua::getVersion[getversion 用途]
Lua::include[Lua スクリプトファイルをパース]
Lua::registerCallback[PHP 関数を Lua に登録]
LuaClosure::__invoke[luaclosure を起動]
Memcache::addServer[コネクションプールに memcached サーバーを追加する]
Memcache::add[サーバーに項目を追加する]
Memcache::close[memcached サーバーとの接続を閉じる]
Memcache::connect[memcached サーバーへの接続をオープンする]
Memcache::decrement[項目の値を減らす]
Memcache::delete[サーバーから項目を削除する]
Memcache::flush[サーバー上のすべての既存項目を消去する]
Memcache::getExtendedStats[プール内のすべてのサーバーの統計情報を取得する]
Memcache::getServerStatus[サーバーの状態を返す]
Memcache::getStats[サーバーの統計情報を取得する]
Memcache::getVersion[サーバーのバージョンを返す]
Memcache::get[サーバーから項目を取得する]
Memcache::increment[項目の値を増やす]
Memcache::pconnect[memcached サーバーへの持続的な接続をオープンする]
Memcache::replace[既存項目の値を置換する]
Memcache::setCompressThreshold[大きな値に対する自動圧縮処理を有効にする]
Memcache::setServerParams[サーバーのパラメータおよび状態を、実行時に変更する]
Memcache::set[データをサーバーに格納する]
Memcached::addByKey[指定したサーバーにアイテムを新しいキーで追加する]
Memcached::addServer[サーバーをサーバープールに追加する]
Memcached::addServers[複数のサーバーをサーバープールに追加する]
Memcached::add[アイテムを新しいキーで追加する]
Memcached::appendByKey[指定したサーバーでデータを既存のアイテムに追記する]
Memcached::append[データを既存のアイテムに追記する]
Memcached::casByKey[指定したサーバーでアイテムを比較して入れ替える]
Memcached::cas[アイテムを比較して入れ替える]
Memcached::decrementByKey[Decrement numeric item's value, stored on aspecific server]
Memcached::decrement[数値アイテムの値を減らす]
Memcached::deleteByKey[指定したサーバーからアイテムを削除する]
Memcached::deleteMultiByKey[Delete multiple items from a specificserver]
Memcached::deleteMulti[Delete multiple items]
Memcached::delete[アイテムを削除する]
Memcached::fetchAll[残りのすべての結果を取得する]
Memcached::fetch[次の結果を取得する]
Memcached::flush[キャッシュ内のすべてのアイテムを無効にする]
Memcached::getAllKeys[Gets the keys stored on all theservers]
Memcached::getByKey[指定したサーバーからアイテムを取得する]
Memcached::getDelayedByKey[指定したサーバーに複数のアイテムを要求する]
Memcached::getDelayed[複数のアイテムを要求する]
Memcached::getMultiByKey[指定したサーバーから複数のアイテムを取得する]
Memcached::getMulti[複数のアイテムを取得する]
Memcached::getOption[Memcached のオプションの値を取得する]
Memcached::getResultCode[直近の操作の結果コードを返す]
Memcached::getResultMessage[最後に実行した操作の結果を説明したメッセージを返す。]
Memcached::getServerByKey[キーとサーバーを関連付ける]
Memcached::getServerList[プール内のサーバーの一覧を取得する]
Memcached::getStats[サーバープールの統計情報を取得する]
Memcached::getVersion[サーバープールのバージョン情報を取得する]
Memcached::get[アイテムを取得する]
Memcached::incrementByKey[Increment numeric item's value, stored on aspecific server]
Memcached::increment[数値アイテムの値を増やす]
Memcached::isPersistent[Check if a persitent connection to memcacheis being used]
Memcached::isPristine[Check if the instance was recentlycreated]
Memcached::prependByKey[指定したサーバーで既存のアイテムの前にデータを付加する]
Memcached::prepend[既存のアイテムの前にデータを付加する]
Memcached::quit[Close any open connections]
Memcached::replaceByKey[指定したサーバーで既存のキーのアイテムを入れ替える]
Memcached::replace[既存のキーのアイテムを入れ替える]
Memcached::resetServerList[Clears all servers from the serverlist]
Memcached::setByKey[指定したサーバーにアイテムを格納する]
Memcached::setMultiByKey[指定したサーバーで複数のアイテムを格納する]
Memcached::setMulti[複数のアイテムを格納する]
Memcached::setOption[Memcached のオプションの値を設定する]
Memcached::setOptions[Set Memcached options]
Memcached::setSaslAuthData[Set the credentials to use forauthentication]
Memcached::set[アイテムを格納する]
Memcached::touchByKey[Set a new expiration on an item on aspecific server]
Memcached::touch[Set a new expiration on an item]
MessageFormatter::create[新しいメッセージフォーマッタを作成する]
MessageFormatter::formatMessage[手早くメッセージをフォーマットする]
MessageFormatter::format[メッセージをフォーマットする]
MessageFormatter::getErrorCode[直近の操作のエラーコードを取得する]
MessageFormatter::getErrorMessage[直近の操作のエラーテキストを取得する]
MessageFormatter::getLocale[フォーマッタを作成した際のロケールを取得する]
MessageFormatter::getPattern[フォーマッタが使用するパターンを取得する]
MessageFormatter::parseMessage[手早く入力文字列をパースする]
MessageFormatter::parse[パターンを使用して入力文字列をパースする]
MessageFormatter::setPattern[フォーマッタが使用するパターンを設定する]
Mongo::__get[データベースを取得する]
Mongo::__toString[この接続の文字列表現]
Mongo::close[接続を閉じる]
Mongo::connectUtil[データベースサーバーに接続する]
Mongo::connect[データベースサーバーに接続する]
Mongo::dropDB[データベースを削除する (非推奨)]
Mongo::getHosts[関連づけられたすべてのホストの状態を更新する]
Mongo::getPoolSize[接続プールのサイズを取得する]
Mongo::getSlaveOkay[この接続の slaveOkay 設定を取得する]
Mongo::getSlave[slaveOkay の読み込みに使われているアドレスを返す]
Mongo::listDBs[すべてのデータベースの一覧を取得する]
Mongo::poolDebug[すべての接続プールに関する情報を返す]
Mongo::selectCollection[データベースコレクションを取得する]
Mongo::selectDB[データベースを取得する]
Mongo::setPoolSize[新しい接続プールのサイズを設定する]
Mongo::setSlaveOkay[この接続の slaveOkay の設定を変更する]
Mongo::switchSlave[slaveOkay 読み込み用の新しいセカンダリを選ぶ]
MongoBinData::__construct[新しいバイナリデータオブジェクトを作成する]
MongoBinData::__toString[このバイナリデータオブジェクトの文字列表現]
MongoClient::getConnections[開いているすべての接続の情報を返す]
MongoClient::getReadPreference[この接続の優先読み込みを取得する]
MongoClient::setReadPreference[この接続の優先読み込みを設定する]
MongoCode::__construct[新しいコードオブジェクトを作成する]
MongoCode::__toString[このコードを文字列で返す]
MongoCollection::__construct[新しいコレクションを作成する]
MongoCollection::__get[コレクションを取得する]
MongoCollection::__toString[このコレクションの文字列表現]
MongoCollection::aggregate[aggregation フレームワークを使って集約する]
MongoCollection::batchInsert[複数のドキュメントをコレクションに追加する]
MongoCollection::count[コレクション内のドキュメント数を数える]
MongoCollection::createDBRef[データベースへの参照を作成する]
MongoCollection::deleteIndex[コレクションからインデックスを削除する]
MongoCollection::deleteIndexes[コレクションのすべてのインデックスを削除する]
MongoCollection::distinct[コレクション内で、指定したキーに対応する区別できる値の一覧を取得する]
MongoCollection::drop[コレクションを削除する]
MongoCollection::ensureIndex[指定したフィールドにインデックスを作成する(すでに存在する場合は何もしない)]
MongoCollection::findAndModify[ドキュメントを更新して返す]
MongoCollection::findOne[コレクションに問い合わせ、単一の要素を返す]
MongoCollection::find[コレクションに問い合わせ、結果セットの MongoCursorを返す]
MongoCollection::getDBRef[データベース参照が指すドキュメントを取得する]
MongoCollection::getIndexInfo[このコレクションのインデックスについての情報を返す]
MongoCollection::getName[コレクションの名前を返す]
MongoCollection::getReadPreference[このコレクションの優先読み込みを取得する]
MongoCollection::getSlaveOkay[このコレクションの slaveOkay 設定を取得する]
MongoCollection::group[SQL の GROUP BY コマンドと似た処理を行う]
MongoCollection::insert[ドキュメントをコレクションに追加する]
MongoCollection::remove[レコードをコレクションから削除する]
MongoCollection::save[ドキュメントをコレクションに保存する]
MongoCollection::setReadPreference[このコレクションの優先読み込みを設定する]
MongoCollection::setSlaveOkay[このコレクションの slaveOkay の設定を変更する]
MongoCollection::toIndexString[インデックスを指定するキーを、インデックスを指す文字列に変換する]
MongoCollection::update[指定した条件にもとづいてレコードを更新する]
MongoCollection::validate[コレクションを検証する]
MongoCursor::__construct[新しいカーソルを作成する]
MongoCursor::addOption[トップレベルの キー/値 のペアをクエリに追加する]
MongoCursor::awaitData[追尾可能なカーソルで、データがないときにしばらく待つかどうかを設定する]
MongoCursor::batchSize[ひとつのバッチで返す要素数を制限する]
MongoCursor::count[このクエリの結果の数を数える]
MongoCursor::current[現在の要素を返す]
MongoCursor::dead[このカーソルにまだデータベースから送信されていないドキュメントがあるかどうかを調べる]
MongoCursor::doQuery[クエリを実行する]
MongoCursor::explain[最適化やデバッグの際に有効な、クエリの explain を返す]
MongoCursor::fields[クエリのフィールドを設定する]
MongoCursor::getNext[このカーソルがさす次のオブジェクトを返し、カーソルを進める]
MongoCursor::getReadPreference[このクエリの優先読み込みを取得する]
MongoCursor::hasNext[このカーソルにまだ要素があるかどうかを調べる]
MongoCursor::hint[クエリについてのヒントをデータベースに与える]
MongoCursor::immortal[このカーソルをタイムアウトさせるかどうかを設定する]
MongoCursor::info[このカーソルの query、fields、limit そして skipを取得する]
MongoCursor::key[現在の結果の _id を返す]
MongoCursor::limit[返す結果の数を制限する]
MongoCursor::next[カーソルを次の結果に進める]
MongoCursor::partial[シャードがダウンしているときにこのクエリが mongos から部分的な結果を返すようにするかどうか]
MongoCursor::reset[カーソルを消去する]
MongoCursor::rewind[カーソルを結果セットの先頭に戻す]
MongoCursor::setFlag[専用のメソッドが存在しない任意のフラグを設定する]
MongoCursor::setReadPreference[このクエリの優先読み込みを設定する]
MongoCursor::skip[結果をスキップする]
MongoCursor::slaveOkay[このクエリをセカンダリ上で完了できるかどうかを設定する]
MongoCursor::snapshot[このクエリでスナップショットモードを使う]
MongoCursor::sort[指定したフィールドで結果をソートする]
MongoCursor::tailable[このカーソルが、最後の結果を取得した後もオープンしたままにしておくかどうかを設定する]
MongoCursor::timeout[このクエリのクライアント側のタイムアウトを設定する]
MongoCursor::valid[カーソルが正しい結果を読んでいるかどうかを調べる]
MongoCursorException::getHost[エラーが発生したサーバーのホスト名を取得する]
MongoDB::__construct[新しいデータベースを作成する]
MongoDB::__get[コレクションを取得する]
MongoDB::__toString[このデータベースの名前]
MongoDB::authenticate[このデータベースにログインする]
MongoDB::command[データベースコマンドを実行する]
MongoDB::createCollection[コレクションを作成する]
MongoDB::createDBRef[データベース参照を作成する]
MongoDB::dropCollection[コレクションを削除する (非推奨)]
MongoDB::drop[このデータベースを削除する]
MongoDB::execute[JavaScript コードをデータベースサーバー上で実行する]
MongoDB::forceError[データベースのエラーを作成する]
MongoDB::getCollectionNames[このデータベースのすべてのコレクションを取得する]
MongoDB::getDBRef[データベース参照が指すドキュメントを取得する]
MongoDB::getGridFS[このデータベースに格納されているファイルを扱うためのツールキットを取得する]
MongoDB::getProfilingLevel[このデータベースのプロファイリングレベルを取得する]
MongoDB::getReadPreference[このデータベースの優先読み込みを取得する]
MongoDB::getSlaveOkay[このデータベースの slaveOkay 設定を取得する]
MongoDB::lastError[直近のデータベース操作でエラーが発生したかどうかを調べる]
MongoDB::listCollections[このデータベース内のすべての MongoCollectionの配列を取得する]
MongoDB::prevError[データベース操作中の直近に発生したエラーを調べる]
MongoDB::repair[このデータベースを修復・圧縮する]
MongoDB::resetError[データベースで発生したすべてのエラーをクリアする]
MongoDB::selectCollection[コレクションを取得する]
MongoDB::setProfilingLevel[このデータベースのプロファイリングレベルを設定する]
MongoDB::setReadPreference[このデータベースの優先読み込みを設定する]
MongoDB::setSlaveOkay[このデータベースの slaveOkay の設定を変更する]
MongoDBRef::create[新しいデータベース参照を作成する]
MongoDBRef::get[参照が指すオブジェクトを取得する]
MongoDBRef::isRef[配列がデータベース参照か否かを調べる]
MongoDate::__construct[新しい日付を作成する]
MongoDate::__toString[この日付の文字列表現を返す]
MongoGridFS::__construct[新しいファイルコレクションを作成する]
MongoGridFS::delete[ファイルをデータベースから削除する]
MongoGridFS::drop[ファイルコレクションおよびチャンクコレクションを削除する]
MongoGridFS::findOne[条件にマッチする単一のファイルを返す]
MongoGridFS::find[ファイルを問い合わせる]
MongoGridFS::get[ファイルをデータベースから取得する]
MongoGridFS::put[ファイルをデータベースに格納する]
MongoGridFS::remove[ファイルをコレクションから削除する]
MongoGridFS::storeBytes[バイト列をデータベースに格納する]
MongoGridFS::storeFile[ファイルをデータベースに格納する]
MongoGridFS::storeUpload[アップロードされたファイルをデータベースに格納する]
MongoGridFSCursor::__construct[新しいカーソルを作成する]
MongoGridFSCursor::current[現在のファイルを返す]
MongoGridFSCursor::getNext[カーソルが指す次のファイルを返し、カーソルを進める]
MongoGridFSCursor::key[現在の結果のファイル名を返す]
MongoGridFSFile::getBytes[このファイルの内容をバイト文字列で返す]
MongoGridFSFile::getFilename[このファイルのファイル名を返す]
MongoGridFSFile::getResource[格納されたファイルを読むために使うリソースを返す]
MongoGridFSFile::getSize[このファイルのサイズを返す]
MongoGridFSFile::write[このファイルをファイルシステムに書き込む]
MongoGridfsFile::__construct[新しい GridFS ファイルを作成する]
MongoId::__construct[新しい ID を作成する]
MongoId::__set_state[ダミー MongoId を作成する]
MongoId::__toString[この ID の 16 進表現を返す]
MongoId::getHostname[このマシンの id に使うホスト名を取得する]
MongoId::getInc[この id を作るためにインクリメントされた値を取得する]
MongoId::getPID[プロセス ID を取得する]
MongoId::getTimestamp[この id が作られたときのエポックからの経過秒数を取得する]
MongoInt32::__construct[新しい 32 ビット整数値を作成する]
MongoInt32::__toString[この 32 ビット整数値の文字列表現を返す]
MongoInt64::__construct[新しい 64 ビット整数値を作成する]
MongoInt64::__toString[この 64 ビット整数値の文字列表現を返す]
MongoLog::getCallback[以前に設定されたコールバック関数の名前を取得する]
MongoLog::getLevel[ログレベルを取得する]
MongoLog::getModule[現在ログを記録しているモジュールを取得する]
MongoLog::setCallback[イベントに対応して呼ばれるコールバック関数を設定する]
MongoLog::setLevel[ログレベルを設定する]
MongoLog::setModule[ログに記録するドライバの機能を設定する]
MongoPool::getSize[接続プールのサイズを取得する]
MongoPool::info[すべての接続プールに関する情報を返す]
MongoPool::setSize[新しい接続プールのサイズを設定する]
MongoRegex::__construct[新しい正規表現を作成する]
MongoRegex::__toString[この正規表現の文字列表現]
MongoResultException::getDocument[結果ドキュメントを取得する]
MongoTimestamp::__construct[新しいタイムスタンプを作成する]
MongoTimestamp::__toString[このタイムスタンプを文字列形式で返す]
MultipleIterator::attachIterator[イテレータの情報をアタッチする]
MultipleIterator::containsIterator[イテレータがアタッチされているかどうかを調べる]
MultipleIterator::countIterators[アタッチされているイテレータインスタンスの数を取得する]
MultipleIterator::current[登録されているイテレータインスタンスを取得する]
MultipleIterator::detachIterator[イテレータをデタッチする]
MultipleIterator::getFlags[フラグの情報を取得する]
MultipleIterator::key[登録されているイテレータインスタンスを取得する]
MultipleIterator::next[アタッチしているすべてのイテレータインスタンスを次に移動させる]
MultipleIterator::rewind[アタッチしているすべてのイテレータインスタンスを巻き戻す]
MultipleIterator::setFlags[フラグを設定する]
MultipleIterator::valid[サブイテレータの有効性を調べる]
Mutex::create[ミューテックスを作る]
Mutex::destroy[ミューテックスを破棄する]
Mutex::lock[ミューテックスを確保する]
Mutex::trylock[ミューテックスの確保を試みる]
Mutex::unlock[ミューテックスを解放する]
MysqlndUhConnection::__construct[The __construct purpose]
MysqlndUhConnection::changeUser[Changes the user of the specified mysqlnddatabase connection]
MysqlndUhConnection::charsetName[Returns the default character set for thedatabase connection]
MysqlndUhConnection::close[Closes a previously opened databaseconnection]
MysqlndUhConnection::connect[Open a new connection to the MySQLserver]
MysqlndUhConnection::endPSession[End a persistent connection]
MysqlndUhConnection::escapeString[Escapes special characters in a string foruse in an SQL statement, taking into account the current charset ofthe connection]
MysqlndUhConnection::getAffectedRows[Gets the number of affected rows in aprevious MySQL operation]
MysqlndUhConnection::getErrorNumber[Returns the error code for the most recentfunction call]
MysqlndUhConnection::getErrorString[Returns a string description of the lasterror]
MysqlndUhConnection::getFieldCount[Returns the number of columns for the mostrecent query]
MysqlndUhConnection::getHostInformation[Returns a string representing the type ofconnection used]
MysqlndUhConnection::getLastInsertId[Returns the auto generated id used in thelast query.]
MysqlndUhConnection::getLastMessage[Retrieves information about the mostrecently executed query]
MysqlndUhConnection::getProtocolInformation[Returns the version of the MySQL protocolused]
MysqlndUhConnection::getServerInformation[Returns the version of the MySQLserver]
MysqlndUhConnection::getServerStatistics[Gets the current system status]
MysqlndUhConnection::getServerVersion[Returns the version of the MySQL server asan integer]
MysqlndUhConnection::getSqlstate[Returns the SQLSTATE error from previousMySQL operation]
MysqlndUhConnection::getStatistics[Returns statistics about the clientconnection.]
MysqlndUhConnection::getThreadId[Returns the thread ID for the currentconnection]
MysqlndUhConnection::getWarningCount[Returns the number of warnings from the lastquery for the given link]
MysqlndUhConnection::init[Initialize mysqlnd connection]
MysqlndUhConnection::killConnection[Asks the server to kill a MySQLthread]
MysqlndUhConnection::listFields[List MySQL table fields]
MysqlndUhConnection::listMethod[Wrapper for assorted list commands]
MysqlndUhConnection::moreResults[Check if there are any more query resultsfrom a multi query]
MysqlndUhConnection::nextResult[Prepare next result from multi_query]
MysqlndUhConnection::ping[Pings a server connection, or tries toreconnect if the connection has gone down]
MysqlndUhConnection::queryReadResultsetHeader[Read a result set header]
MysqlndUhConnection::query[Performs a query on the database]
MysqlndUhConnection::reapQuery[Get result from async query]
MysqlndUhConnection::refreshServer[Flush or reset tables and caches]
MysqlndUhConnection::restartPSession[Restart a persistent mysqlndconnection]
MysqlndUhConnection::selectDb[Selects the default database for databasequeries]
MysqlndUhConnection::sendClose[Sends a close command to MySQL]
MysqlndUhConnection::sendQuery[Sends a query to MySQL]
MysqlndUhConnection::serverDumpDebugInformation[Dump debugging information into the log forthe MySQL server]
MysqlndUhConnection::setAutocommit[Turns on or off auto-committing databasemodifications]
MysqlndUhConnection::setCharset[Sets the default client character set]
MysqlndUhConnection::setClientOption[Sets a client option]
MysqlndUhConnection::setServerOption[Sets a server option]
MysqlndUhConnection::shutdownServer[The shutdownServer purpose]
MysqlndUhConnection::simpleCommandHandleResponse[Process a response for a basic COM_* commandsend to the client]
MysqlndUhConnection::simpleCommand[Sends a basic COM_* command]
MysqlndUhConnection::sslSet[Used for establishing secure connectionsusing SSL]
MysqlndUhConnection::stmtInit[Initializes a statement and returns aresource for use with mysqli_statement::prepare]
MysqlndUhConnection::storeResult[Transfers a result set from the lastquery]
MysqlndUhConnection::txCommit[Commits the current transaction]
MysqlndUhConnection::txRollback[Rolls back current transaction]
MysqlndUhConnection::useResult[Initiate a result set retrieval]
MysqlndUhPreparedStatement::__construct[The __construct purpose]
MysqlndUhPreparedStatement::execute[Executes a prepared Query]
MysqlndUhPreparedStatement::prepare[Prepare an SQL statement forexecution]
NoRewindIterator::__construct[NoRewindIterator を作成する]
NoRewindIterator::current[現在の値を取得する]
NoRewindIterator::getInnerIterator[内部イテレータを取得する]
NoRewindIterator::key[現在のキーを取得する]
NoRewindIterator::next[次の要素に移動する]
NoRewindIterator::rewind[内部イテレータの巻き戻し操作を阻止する]
NoRewindIterator::valid[イテレータの有効性を検証する]
Normalizer::isNormalized[渡された文字列が、指定した正規化を適用済みかどうかを調べる]
Normalizer::normalize[渡された入力を正規化し、正規化後の文字列を返す]
NumberFormatter::create[数値フォーマッタを作成する]
NumberFormatter::formatCurrency[通貨の値をフォーマットする]
NumberFormatter::format[数値をフォーマットする]
NumberFormatter::getAttribute[属性を取得する]
NumberFormatter::getErrorCode[フォーマッタの直近のエラーコードを取得する]
NumberFormatter::getErrorMessage[フォーマッタの直近のエラーメッセージを取得する]
NumberFormatter::getLocale[フォーマッタのロケールを取得する]
NumberFormatter::getPattern[フォーマッタのパターンを取得する]
NumberFormatter::getSymbol[記号を取得する]
NumberFormatter::getTextAttribute[テキストの属性を取得する]
NumberFormatter::parseCurrency[通貨をパースする]
NumberFormatter::parse[数値をパースする]
NumberFormatter::setAttribute[属性を設定する]
NumberFormatter::setPattern[フォーマッタのパターンを設定する]
NumberFormatter::setSymbol[記号の値を設定する]
NumberFormatter::setTextAttribute[テキスト属性を設定する]
OAuth::__construct[新しい OAuth オブジェクトを作成する]
OAuth::__destruct[デストラクタ]
OAuth::disableDebug[デバッグを無効にする]
OAuth::disableRedirects[リダイレクトを無効にする]
OAuth::disableSSLChecks[SSL チェックを無効にする]
OAuth::enableDebug[デバッグを有効にする]
OAuth::enableRedirects[リダイレクトを有効にする]
OAuth::enableSSLChecks[SSL チェックを有効にする]
OAuth::fetch[OAuth で保護されたリソースを取得する]
OAuth::generateSignature[シグネチャを生成する]
OAuth::getAccessToken[アクセストークンを取得する]
OAuth::getCAPath[CA 情報を取得する]
OAuth::getLastResponseHeaders[最後のレスポンスのヘッダを取得する]
OAuth::getLastResponseInfo[直近のレスポンスの HTTP 情報を取得する]
OAuth::getLastResponse[直近のレスポンスを取得する]
OAuth::getRequestHeader[OAuth ヘッダ文字列シグネチャを生成する]
OAuth::getRequestToken[リクエストトークンを取得する]
OAuth::setAuthType[認証方式を設定する]
OAuth::setCAPath[CA パスおよび情報を設定する]
OAuth::setNonce[続くリクエスト用のノンスを設定する]
OAuth::setRSACertificate[RSA 証明書を設定する]
OAuth::setRequestEngine[setRequestEngine]
OAuth::setSSLChecks[リクエストに固有の SSL チェックを調整する]
OAuth::setTimestamp[タイムスタンプを設定する]
OAuth::setToken[トークンと secret を設定する]
OAuth::setVersion[OAuth のバージョンを設定する]
OAuthProvider::__construct[新しい OAuthProvider オブジェクトを作る]
OAuthProvider::addRequiredParameter[必須パラメータを追加する]
OAuthProvider::callTimestampNonceHandler[timestampNonceHandler コールバックをコールする]
OAuthProvider::callconsumerHandler[consumerNonceHandler コールバックをコールする]
OAuthProvider::calltokenHandler[tokenNonceHandler コールバックをコールする]
OAuthProvider::checkOAuthRequest[oauth リクエストをチェックする]
OAuthProvider::consumerHandler[consumerHandler コールバックを設定する]
OAuthProvider::generateToken[ランダムなトークンを生成する]
OAuthProvider::is2LeggedEndpoint[is2LeggedEndpoint]
OAuthProvider::isRequestTokenEndpoint[isRequestTokenEndpoint を設定する]
OAuthProvider::removeRequiredParameter[必須パラメータを削除する]
OAuthProvider::reportProblem[問題を報告する]
OAuthProvider::setParam[パラメータを設定する]
OAuthProvider::setRequestTokenPath[リクエストトークンのパスを設定する]
OAuthProvider::timestampNonceHandler[timestampNonceHandler コールバックを設定する]
OAuthProvider::tokenHandler[tokenHandler コールバックを設定する]
OCI-Collection::append[コレクションに要素を追加する]
OCI-Collection::assignElem[コレクションの要素に値を割り当てる]
OCI-Collection::assign[コレクションに他の存在するコレクションから値を割り当てる]
OCI-Collection::free[コレクションオブジェクトに関連付けられたリソースを解放する]
OCI-Collection::getElem[要素の値を返す]
OCI-Collection::max[コレクション内の要素の最大数を取得する]
OCI-Collection::size[コレクションのサイズを返す]
OCI-Collection::trim[コレクションの最後から要素を切り取る]
OCI-Lob::append[ラージオブジェクトのデータを他のラージオブジェクトに追加する]
OCI-Lob::close[LOB ディスクリプタを閉じる]
OCI-Lob::eof[ラージオブジェクトのディスクリプタが EOF かどうかを調べる]
OCI-Lob::erase[内部 LOB データの特定の位置を消去する]
OCI-Lob::export[LOB の内容をファイルに出力する]
OCI-Lob::flush[LOB のバッファをサーバーにフラッシュする、あるいは書き込む]
OCI-Lob::free[LOB ディスクリプタに関連付けられたりソースを解放する]
OCI-Lob::getBuffering[ラージオブジェクトに対する現在のバッファリングの状態を返す]
OCI-Lob::import[ファイルデータを LOB にインポートする]
OCI-Lob::load[ラージオブジェクトの内容を返す]
OCI-Lob::read[ラージオブジェクトの一部を読み込む]
OCI-Lob::rewind[内部ポインタをラージオブジェクトの先頭に移動する]
OCI-Lob::save[データをラージオブジェクトに保存する]
OCI-Lob::seek[ラージオブジェクトの内部ポインタをセットする]
OCI-Lob::setBuffering[現在のラージオブジェクト用のバッファリング状態を変更する]
OCI-Lob::size[ラージオブジェクトのサイズを返す]
OCI-Lob::tell[ラージオブジェクトの内部ポインタの現在位置を返す]
OCI-Lob::truncate[ラージオブジェクトを切りつめる]
OCI-Lob::writeTemporary[一時的なラージオブジェクトを書き込む]
OCI-Lob::write[データをラージオブジェクトに書き込む]
OuterIterator::getInnerIterator[現在のエントリの内部イテレータを返す]
PDF_activate_item[構造体要素やその他の内容をアクティブにする]
PDF_add_launchlink[現在のページに起動用注記を追加する (古い関数)]
PDF_add_locallink[現在のページにリンク注記を追加する (古い関数)]
PDF_add_nameddest[移動先を作成する]
PDF_add_note[現在のページに注記を追加する (古い関数)]
PDF_add_pdflink[現在のページにリンク注記を追加する (古い関数)]
PDF_add_table_cell[新しいテーブル、あるいは既存のテーブルにセルを追加する]
PDF_add_textflow[Textflow を作成するか、既存の Textflowにテキストを追加する]
PDF_add_thumbnail[現在のページにサムネイルを追加する]
PDF_add_weblink[現在のページに Web リンクを追加する (古い関数)]
PDF_arc[反時計回りに円弧を描く]
PDF_arcn[時計回りに円弧を描く]
PDF_attach_file[現在のページに添付ファイルを追加する (古い関数)]
PDF_begin_document[新しい PDF ファイルを作成する]
PDF_begin_font[Type 3 フォント定義を開始する]
PDF_begin_glyph[Type 3 フォントのグリフ定義を開始する]
PDF_begin_item[構造体要素あるいはその他の内容をオープンする]
PDF_begin_layer[レイヤーを開始する]
PDF_begin_page[新規ページを開始する (古い関数)]
PDF_begin_page_ext[新規ページを開始する]
PDF_begin_pattern[パターン定義を開始する]
PDF_begin_template[テンプレート定義を開始する (古い関数)]
PDF_begin_template_ext[テンプレート定義を開始する]
PDF_circle[円を描く]
PDF_clip[現在のパスに切り取る]
PDF_close[pdf ドキュメントを閉じる (古い関数)]
PDF_close_image[画像を閉じる]
PDF_close_pdi[PDF ドキュメント入力を閉じる (古い関数)]
PDF_close_pdi_page[ページハンドルを閉じる]
PDF_closepath[現在のパスを閉じる]
PDF_closepath_fill_stroke[現在のパスを閉じ、塗りつぶし、輪郭を描く]
PDF_closepath_stroke[パスを閉じ、パスに沿って線を描く]
PDF_concat[行列を CTM に追加する]
PDF_continue_text[次の行にテキストを出力する]
PDF_create_3dview[3D ビューを作成する]
PDF_create_action[オブジェクトやイベントに対するアクションを作成する]
PDF_create_annotation[矩形の注記を作成する]
PDF_create_bookmark[ブックマークを作成する]
PDF_create_field[フォームフィールドを作成する]
PDF_create_fieldgroup[フォームフィールドグループを作成する]
PDF_create_gstate[画像状態オブジェクトを作成する]
PDF_create_pvf[PDFlib 仮想ファイルを作成する]
PDF_create_textflow[textflow オブジェクトを作成する]
PDF_curveto[ベジエ曲線を描く]
PDF_define_layer[レイヤー定義を作成する]
PDF_delete[PDFlib オブジェクトを削除する]
PDF_delete_pvf[PDFlib 仮想ファイルを削除する]
PDF_delete_table[テーブルオブジェクトを削除する]
PDF_delete_textflow[textflow オブジェクトを削除する]
PDF_encoding_set_char[グリフ名や Unicode 値を追加する]
PDF_end_document[PDF ファイルを閉じる]
PDF_end_font[Type 3 フォント定義を終了する]
PDF_end_glyph[Type 3 フォントのグリフ定義を終了する]
PDF_end_item[構造体要素やその他の内容を閉じる]
PDF_end_layer[すべてのアクティブなレイヤーを無効にする]
PDF_end_page[ページを終了する]
PDF_end_page_ext[ページを終了する]
PDF_end_pattern[パターンを終了する]
PDF_end_template[テンプレートを終了する]
PDF_endpath[現在のパスを終了する]
PDF_fill[現在のパスを塗りつぶす]
PDF_fill_imageblock[画像ブロックをさまざまなデータで塗りつぶす]
PDF_fill_pdfblock[PDF ブロックをさまざまなデータで塗りつぶす]
PDF_fill_stroke[パスを塗りつぶし、パスの輪郭を描く]
PDF_fill_textblock[テキストブロックをさまざまなデータで塗りつぶす]
PDF_findfont[後で使用するフォントを準備する (古い関数)]
PDF_fit_image[画像やテンプレートを配置する]
PDF_fit_pdi_page[インポートした PDF ページを配置する]
PDF_fit_table[テーブルをページに配置する]
PDF_fit_textflow[textflow を矩形領域に配置する]
PDF_fit_textline[1 行分のテキストを配置する]
PDF_get_apiname[成功しなかった API 関数の名前を取得する]
PDF_get_buffer[PDF 出力バッファを取得する]
PDF_get_errmsg[エラーテキストを取得する]
PDF_get_errnum[エラー番号を取得する]
PDF_get_majorversion[メジャーバージョン番号を取得する (古い関数)]
PDF_get_minorversion[マイナーバージョン番号を取得する (古い関数)]
PDF_get_parameter[文字列パラメータを取得する]
PDF_get_pdi_parameter[PDI 文字列パラメータを取得する (古い関数)]
PDF_get_pdi_value[数値型の PDI パラメータを取得する (古い関数)]
PDF_get_value[数値型のパラメータを取得する]
PDF_info_font[読み込まれたフォントについての詳細情報を問い合わせる]
PDF_info_matchbox[マッチボックスの情報を問い合わせる]
PDF_info_table[テーブルの情報を取得する]
PDF_info_textflow[textflow の状態を問い合わせる]
PDF_info_textline[テキストの行のフォーマットを行い、メトリクスを問い合わせる]
PDF_initgraphics[描画状態をリセットする]
PDF_lineto[線を描く]
PDF_load_3ddata[3D モデルを読み込む]
PDF_load_font[フォントを検索し、準備する]
PDF_load_iccprofile[ICC プロファイルを検索し、準備する]
PDF_load_image[画像ファイルをオープンする]
PDF_makespotcolor[スポット色を作成する]
PDF_moveto[現在の位置を設定する]
PDF_new[PDFlib オブジェクトを作成する]
PDF_open_ccitt[raw CCITT イメージをオープンする (古い関数)]
PDF_open_file[PDF ファイルを作成する (古い関数)]
PDF_open_image[イメージデータを使用する (古い関数)]
PDF_open_image_file[ファイルからイメージを読み込む (古い関数)]
PDF_open_memory_image[PHP のイメージ関数で作成されたイメージをオープンする (未サポート)]
PDF_open_pdi[PDF ファイルをオープンする (古い関数)]
PDF_open_pdi_document[pdi ドキュメントを準備する]
PDF_open_pdi_page[ページを準備する]
PDF_pcos_get_number[number あるいは boolean 型の pCOS パスの値を取得する]
PDF_pcos_get_stream[stream、fstream あるいは string 型の pCOSパスの内容を取得する]
PDF_pcos_get_string[name、string あるいは boolean 型の pCOSパスの値を取得する]
PDF_place_image[イメージをページ上に置く (古い関数)]
PDF_place_pdi_page[PDF ページを置く (古い関数)]
PDF_process_pdi[インポートされた PDF ドキュメントを処理する]
PDF_rect[矩形を描く]
PDF_restore[描画状態を復元する]
PDF_resume_page[ページを再開する]
PDF_rotate[座標系を回転する]
PDF_save[描画状態を保存する]
PDF_scale[スケールを設定する]
PDF_set_border_color[注記の周りの境界色を設定する (古い関数)]
PDF_set_border_dash[注記の周りの境界の破線形式を設定する (古い関数)]
PDF_set_border_style[注記の周りの境界の形式を設定する (古い関数)]
PDF_set_gstate[画像状態オブジェクトをアクティブにする]
PDF_set_info[ドキュメント情報のフィールドを設定する]
PDF_set_layer_dependency[レイヤー間の関係を定義する]
PDF_set_parameter[文字列パラメータを設定する]
PDF_set_text_pos[テキストの位置を設定する]
PDF_set_value[数値パラメータを設定する]
PDF_setcolor[塗りつぶし色および輪郭色を設定する]
PDF_setdash[破線パターンを設定する]
PDF_setdashpattern[破線パターンを設定する]
PDF_setflat[平面度を設定する]
PDF_setfont[フォントを設定する]
PDF_setgray[色をグレーに設定する (古い関数)]
PDF_setgray_fill[塗りつぶし色をグレーに設定する (古い関数)]
PDF_setgray_stroke[描画色をグレーに設定する (古い関数)]
PDF_setlinecap[linecap パラメータを設定する]
PDF_setlinejoin[linejoin パラメータを設定する]
PDF_setlinewidth[線幅を設定する]
PDF_setmatrix[現在の変換行列を設定する]
PDF_setmiterlimit[miter limit を設定する]
PDF_setrgbcolor[描画および塗りつぶし RGB 色を設定する (古い関数)]
PDF_setrgbcolor_fill[塗りつぶし RGB 色の値を設定する]
PDF_setrgbcolor_stroke[描画 RGB 色を設定する (古い関数)]
PDF_shading[混色を定義する]
PDF_shading_pattern[シェーディングパターンを定義する]
PDF_shfill[シェーディングで領域を塗りつぶす]
PDF_show[現在の位置にテキストを出力する]
PDF_show_boxed[ボックスにテキストを出力する (古い関数)]
PDF_show_xy[指定した位置にテキストを出力する]
PDF_skew[座標系を歪ませる]
PDF_stringwidth[テキストの幅を返す]
PDF_stroke[パスを描く]
PDF_suspend_page[ページを停止する]
PDF_translate[座標系の原点を設定する]
PDF_utf16_to_utf8[文字列を UTF-16 から UTF-8 に変換する]
PDF_utf32_to_utf16[文字列を UTF-32 から UTF-16 に変換する]
PDF_utf8_to_utf16[文字列を UTF-8 から UTF-16 に変換する]
PDO::beginTransaction[トランザクションを開始する]
PDO::commit[トランザクションをコミットする]
PDO::cubrid_schema[指定したスキーマ情報を取得する]
PDO::errorCode[データベースハンドラにおける直近の操作に関連する SQLSTATEを取得する]
PDO::errorInfo[データベースハンドラにおける直近の操作に関連する拡張エラー情報を取得する]
PDO::exec[SQL ステートメントを実行し、作用した行数を返す]
PDO::getAttribute[データベース接続の属性を取得する]
PDO::getAvailableDrivers[利用可能な PDO ドライバの配列を返す]
PDO::inTransaction[トランザクション内かどうかを調べる]
PDO::lastInsertId[最後に挿入された行の ID あるいはシーケンスの値を返す]
PDO::pgsqlLOBCreate[新しいラージオブジェクトを作成する]
PDO::pgsqlLOBOpen[既存のラージオブジェクトのストリームをオープンする]
PDO::pgsqlLOBUnlink[ラージオブジェクトを削除する]
PDO::prepare[文を実行する準備を行い、文オブジェクトを返す]
PDO::query[SQL ステートメントを実行し、結果セットを PDOStatementオブジェクトとして返す]
PDO::quote[クエリ用の文字列をクオートする]
PDO::rollBack[トランザクションをロールバックする]
PDO::setAttribute[属性を設定する]
PDO::sqliteCreateAggregate[SQL 文で使用する集約ユーザー定義関数 (UDF) を登録する]
PDO::sqliteCreateFunction[SQL 文で使用するユーザー定義関数 (UDF) を登録する]
PDOStatement::bindColumn[カラムを PHP 変数にバインドする]
PDOStatement::bindParam[指定された変数名にパラメータをバインドする]
PDOStatement::bindValue[値をパラメータにバインドする]
PDOStatement::closeCursor[カーソルを閉じてステートメントを再実行できるようにする]
PDOStatement::columnCount[結果セット中のカラム数を返す]
PDOStatement::debugDumpParams[SQL プリペアドコマンドを出力する]
PDOStatement::errorCode[文ハンドラにおける直近の操作に関連する SQLSTATE を取得する]
PDOStatement::errorInfo[文ハンドラにおける直近の操作に関連する拡張エラー情報を取得する]
PDOStatement::execute[プリペアドステートメントを実行する]
PDOStatement::fetchAll[全ての結果行を含む配列を返す]
PDOStatement::fetchColumn[結果セットの次行から単一カラムを返す]
PDOStatement::fetchObject[次の行を取得し、それをオブジェクトとして返す]
PDOStatement::fetch[結果セットから次の行を取得する]
PDOStatement::getAttribute[文の属性を取得する]
PDOStatement::getColumnMeta[結果セットのカラムに対するメタデータを返す]
PDOStatement::nextRowset[複数の行セットを返す文ハンドラで次の行セットに移動する]
PDOStatement::rowCount[直近の SQL ステートメントによって作用した行数を返す]
PDOStatement::setAttribute[文の属性を設定する]
PDOStatement::setFetchMode[この文に対するデフォルトのフェッチモードを設定する]
ParentIterator::__construct[ParentIterator を作成する]
ParentIterator::accept[受け入れ可能かどうかを調べる]
ParentIterator::getChildren[ParentIterator に含まれる内部イテレータの子を返す]
ParentIterator::hasChildren[内部イテレータの現在の要素が子を持つかどうかをチェックする]
ParentIterator::next[イテレータを前に移動する]
ParentIterator::rewind[イテレータを巻き戻す]
Phar::__construct[Phar アーカイブオブジェクトを作成する]
Phar::addEmptyDir[空のディレクトリを phar アーカイブに追加する]
Phar::addFile[ファイルシステム上のファイルを phar アーカイブに追加する]
Phar::addFromString[ファイルシステム上のファイルを phar アーカイブに追加する]
Phar::apiVersion[API のバージョンを返す]
Phar::buildFromDirectory[ディレクトリ内のファイルから phar を作成する]
Phar::buildFromIterator[イテレータから phar アーカイブを作成する]
Phar::canCompress[phar 拡張モジュールが zlib あるいは bzip2による圧縮をサポートしているかどうかを返す]
Phar::canWrite[phar 拡張モジュールが pharの書き込みや作成をサポートしているかどうかを返す]
Phar::compressAllFilesBZIP2[現在の Phar アーカイブ内のすべてのファイルを Bzip2 で圧縮する]
Phar::compressAllFilesGZ[現在の Phar アーカイブ内のすべてのファイルを Gzip で圧縮する]
Phar::compressFiles[現在の Phar アーカイブ内のすべてのファイルを圧縮する]
Phar::compress[Phar アーカイブ全体を Gzip あるいは Bzip2 で圧縮する]
Phar::convertToData[phar アーカイブを実行可能でない tar あるいは zipファイルに変換する]
Phar::convertToExecutable[phar アーカイブを実行可能な別の phar アーカイブ形式に変換する]
Phar::copy[phar アーカイブ内のファイルを、phar内で別の新しいファイルとしてコピーする]
Phar::count[Phar アーカイブ内のエントリ (ファイル) の数を返す]
Phar::createDefaultStub[phar ファイルフォーマット用のスタブを作成する]
Phar::decompressFiles[現在の Phar アーカイブ内のすべてのファイルの圧縮を解除する]
Phar::decompress[Phar アーカイブ全体の圧縮を解除する]
Phar::delMetadata[phar のグローバルメタデータを削除する]
Phar::delete[phar アーカイブ内のファイルを削除する]
Phar::extractTo[phar アーカイブの内容をディレクトリに展開する]
Phar::getMetadata[phar アーカイブのメタデータを返す]
Phar::getModified[phar が変更されているかどうかを返す]
Phar::getSignature[Phar アーカイブの MD5/SHA1/SHA256/SHA512/OpenSSLシグネチャを返す]
Phar::getStub[Phar アーカイブの PHP ローダーあるいは起動スタブを返す]
Phar::getSupportedCompression[サポートする圧縮アルゴリズムの配列を返す]
Phar::getSupportedSignatures[サポートするシグネチャ型の配列を返す]
Phar::getVersion[Phar アーカイブのバージョン情報を返す]
Phar::hasMetadata[ファイルがグローバルなメタデータを持つかどうかを返す]
Phar::interceptFileFuncs[fopen、file_get_contents、opendir などの stat関連の関数をすべて phar に横取りさせる]
Phar::isBuffering[Pharの書き込み操作がバッファリングされるか、あるいは直接ディスクに書き込まれるかを調べる]
Phar::isCompressed[phar アーカイブ全体が (.tar.gz/tar.bz などで)圧縮されている場合に Phar::GZ あるいは PHAR::BZ2 を返す]
Phar::isFileFormat[phar アーカイブが、パラメータで指定した tar/phar/zipのいずれかの形式である場合に true を返す]
Phar::isValidPharFilename[指定したファイル名が正しい形式の phar ファイルかどうかを返す]
Phar::isWritable[phar アーカイブが変更可能な場合に true を返す]
Phar::loadPhar[任意の phar アーカイブを、エイリアスを指定して読み込む]
Phar::mapPhar[現在実行されている (phar 形式の)ファイルを読み込み、その内容を登録する]
Phar::mount[外部のパスあるいはファイルを phar アーカイブ内に仮想的にマウントする]
Phar::mungServer[最大 4 つまでの $_SERVER 変数を実行時に変更させる]
Phar::offsetExists[ファイルが phar 内に存在するかどうかを調べる]
Phar::offsetGet[指定したファイルの PharFileInfo オブジェクトを取得する]
Phar::offsetSet[内部ファイルに、外部ファイルの内容を設定する]
Phar::offsetUnset[ファイルを phar から削除する]
Phar::running[現在実行中の Phar アーカイブのフルパスあるいは完全な phar URLを返す]
Phar::setAlias[Phar アーカイブのエイリアスを設定する]
Phar::setDefaultStub[Phar アーカイブの PHP ローダー (起動スタブ)をデフォルトのローダーに設定する]
Phar::setMetadata[phar アーカイブのメタデータを設定する]
Phar::setMetadata[phar アーカイブのメタデータを設定する]
Phar::setSignatureAlgorithm[phar のシグネチャのアルゴリズムを設定して適用する]
Phar::setSignatureAlgorithm[phar のシグネチャのアルゴリズムを設定する]
Phar::setStub[Phar アーカイブの PHP ローダ (あるいは起動スタブ) を設定する]
Phar::startBuffering[Phar の書き込み操作のバッファリングを開始するが、ディスク上の Pharオブジェクトは変更しない]
Phar::stopBuffering[Pharアーカイブへの書き込みリクエストのバッファリングを終了し、変更内容をディスクに書き込む]
Phar::uncompressAllFiles[現在の Phar アーカイブ内のすべてのファイルを展開する]
Phar::unlinkArchive[phar アーカイブをディスクとメモリから完全に削除する]
Phar::webPhar[ウェブベースの phar で使用するフロントコントローラ]
PharData::__construct[実行可能でない tar あるいは zip アーカイブオブジェクトを作成する]
PharData::addEmptyDir[空のディレクトリを tar/zip アーカイブに追加する]
PharData::addFile[ファイルシステム上のファイルを tar/zip アーカイブに追加する]
PharData::addFromString[ファイルシステム上のファイルを tar/zip アーカイブに追加する]
PharData::buildFromDirectory[ディレクトリ内のファイルから tar/zip アーカイブを作成する]
PharData::buildFromIterator[イテレータから tar あるいは zip アーカイブを作成する]
PharData::compressFiles[現在の tar/zip アーカイブ内のすべてのファイルを圧縮する]
PharData::compress[tar/zip アーカイブ全体を Gzip あるいは Bzip2で圧縮する]
PharData::convertToData[phar アーカイブを実行可能でない tar あるいは zipファイルに変換する]
PharData::convertToExecutable[実行可能でない tar/zip アーカイブを実行可能な pharアーカイブ形式に変換する]
PharData::copy[phar アーカイブ内のファイルを、phar内で別の新しいファイルとしてコピーする]
PharData::decompressFiles[現在の zip アーカイブ内のすべてのファイルの圧縮を解除する]
PharData::decompress[Phar アーカイブ全体の圧縮を解除する]
PharData::delMetadata[zip アーカイブのグローバルメタデータを削除する]
PharData::delete[tar/zip アーカイブ内のファイルを削除する]
PharData::extractTo[tar/zip アーカイブの内容をディレクトリに展開する]
PharData::isWritable[tar/zip アーカイブが変更可能な場合に true を返す]
PharData::offsetSet[tar/zipの内部のファイルに、外部ファイルあるいは文字列の内容を設定する]
PharData::offsetUnset[ファイルを tar/zip アーカイブから削除する]
PharData::setAlias[ダミー関数 (Phar::setAlias は PharDataでは使用不能)]
PharData::setDefaultStub[ダミー関数 (Phar::setDefaultStub は PharDataでは無効)]
PharData::setStub[ダミー関数 (Phar::setStub は PharDataでは使用不能)]
PharFileInfo::__construct[Phar エントリオブジェクトを作成する]
PharFileInfo::chmod[ファイル固有のパーミッションビットを設定する]
PharFileInfo::compress[現在の Phar エントリを zlib あるいは bzip2のいずれかで圧縮する]
PharFileInfo::decompress[phar 内の現在の Phar エントリの圧縮を解除する]
PharFileInfo::delMetadata[エントリのメタデータを削除する]
PharFileInfo::getCRC32[CRC32 コードを返すか、CRCがチェックできない場合に例外をスローする]
PharFileInfo::getCompressedSize[Phar アーカイブ内での実際のファイルの大きさ (圧縮された状態)を返す]
PharFileInfo::getMetadata[ファイルとともに保存されている、ファイル固有のメタデータを返す]
PharFileInfo::getPharFlags[Phar ファイルエントリのフラグを返す]
PharFileInfo::hasMetadata[エントリのメタデータを返す]
PharFileInfo::isCRCChecked[ファイルエントリの CRC が検証されているかどうかを調べる]
PharFileInfo::isCompressedBZIP2[エントリが bzip2 で圧縮されているかどうかを調べる]
PharFileInfo::isCompressedGZ[エントリが gz で圧縮されているかどうかを調べる]
PharFileInfo::isCompressed[エントリが圧縮されているかどうかを調べる]
PharFileInfo::setCompressedBZIP2[phar 内の現在の Phar エントリを、Bzip2 で圧縮する]
PharFileInfo::setCompressedGZ[phar 内の現在の Phar エントリを、gz で圧縮する]
PharFileInfo::setMetadata[ファイルとともに保存する、ファイル固有のメタデータを設定する]
PharFileInfo::setUncompressed[phar 内の現在の Pharエントリが圧縮されている場合に、それを展開する]
QuickHashIntHash::__construct[新しい QuickHashIntHash オブジェクトを作る]
QuickHashIntHash::add[新たなエントリをハッシュに追加する]
QuickHashIntHash::delete[エントリをハッシュから削除する]
QuickHashIntHash::exists[キーがハッシュに存在するかどうかを調べる]
QuickHashIntHash::getSize[ハッシュの要素数を返す]
QuickHashIntHash::get[キーを指定してハッシュから値を取得する]
QuickHashIntHash::loadFromFile[ファイルからハッシュを作るファクトリーメソッド]
QuickHashIntHash::loadFromString[文字列からハッシュを作るファクトリーメソッド]
QuickHashIntHash::saveToFile[メモリ上のハッシュをディスクに保存する]
QuickHashIntHash::saveToString[シリアライズしたハッシュを返す]
QuickHashIntHash::set[ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加)する]
QuickHashIntHash::update[ハッシュのエントリを新しい値で更新する]
QuickHashIntSet::__construct[新しい QuickHashIntSet オブジェクトを作る]
QuickHashIntSet::add[新たなエントリをセットに追加する]
QuickHashIntSet::delete[エントリをセットから削除する]
QuickHashIntSet::exists[キーがセットに存在するかどうかを調べる]
QuickHashIntSet::getSize[セットの要素数を返す]
QuickHashIntSet::loadFromFile[ファイルからセットを作るファクトリーメソッド]
QuickHashIntSet::loadFromString[文字列からセットを作るファクトリーメソッド]
QuickHashIntSet::saveToFile[メモリ上のセットをディスクに保存する]
QuickHashIntSet::saveToString[シリアライズしたセットを返す]
QuickHashIntStringHash::__construct[新しい QuickHashIntStringHash オブジェクトを作る]
QuickHashIntStringHash::add[新たなエントリをハッシュに追加する]
QuickHashIntStringHash::delete[エントリをハッシュから削除する]
QuickHashIntStringHash::exists[キーがハッシュに存在するかどうかを調べる]
QuickHashIntStringHash::getSize[ハッシュの要素数を返す]
QuickHashIntStringHash::get[キーを指定してハッシュから値を取得する]
QuickHashIntStringHash::loadFromFile[ファイルからハッシュを作るファクトリーメソッド]
QuickHashIntStringHash::loadFromString[文字列からハッシュを作るファクトリーメソッド]
QuickHashIntStringHash::saveToFile[メモリ上のハッシュをディスクに保存する]
QuickHashIntStringHash::saveToString[シリアライズしたハッシュを返す]
QuickHashIntStringHash::set[ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加)する]
QuickHashIntStringHash::update[ハッシュのエントリを新しい値で更新する]
QuickHashStringIntHash::__construct[新しい QuickHashStringIntHash オブジェクトを作る]
QuickHashStringIntHash::add[新たなエントリをハッシュに追加する]
QuickHashStringIntHash::delete[エントリをハッシュから削除する]
QuickHashStringIntHash::exists[キーがハッシュに存在するかどうかを調べる]
QuickHashStringIntHash::getSize[ハッシュの要素数を返す]
QuickHashStringIntHash::get[キーを指定してハッシュから値を取得する]
QuickHashStringIntHash::loadFromFile[ファイルからハッシュを作るファクトリーメソッド]
QuickHashStringIntHash::loadFromString[文字列からハッシュを作るファクトリーメソッド]
QuickHashStringIntHash::saveToFile[メモリ上のハッシュをディスクに保存する]
QuickHashStringIntHash::saveToString[シリアライズしたハッシュを返す]
QuickHashStringIntHash::set[ハッシュ内のエントリの値を更新 (エントリが存在しない場合は新しく追加)する]
QuickHashStringIntHash::update[ハッシュのエントリを新しい値で更新する]
RRDCreator::__construct[Creates new RRDCreatorinstance]
RRDCreator::addArchive[Adds RRA - archive of data values for eachdata source.]
RRDCreator::addDataSource[Adds data source definition for RRDdatabase.]
RRDCreator::save[Saves the RRD database to a file]
RRDGraph::__construct[Creates new RRDGraphinstance]
RRDGraph::saveVerbose[Saves the RRD database query into image andreturns the verbose information about generated graph.]
RRDGraph::save[Saves the result of query into image]
RRDGraph::setOptions[Sets the options for rrd graph export]
RRDUpdater::__construct[Creates new RRDUpdaterinstance]
RRDUpdater::update[Update the RRD database file]
RarArchive::__toString[テキスト形式で取得する]
RarArchive::close[Rar アーカイブをクローズし、全リソースを開放する]
RarArchive::getComment[RAR アーカイブのコメントテキストを取得する]
RarArchive::getEntries[RAR アーカイブからエントリの全一覧を取得する]
RarArchive::getEntry[Rar アーカイブからエントリオブジェクトを取得する]
RarArchive::isBroken[アーカイブが壊れている (未完成である) かどうかを調べる]
RarArchive::isSolid[RAR アーカイブがソリッドであるかどうかを調べる]
RarArchive::open[Rar アーカイブをオープンする]
RarArchive::setAllowBroken[壊れたアーカイブのオープンを許可するかどうかを設定する]
RarEntry::__toString[エントリのテキスト表現を取得する]
RarEntry::extract[アーカイブのエントリを展開する]
RarEntry::getAttr[エントリの属性を取得する]
RarEntry::getCrc[エントリの CRC を取得する]
RarEntry::getFileTime[エントリの最終更新時刻を取得する]
RarEntry::getHostOs[エントリのホスト OS を取得する]
RarEntry::getMethod[エントリの圧縮方法を取得する]
RarEntry::getName[エントリの名前を取得する]
RarEntry::getPackedSize[圧縮後のエントリのサイズを取得する]
RarEntry::getStream[このエントリのファイルハンドラを取得する]
RarEntry::getUnpackedSize[展開後のエントリのサイズを取得する]
RarEntry::getVersion[このエントリを展開するのに必要な RARプログラムの最低バージョンを取得する]
RarEntry::isDirectory[このエントリがディレクトリであるかどうかを調べる]
RarEntry::isEncrypted[このエントリが暗号化されているかどうかを調べる]
RarException::isUsingExceptions[例外によるエラー処理を使っているかどうかを調べる]
RarException::setUsingExceptions[例外によるエラー処理の有効化および無効化を行う]
RecursiveArrayIterator::getChildren[現在のエントリが配列あるいはオブジェクトである場合に、そのイテレータを返す]
RecursiveArrayIterator::hasChildren[現在のエントリが配列あるいはオブジェクトであるかどうかを返す]
RecursiveCachingIterator::__construct[コンストラクタ]
RecursiveCachingIterator::getChildren[内部イテレータの子を RecursiveCachingIteratorとして返す]
RecursiveCachingIterator::hasChildren[内部イテレータの現在の要素が子を持つかどうかチェックする]
RecursiveCallbackFilterIterator::getChildren[RecursiveCallbackFilterIteratorに含まれる内部イテレータの子を返す]
RecursiveCallbackFilterIterator::hasChildren[内部イテレータの現在の要素が子を持つかどうかを調べる]
RecursiveDirectoryIterator::__construct[RecursiveDirectoryIterator を作成する]
RecursiveDirectoryIterator::getChildren[ディレクトリであれば、現在のエントリに対するイテレータを返す]
RecursiveDirectoryIterator::getSubPath[サブパスを取得する]
RecursiveDirectoryIterator::getSubPathname[サブパスと名前を取得する]
RecursiveDirectoryIterator::hasChildren[現在のエントリがディレクトリかつ '.' もしくは '..'でないかどうかを返す]
RecursiveDirectoryIterator::key[現在のディレクトリエントリのパスとファイル名を返す]
RecursiveDirectoryIterator::next[次のエントリに移動する]
RecursiveDirectoryIterator::rewind[ディレクトリを最初に巻き戻す]
RecursiveFilterIterator::__construct[RecursiveIterator から RecursiveFilterIteratorを作成する]
RecursiveFilterIterator::getChildren[RecursiveFilterIteratorに含まれる内部イテレータの子を返す]
RecursiveFilterIterator::hasChildren[内部イテレータの現在の要素が子を持つかどうかを調べる]
RecursiveIterator::getChildren[現在のエントリのイテレータを返す]
RecursiveIterator::hasChildren[現在のエントリのイテレータを作れるかどうかを返す]
RecursiveIteratorIterator::__construct[RecursiveIteratorIterator を作成する]
RecursiveIteratorIterator::beginChildren[子を開始する]
RecursiveIteratorIterator::beginIteration[反復処理を開始する]
RecursiveIteratorIterator::callGetChildren[子を取得する]
RecursiveIteratorIterator::callHasChildren[子を持つかどうかを調べる]
RecursiveIteratorIterator::current[現在の要素の値にアクセスする]
RecursiveIteratorIterator::endChildren[子を終了する]
RecursiveIteratorIterator::endIteration[反復処理を終了する]
RecursiveIteratorIterator::getDepth[再帰的なイテレーションにおける現在の深さを取得する]
RecursiveIteratorIterator::getInnerIterator[内部イテレータを取得する]
RecursiveIteratorIterator::getMaxDepth[最大の深さを取得する]
RecursiveIteratorIterator::getSubIterator[現在の有効なサブイテレータを取得する]
RecursiveIteratorIterator::key[現在のキーにアクセスする]
RecursiveIteratorIterator::nextElement[次の要素]
RecursiveIteratorIterator::next[次の要素に移動する]
RecursiveIteratorIterator::rewind[トップレベルの内部イテレータの先頭要素にイテレータを巻き戻す]
RecursiveIteratorIterator::setMaxDepth[最大の深さを設定する]
RecursiveIteratorIterator::valid[現在の位置が有効かどうかをチェックする]
RecursiveRegexIterator::getChildren[現在のエントリのイテレータを返す]
RecursiveRegexIterator::hasChildren[現在のエントリのイテレータが取得可能かどうかを返す]
RecursiveTreeIterator::__construct[RecursiveTreeIterator を作成する]
RecursiveTreeIterator::beginChildren[子を開始する]
RecursiveTreeIterator::beginIteration[反復処理を開始する]
RecursiveTreeIterator::callGetChildren[子を取得する]
RecursiveTreeIterator::callHasChildren[子を持っているかどうかを調べる]
RecursiveTreeIterator::current[現在の要素を取得する]
RecursiveTreeIterator::endChildren[子を終了する]
RecursiveTreeIterator::endIteration[反復処理を終了する]
RecursiveTreeIterator::getEntry[現在のエントリを取得する]
RecursiveTreeIterator::getPostfix[接尾辞を取得する]
RecursiveTreeIterator::getPrefix[接頭辞を取得する]
RecursiveTreeIterator::key[現在の要素のキーを取得する]
RecursiveTreeIterator::nextElement[次の要素]
RecursiveTreeIterator::next[次の要素に移動する]
RecursiveTreeIterator::rewind[イテレータを巻き戻す]
RecursiveTreeIterator::setPrefixPart[接頭辞の部分を設定する]
RecursiveTreeIterator::valid[有効性を調べる]
Reflection::export[エクスポートする]
Reflection::getModifierNames[修飾子の名前を取得する]
ReflectionClass::__construct[ReflectionClass を作成する]
ReflectionClass::__toString[ReflectionClass オブジェクトの文字列表現を返す]
ReflectionClass::export[クラスをエクスポートする]
ReflectionClass::getConstant[定義されている定数を取得する]
ReflectionClass::getConstants[定数を取得する]
ReflectionClass::getConstructor[クラスのコンストラクタを取得する]
ReflectionClass::getDefaultProperties[デフォルトプロパティを取得する]
ReflectionClass::getDocComment[ドキュメントコメントを取得する]
ReflectionClass::getEndLine[終了行を取得する]
ReflectionClass::getExtensionName[クラスを定義する拡張モジュールの名前を取得する]
ReflectionClass::getExtension[クラスを定義する拡張モジュールを表す ReflectionExtension オブジェクトを取得する]
ReflectionClass::getFileName[クラスが定義されているファイルのファイル名を取得する]
ReflectionClass::getInterfaceNames[インターフェイスの名前を取得する]
ReflectionClass::getInterfaces[インターフェイスを取得する]
ReflectionClass::getMethod[クラスメソッドの ReflectionMethod を取得する]
ReflectionClass::getMethods[メソッドの配列を取得する]
ReflectionClass::getModifiers[修飾子を取得する]
ReflectionClass::getName[クラスの名前を取得する]
ReflectionClass::getNamespaceName[名前空間の名前を取得する]
ReflectionClass::getParentClass[親クラスを取得する]
ReflectionClass::getProperties[プロパティを取得する]
ReflectionClass::getProperty[クラスのプロパティを表す ReflectionProperty を取得する]
ReflectionClass::getShortName[短い名前を取得する]
ReflectionClass::getStartLine[開始行を取得する]
ReflectionClass::getStaticProperties[静的なプロパティを取得する]
ReflectionClass::getStaticPropertyValue[静的なプロパティの値を取得する]
ReflectionClass::getTraitAliases[トレイトのエイリアスの配列を返す]
ReflectionClass::getTraitNames[このクラスが使うトレイトの名前の配列を返す]
ReflectionClass::getTraits[このクラスが使うトレイトの配列を返す]
ReflectionClass::hasConstant[定数が定義されているかどうかを調べる]
ReflectionClass::hasMethod[メソッドが定義されているかどうかを調べる]
ReflectionClass::hasProperty[プロパティが定義されているかどうかを調べる]
ReflectionClass::implementsInterface[インターフェイスの実装を調べる]
ReflectionClass::inNamespace[名前空間内にあるかどうかを調べる]
ReflectionClass::isAbstract[抽象クラスであるかどうかを調べる]
ReflectionClass::isCloneable[このクラスがクローン可能かどうかを返す]
ReflectionClass::isFinal[final クラスであるかどうかを調べる]
ReflectionClass::isInstance[クラスのインスタンスであるかどうかを調べる]
ReflectionClass::isInstantiable[クラスのインスタンス化が可能であるかどうかを調べる]
ReflectionClass::isInterface[このクラスがインターフェイスであるかどうかを調べる]
ReflectionClass::isInternal[拡張モジュールあるいはコアで定義された内部クラスであるかどうかを調べる]
ReflectionClass::isIterateable[反復処理が可能であるかどうかを調べる]
ReflectionClass::isSubclassOf[サブクラスであるかどうかを調べる]
ReflectionClass::isTrait[トレイトであるかどうかを返す]
ReflectionClass::isUserDefined[ユーザー定義であるかどうかを調べる]
ReflectionClass::newInstanceArgs[指定した引数でクラスの新しいインスタンスを作成する]
ReflectionClass::newInstanceWithoutConstructor[コンストラクタを起動せずに新しいクラスのインスタンスを作成する]
ReflectionClass::newInstance[指定した引数でクラスの新しいインスタンスを作成する]
ReflectionClass::setStaticPropertyValue[静的なプロパティの値を設定する]
ReflectionExtension::__clone[クローンする]
ReflectionExtension::__construct[ReflectionExtension を作成する]
ReflectionExtension::__toString[文字列に変換する]
ReflectionExtension::export[エクスポートする]
ReflectionExtension::getClassNames[クラス名を取得する]
ReflectionExtension::getClasses[クラスを取得する]
ReflectionExtension::getConstants[定数を取得する]
ReflectionExtension::getDependencies[依存性を取得する]
ReflectionExtension::getFunctions[拡張モジュールの関数を取得する]
ReflectionExtension::getINIEntries[拡張モジュールの ini エントリを取得する]
ReflectionExtension::getName[拡張モジュール名を取得する]
ReflectionExtension::getVersion[拡張モジュールのバージョンを取得する]
ReflectionExtension::info[拡張モジュールの情報を表示する]
ReflectionExtension::isPersistent[この拡張モジュールが永続性のあるものかどうかを返す]
ReflectionExtension::isTemporary[この拡張モジュールが一時的なものかどうかを返す]
ReflectionFunction::__construct[ReflectionFunction オブジェクトを作成する]
ReflectionFunction::__toString[文字列に変換する]
ReflectionFunction::export[関数をエクスポートする]
ReflectionFunction::getClosure[この関数に動的に作成されたクロージャを返す]
ReflectionFunction::invokeArgs[引数を指定して関数を起動する]
ReflectionFunction::invoke[関数を起動する]
ReflectionFunction::isDisabled[関数が無効になっているかどうかを調べる]
ReflectionFunctionAbstract::__clone[関数のクローンを作成する]
ReflectionFunctionAbstract::__toString[文字列に変換する]
ReflectionFunctionAbstract::getClosureThis[クロージャにバインドした this ポインタを返す]
ReflectionFunctionAbstract::getDocComment[ドキュメントコメントを取得する]
ReflectionFunctionAbstract::getEndLine[終了行番号を取得する]
ReflectionFunctionAbstract::getExtensionName[拡張モジュールの名前を取得する]
ReflectionFunctionAbstract::getExtension[拡張モジュールの情報を取得する]
ReflectionFunctionAbstract::getFileName[ファイル名を取得する]
ReflectionFunctionAbstract::getName[関数名を取得する]
ReflectionFunctionAbstract::getNamespaceName[名前空間名を取得する]
ReflectionFunctionAbstract::getNumberOfParameters[パラメータ数を取得する]
ReflectionFunctionAbstract::getNumberOfRequiredParameters[必須パラメータの数を取得する]
ReflectionFunctionAbstract::getParameters[パラメータを取得する]
ReflectionFunctionAbstract::getShortName[関数の短い名前を取得する]
ReflectionFunctionAbstract::getStartLine[開始行番号を取得する]
ReflectionFunctionAbstract::getStaticVariables[静的変数を取得する]
ReflectionFunctionAbstract::inNamespace[関数が名前空間内にあるかどうかを調べる]
ReflectionFunctionAbstract::isClosure[クロージャであるかどうかを調べる]
ReflectionFunctionAbstract::isDeprecated[非推奨であるかどうかを調べる]
ReflectionFunctionAbstract::isInternal[内部関数かどうかを調べる]
ReflectionFunctionAbstract::isUserDefined[ユーザー定義関数であるかどうかを調べる]
ReflectionFunctionAbstract::returnsReference[参照返しかどうかを調べる]
ReflectionMethod::__construct[ReflectionMethod を作成する]
ReflectionMethod::__toString[ReflectionMethod オブジェクトの文字列表現を返す]
ReflectionMethod::export[メソッドをエクスポートする]
ReflectionMethod::getClosure[このメソッドに動的に作成されたクロージャを返す]
ReflectionMethod::getDeclaringClass[メソッドが宣言されているクラスを取得する]
ReflectionMethod::getModifiers[メソッドの修飾子を取得する]
ReflectionMethod::getPrototype[メソッドのプロトタイプを (存在すれば) 取得する]
ReflectionMethod::invokeArgs[実行する]
ReflectionMethod::invoke[実行する]
ReflectionMethod::isAbstract[抽象メソッドであるかどうかを調べる]
ReflectionMethod::isConstructor[コンストラクタであるかどうかを調べる]
ReflectionMethod::isDestructor[デストラクタであるかどうかを調べる]
ReflectionMethod::isFinal[final メソッドであるかどうかを調べる]
ReflectionMethod::isPrivate[private メソッドであるかどうかを調べる]
ReflectionMethod::isProtected[protected メソッドであるかどうかを調べる]
ReflectionMethod::isPublic[public メソッドであるかどうかを調べる]
ReflectionMethod::isStatic[静的メソッドであるかどうかを調べる]
ReflectionMethod::setAccessible[メソッドのアクセス範囲を設定する]
ReflectionObject::__construct[ReflectionObject を作成する]
ReflectionObject::export[エクスポートする]
ReflectionParameter::__clone[クローンする]
ReflectionParameter::__construct[コンストラクタ]
ReflectionParameter::__toString[文字列に変換する]
ReflectionParameter::allowsNull[null を許可するかどうかを調べる]
ReflectionParameter::canBePassedByValue[このパラメータが値渡し可能かどうかを返す]
ReflectionParameter::export[エクスポートする]
ReflectionParameter::getClass[クラスを取得する]
ReflectionParameter::getDeclaringClass[宣言しているクラスを取得する]
ReflectionParameter::getDeclaringFunction[宣言している関数を取得する]
ReflectionParameter::getDefaultValue[パラメータのデフォルト値を取得する]
ReflectionParameter::getName[パラメータ名を取得する]
ReflectionParameter::getPosition[パラメータの位置を取得する]
ReflectionParameter::isArray[配列を受け取るパラメータであるかどうかを調べる]
ReflectionParameter::isDefaultValueAvailable[デフォルト値が存在するかどうかを調べる]
ReflectionParameter::isOptional[省略可能であるかどうかを調べる]
ReflectionParameter::isPassedByReference[参照渡しかどうかを調べる]
ReflectionProperty::__clone[クローンする]
ReflectionProperty::__construct[ReflectionProperty オブジェクトを作成する]
ReflectionProperty::__toString[文字列に変換する]
ReflectionProperty::export[エクスポートする]
ReflectionProperty::getDeclaringClass[宣言しているクラスを取得する]
ReflectionProperty::getDocComment[ドキュメントコメントを取得する]
ReflectionProperty::getModifiers[修飾子を取得する]
ReflectionProperty::getName[プロパティ名を取得する]
ReflectionProperty::getValue[値を取得する]
ReflectionProperty::isDefault[デフォルト値であるかどうかを調べる]
ReflectionProperty::isPrivate[private プロパティであるかどうかを調べる]
ReflectionProperty::isProtected[protected プロパティであるかどうかを調べる]
ReflectionProperty::isPublic[public プロパティであるかどうかを調べる]
ReflectionProperty::isStatic[静的プロパティであるかどうかを調べる]
ReflectionProperty::setAccessible[プロパティのアクセス範囲を設定する]
ReflectionProperty::setValue[プロパティの値を設定する]
ReflectionZendExtension::__clone[Clone のハンドラ]
ReflectionZendExtension::__construct[コンストラクタ]
ReflectionZendExtension::__toString[文字列変換のハンドラ]
ReflectionZendExtension::export[エクスポート]
ReflectionZendExtension::getAuthor[作者を取得する]
ReflectionZendExtension::getCopyright[著作権情報を取得する]
ReflectionZendExtension::getName[名前を取得する]
ReflectionZendExtension::getURL[URL を取得する]
ReflectionZendExtension::getVersion[バージョンを取得する]
Reflector::__toString[文字列に変換する]
Reflector::export[エクスポートする]
RegexIterator::accept[受け入れ状況を取得する]
RegexIterator::getFlags[フラグを取得する]
RegexIterator::getMode[操作モードを返す]
RegexIterator::getPregFlags[正規表現フラグを返す]
RegexIterator::getRegex[現在の正規表現を返す]
RegexIterator::setFlags[フラグを設定する]
RegexIterator::setMode[操作モードを設定する]
RegexIterator::setPregFlags[正規表現フラグを設定する]
ResourceBundle::count[バンドル内の要素数を取得する]
ResourceBundle::create[リソースバンドルを作成する]
ResourceBundle::getErrorCode[バンドルの直近のエラーコードを取得する]
ResourceBundle::getErrorMessage[バンドルの直近のエラーメッセージを取得する]
ResourceBundle::getLocales[サポートするロケールを取得する]
ResourceBundle::get[バンドルからデータを取得する]
Runkit_Sandbox_Parent[Runkit 反サンドボックス（Anti-Sandbox）クラス]
SAMConnection::commit[現在作業中の内容をコミット (正常に完了) する]
SAMConnection::connect[メッセージングサーバーとの接続を確立する]
SAMConnection::disconnect[メッセージングサーバーからの接続を解除する]
SAMConnection::isConnected[メッセージングサーバーとの接続が確立されているかどうかを調べる]
SAMConnection::peekAll[ひとつあるいは複数のメッセージをキューから読み込み、それをキューに残したままにする]
SAMConnection::peek[メッセージをキューから読み込み、それをキューに残したままにする]
SAMConnection::receive[メッセージをキューあるいは購読から取得する]
SAMConnection::remove[メッセージをキューから削除する]
SAMConnection::rollback[現在作業中の内容をキャンセル (ロールバック) する]
SAMConnection::send[メッセージをキューに送信、あるいは項目をトピックに投稿する]
SAMConnection::setDebug[追加のデバッグ出力を有効あるいは無効にする]
SAMConnection::subscribe[指定したトピックの購読を作成する]
SAMConnection::unsubscribe[指定したトピックの購読を解除する]
SCA::createDataObject[SDO を作成する]
SCA::getService[サービスのプロキシを取得する]
SCA_LocalProxy::createDataObject[SDO を作成する]
SCA_SoapProxy::createDataObject[SDO を作成する]
SDO_DAS_ChangeSummary::beginLogging[変更内容の記録を開始する]
SDO_DAS_ChangeSummary::endLogging[変更内容の記録を終了する]
SDO_DAS_ChangeSummary::getChangeType[SDO_DataObject への変更の型を取得する]
SDO_DAS_ChangeSummary::getChangedDataObjects[変更内容から、変更されたデータオブジェクトを取得する]
SDO_DAS_ChangeSummary::getOldContainer[削除された SDO_DataObject の削除前のコンテナを取得する]
SDO_DAS_ChangeSummary::getOldValues[変更された SDO_DataObject の変更前の値を取得する]
SDO_DAS_ChangeSummary::isLogging[変更内容が記録されるようになっているかどうかを調べる]
SDO_DAS_DataFactory::addPropertyToType[型にプロパティを追加する]
SDO_DAS_DataFactory::addType[モデルに新しい型を追加する]
SDO_DAS_DataFactory::getDataFactory[データファクトリのインスタンスを取得する]
SDO_DAS_DataObject::getChangeSummary[データオブジェクトの変更内容を取得する]
SDO_DAS_Relational::__construct[リレーショナルデータアクセスサービスのインスタンスを作成する]
SDO_DAS_Relational::applyChanges[データグラフに対する変更を、データベースに書き戻す]
SDO_DAS_Relational::createRootDataObject[別の空のデータグラフ内の、特別なルートオブジェクトを返す。データグラフをスクラッチから作成する際に使用する]
SDO_DAS_Relational::executePreparedQuery[プリペアドステートメントとして渡された SQLクエリにプレースホルダ置換用の値を指定して実行し、 結果を正規化されたデータグラフ形式で返す]
SDO_DAS_Relational::executeQuery[SQL クエリをリレーショナルデータベースに対して実行し、結果を正規化されたデータグラフ形式で返す]
SDO_DAS_Setting::getListIndex[複数の値を持つプロパティのインデックスを取得する]
SDO_DAS_Setting::getPropertyIndex[変更されたプロパティのプロパティインデックスを取得する]
SDO_DAS_Setting::getPropertyName[変更されたプロパティのプロパティ名を取得する]
SDO_DAS_Setting::getValue[変更されたプロパティの変更前の値を取得する]
SDO_DAS_Setting::isSet[変更前にプロパティが設定されていたかどうかを調べる]
SDO_DAS_XML::addTypes[2 番目以降のスキーマファイルを SDO_DAS_XMLオブジェクトに読み込む]
SDO_DAS_XML::createDataObject[名前空間 URI および型名を指定して SDO_DataObjectを作成する]
SDO_DAS_XML::createDocument[ファイルや文字列から読み込まずに、 XMLドキュメントオブジェクトをスクラッチから作成する]
SDO_DAS_XML::create[スキーマファイルを指定して SDO_DAS_XML オブジェクトを作成する]
SDO_DAS_XML::loadFile[xml インスタンスドキュメントへのパスを指定し、SDO_DAS_XML_Document オブジェクトを返す]
SDO_DAS_XML::loadString[xml インスタンス文字列を指定し、 SDO_DAS_XML_Documentオブジェクトを返す]
SDO_DAS_XML::saveFile[SDO_DAS_XML_Document オブジェクトをファイルに保存する]
SDO_DAS_XML::saveString[SDO_DAS_XML_Document オブジェクトを文字列に保存する]
SDO_DAS_XML_Document::getRootDataObject[ルート SDO_DataObject を返す]
SDO_DAS_XML_Document::getRootElementName[ルート要素の名前を返す]
SDO_DAS_XML_Document::getRootElementURI[ルート要素の URI 文字列を返す]
SDO_DAS_XML_Document::setEncoding[エンコーディングを文字列で設定する]
SDO_DAS_XML_Document::setXMLDeclaration[xml 宣言を設定する]
SDO_DAS_XML_Document::setXMLVersion[xml バージョンを文字列で設定する]
SDO_DataFactory::create[SDO_DataObject を作成する]
SDO_DataObject::clear[SDO_DataObject のプロパティを消去する]
SDO_DataObject::createDataObject[新しい子 SDO_DataObject を作成する]
SDO_DataObject::getContainer[データオブジェクトのコンテナを取得する]
SDO_DataObject::getSequence[データオブジェクトのシーケンスを取得する]
SDO_DataObject::getTypeName[データオブジェクトの型の名前を取得する]
SDO_DataObject::getTypeNamespaceURI[このデータオブジェクトの型の名前空間 URI を取得する]
SDO_Exception::getCause[例外の原因を取得する]
SDO_List::insert[リストに挿入する]
SDO_Model_Property::getContainingType[このプロパティを含む SDO_Model_Type を取得する]
SDO_Model_Property::getDefault[プロパティのデフォルト値を取得する]
SDO_Model_Property::getName[SDO_Model_Property の名前を取得する]
SDO_Model_Property::getType[プロパティの SDO_Model_Type を取得する]
SDO_Model_Property::isContainment[プロパティが包含関係を定義しているかどうかを調べる]
SDO_Model_Property::isMany[プロパティが複数の値を持つかどうかを調べる]
SDO_Model_ReflectionDataObject::__construct[SDO_Model_ReflectionDataObject を作成する]
SDO_Model_ReflectionDataObject::export[SDO_DataObject を表す文字列を取得する]
SDO_Model_ReflectionDataObject::getContainmentProperty[データオブジェクトとの包含関係を定義しているプロパティを取得する]
SDO_Model_ReflectionDataObject::getInstanceProperties[SDO_DataObject のインスタンスプロパティを取得する]
SDO_Model_ReflectionDataObject::getType[SDO_DataObject の SDO_Model_Type を取得する]
SDO_Model_Type::getBaseType[この型の基底型を取得する]
SDO_Model_Type::getName[型の名前を取得する]
SDO_Model_Type::getNamespaceURI[型の名前空間 URI を取得する]
SDO_Model_Type::getProperties[型で定義されている SDO_Model_Propertyオブジェクトを取得する]
SDO_Model_Type::getProperty[型の SDO_Model_Property を取得する]
SDO_Model_Type::isAbstractType[この SDO_Model_Type が抽象データ型であるかどうかを調べる]
SDO_Model_Type::isDataType[この SDO_Model_Typeがプリミティブなデータ型であるかどうかを調べる]
SDO_Model_Type::isInstance[SDO_DataObject が、この SDO_Model_Typeのインスタンスであるかどうかを調べる]
SDO_Model_Type::isOpenType[この型がオープン型であるかどうかを調べる]
SDO_Model_Type::isSequencedType[この型がシーケンス型であるかどうかを調べる]
SDO_Sequence::getProperty[指定したシーケンスインデックスに対応するプロパティを返す]
SDO_Sequence::insert[シーケンスに挿入する]
SDO_Sequence::move[シーケンス上の指定した位置に項目を移動する]
SNMP::close[SNMPセッションを閉じる]
SNMP::getErrno[直近のエラーコードを取得する]
SNMP::getError[直近のエラーメッセージを取得する]
SNMP::get[SNMPオブジェクトを取得する]
SNMP::getnext[指定したオブジェクト ID に続く SNMPオブジェクトを取得する]
SNMP::setSecurity[セキュリティ関連の SNMPv3セッションパラメータを設定する]
SNMP::set[SNMPオブジェクトの値を設定する]
SNMP::walk[SNMPオブジェクトのサブツリーを取得する]
SQLite3::__construct[SQLite3 オブジェクトを作成し、SQLite 3データベースをオープンする]
SQLite3::busyTimeout[接続がビジー状態のときのハンドラを設定する]
SQLite3::changes[直近の SQL 文で変更 (あるいは挿入、削除) された行の数を返す]
SQLite3::close[データベースとの接続を閉じる]
SQLite3::createAggregate[SQL の集約関数として使用する PHP 関数を登録する]
SQLite3::createFunction[SQL のスカラー関数として使用する PHP 関数を登録する]
SQLite3::escapeString[適切にエスケープされた文字列を返す]
SQLite3::exec[指定したデータベースに、結果を返さないクエリを実行する]
SQLite3::lastErrorCode[直近で失敗した SQLite リクエストの結果コードを数値で返す]
SQLite3::lastErrorMsg[直近で失敗した SQLite リクエストについての英文テキストの説明を返す]
SQLite3::lastInsertRowID[直近の INSERT 文でデータベースに追加された行の ID を返す]
SQLite3::loadExtension[SQLite 拡張ライブラリを読み込む]
SQLite3::open[SQLite データベースをオープンする]
SQLite3::prepare[実行する SQL 文を準備する]
SQLite3::querySingle[クエリを実行し、単一の結果を返す]
SQLite3::query[SQL クエリを実行する]
SQLite3::version[SQLite3 ライブラリのバージョンを、文字列定数と数値で返す]
SQLite3Result::columnName[n 番目のカラムの名前を返す]
SQLite3Result::columnType[n 番目のカラムの型を返す]
SQLite3Result::fetchArray[結果の行を、連想配列あるいは数値添字配列あるいはその両方で取得する]
SQLite3Result::finalize[結果セットを閉じる]
SQLite3Result::numColumns[結果セットのカラム数を返す]
SQLite3Result::reset[結果セットを最初の行に戻す]
SQLite3Stmt::bindParam[パラメータを変数にバインドする]
SQLite3Stmt::bindValue[パラメータの値を変数にバインドする]
SQLite3Stmt::clear[現在バインドされているすべてのパラメータをクリアする]
SQLite3Stmt::close[プリペアドステートメントを閉じる]
SQLite3Stmt::execute[プリペアドステートメントを実行し、結果セットオブジェクトを返す]
SQLite3Stmt::paramCount[プリペアドステートメント内のパラメータの数を返す]
SQLite3Stmt::reset[プリペアドステートメントをリセットする]
SVM::__construct[SVM オブジェクトを新規構築]
SVM::crossvalidate[Test training params on subsets of thetraining data.]
SVM::getOptions[Return the current trainingparameters]
SVM::setOptions[Set training parameters]
SVM::train[Create a SVMModel based on trainingdata]
SVMModel::__construct[SVMModel を新規構築]
SVMModel::checkProbabilityModel[Returns true if the model has probabilityinformation]
SVMModel::getLabels[Get the labels the model was trainedon]
SVMModel::getNrClass[Returns the number of classes the model wastrained with]
SVMModel::getSvmType[Get the SVM type the model was trainedwith]
SVMModel::getSvrProbability[Get the sigma value for regressiontypes]
SVMModel::load[保管された SVM モデルを読み込み]
SVMModel::predict[Predict a value for previously unseendata]
SVMModel::predict_probability[Return class probabilities for previousunseen data]
SVMModel::save[モデルをファイルに保管]
SWFAction::__construct[新しい SWFAction を作成する]
SWFBitmap::__construct[ビットマップオブジェクトを読み込む]
SWFBitmap::getHeight[ビットマップの高さを返す]
SWFBitmap::getWidth[ビットマップの幅を返す]
SWFButton::__construct[新しいボタンを作成する]
SWFButton::addASound[ボタンに音を関連付ける]
SWFButton::addAction[アクションを追加する]
SWFButton::addShape[ボタンに図形を追加する]
SWFButton::setAction[アクションを設定する]
SWFButton::setDown[addShape(shape, SWFBUTTON_DOWN)のエイリアス]
SWFButton::setHit[addShape(shape, SWFBUTTON_HIT) のエイリアス]
SWFButton::setMenu[メニューボタンとしての挙動を有効にする]
SWFButton::setOver[addShape(shape, SWFBUTTON_OVER)のエイリアス]
SWFButton::setUp[addShape(shape, SWFBUTTON_UP) のエイリアス]
SWFDisplayItem::addAction[この SWFAction を、指定した SWFSpriteインスタンスに追加する]
SWFDisplayItem::addColor[指定した色を、このアイテムの色変換に追加する]
SWFDisplayItem::endMask[MASK レイヤを定義するもうひとつの方法]
SWFDisplayItem::moveTo[グローバル座標系でオブジェクトを移動する]
SWFDisplayItem::move[オブジェクトを相対座標系で移動する]
SWFDisplayItem::multColor[アイテムの色変換を乗算する]
SWFDisplayItem::remove[オブジェクトをムービーから削除する]
SWFDisplayItem::rotateTo[グローバル座標で回転させる]
SWFDisplayItem::rotate[相対座標で回転させる]
SWFDisplayItem::scaleTo[グローバル座標系でオブジェクトを拡大縮小する]
SWFDisplayItem::scale[相対座標系でオブジェクトを拡大縮小する]
SWFDisplayItem::setDepth[z オーダーを設定する]
SWFDisplayItem::setMaskLevel[指定したレベルに MASK レイヤを設定する]
SWFDisplayItem::setMatrix[アイテムの変換行列を設定する]
SWFDisplayItem::setName[オブジェクトの名前を設定する]
SWFDisplayItem::setRatio[オブジェクトの比を設定する]
SWFDisplayItem::skewXTo[X-skew を設定する]
SWFDisplayItem::skewX[X-skew を設定する]
SWFDisplayItem::skewYTo[Y-skew を設定する]
SWFDisplayItem::skewY[Y-skew を設定する]
SWFFill::moveTo[塗りつぶしの原点を移動する]
SWFFill::rotateTo[塗りつぶしの回転を設定する]
SWFFill::scaleTo[塗りつぶしの倍率を設定する]
SWFFill::skewXTo[塗りつぶしの x-skew を設定する]
SWFFill::skewYTo[塗りつぶしの y-skew を設定する]
SWFFont::__construct[フォント定義を読み込む]
SWFFont::getAscent[フォントの ascent (ベースライン上部の高さ) あるいは取得できない場合は 0を返す]
SWFFont::getDescent[フォントの descent (ベースライン下部の深さ) あるいは取得できない場合は 0を返す]
SWFFont::getLeading[フォントの leading (行間) あるいは取得できない場合は 0を返す]
SWFFont::getShape[指定した文字のグリフを文字列で返す]
SWFFont::getUTF8Width[このフォントにおける指定した文字列の幅を計算する]
SWFFont::getWidth[文字列の幅を返す]
SWFFontChar::addChars[フォントをエクスポートするために、フォントに文字を追加する]
SWFFontChar::addUTF8Chars[フォントをエクスポートするために、フォントに文字を追加する]
SWFGradient::__construct[傾きオブジェクトを作成する]
SWFGradient::addEntry[傾きリストにエントリを追加する]
SWFMorph::__construct[新規に SWFMorph オブジェクトを作成する]
SWFMorph::getShape1[最初の図形へのハンドルを取得する]
SWFMorph::getShape2[最後の図形へのハンドルを取得する]
SWFMovie::__construct[SWF バージョン 4 のムービーを表すムービーオブジェクトを作成する]
SWFMovie::add[任意の型のデータをムービーに追加する]
SWFMovie::labelFrame[フレームにラベルをつける]
SWFMovie::nextFrame[動画の次のフレームに移動する]
SWFMovie::output[作成したムービーを出力する]
SWFMovie::remove[表示リストからオブジェクトのインスタンスを削除する]
SWFMovie::save[SWF ムービーをファイルに保存する]
SWFMovie::setDimension[ムービーの幅と高さを設定する]
SWFMovie::setFrames[動画の総フレーム数を設定する]
SWFMovie::setRate[動画のフレームレートを設定する]
SWFMovie::setbackground[背景色を設定する]
SWFMovie::streamMP3[MP3 ファイルをストリーム再生する]
SWFPrebuiltClip::__construct[SWFPrebuiltClip オブジェクトを返す]
SWFShape::__construct[新しい図形オブジェクトを作成する]
SWFShape::addFill[塗りつぶし色を図形に追加する]
SWFShape::drawArc[現在の位置を中心とした半径 r の円弧を、12 時の方向から時計回りに 数えた角度startAngle から endAngle まで描く]
SWFShape::drawCircle[現在の位置を中心とした半径 r の円を、反時計回りに描く]
SWFShape::drawCubicTo[現在の位置および指定した三つの制御点を使用して 三次ベジエ曲線を描く]
SWFShape::drawCubic[現在の位置および指定した三つの制御点を使用して 三次ベジエ曲線を描く]
SWFShape::drawCurveTo[曲線を描く]
SWFShape::drawCurve[曲線を描く (相対座標)]
SWFShape::drawGlyph[指定したフォントのグリフ定義を使用して、指定した文字列の最初の文字を図形の中に描く]
SWFShape::drawLineTo[線を描く]
SWFShape::drawLine[線を描く (相対座標)]
SWFShape::movePenTo[図形のペンを移動する]
SWFShape::movePen[図形のペンを移動する(相対座標)]
SWFShape::setLeftFill[左ラスタ色を設定する]
SWFShape::setLine[図形の線種を設定する]
SWFShape::setRightFill[右ラスタ色を設定する]
SWFSound::__construct[指定したファイルから、新しい SWFSound オブジェクトを返す]
SWFSprite::__construct[ムービークリップ (スプライト) を作成する]
SWFSprite::add[オブジェクトをスプライトに追加する]
SWFSprite::labelFrame[フレームにラベルをつける]
SWFSprite::nextFrame[動画の次のフレームに移動する]
SWFSprite::remove[オブジェクトをスプライトから削除する]
SWFSprite::setFrames[動画の総フレーム数を設定する]
SWFText::__construct[新しい SWFText オブジェクトを作成する]
SWFText::addString[文字列を描画する]
SWFText::addUTF8String[現在のペンの位置に、現在のフォント・高さ・行間および色設定を使用して 指定したテキストでSWFText オブジェクトを作成する]
SWFText::getAscent[現在のサイズにおけるフォントの ascent (ベースライン上部の高さ)あるいは取得できない場合は 0 を返す]
SWFText::getDescent[現在のサイズにおけるフォントの descent (ベースライン下部の深さ)あるいは取得できない場合は 0 を返す]
SWFText::getLeading[現在のサイズにおけるフォントの leading (行間) あるいは取得できない場合は 0を返す]
SWFText::getUTF8Width[現在のフォントおよびサイズにおける指定した文字列の幅を計算する]
SWFText::getWidth[文字列の幅を計算する]
SWFText::moveTo[ペンを移動する]
SWFText::setColor[現在のテキスト色を設定する]
SWFText::setFont[現在のフォントを設定する]
SWFText::setHeight[現在のフォントの高さを設定する]
SWFText::setSpacing[現在のフォントの間隔を設定する]
SWFTextField::__construct[テキストフィールドのオブジェクトを作成する]
SWFTextField::addChars[テキストフィールド内で使用可能なフォントに文字を追加する]
SWFTextField::addString[指定した文字列をテキストフィールドに結合する]
SWFTextField::align[テキストフィールドの配置を設定する]
SWFTextField::setBounds[テキストフィールドの幅と高さを設定する]
SWFTextField::setColor[テキストフィールドの色を設定する]
SWFTextField::setFont[テキストフィールドのフォントを設定する]
SWFTextField::setHeight[このテキストフィールドのフォントの高さを設定する]
SWFTextField::setIndentation[最初の行の字下げを設定する]
SWFTextField::setLeftMargin[テキストフィールドの左マージンの幅を設定する]
SWFTextField::setLineSpacing[テキストフィールドの行間を設定する]
SWFTextField::setMargins[テキストフィールドのマージン幅を設定する]
SWFTextField::setName[変数名を設定する]
SWFTextField::setPadding[テキストフィールドのパディングを設定する]
SWFTextField::setRightMargin[テキストフィールドの右マージンの幅を設定する]
SWFVideoStream::__construct[SWFVideoStream オブジェクトを返す]
SWFVideoStream::getNumFrames[ビデオ内のフレーム数を返す]
SWFVideoStream::setDimension[ビデオの大きさを設定する]
SeekableIterator::seek[位置を移動する]
Serializable::serialize[オブジェクトの文字列表現]
Serializable::unserialize[オブジェクトを作成する]
SessionHandler::close[セッションを閉じる]
SessionHandler::destroy[セッションを破棄する]
SessionHandler::gc[古いセッションを削除する]
SessionHandler::open[セッションを開始する]
SessionHandler::read[セッションのデータを読み込む]
SessionHandler::write[セッションのデータを書き込む]
SessionHandlerInterface::close[セッションを閉じる]
SessionHandlerInterface::destroy[セッションを破棄する]
SessionHandlerInterface::gc[古いセッションを削除する]
SessionHandlerInterface::open[セッションを開始する]
SessionHandlerInterface::read[セッションのデータを読み込む]
SessionHandlerInterface::write[セッションのデータを書き込む]
SimpleXMLElement::addAttribute[SimpleXML 要素に属性を追加する]
SimpleXMLElement::addChild[XML ノードに子要素を追加する]
SimpleXMLElement::asXML[SimpleXML 要素に基づき整形式の XML 文字列を返す]
SimpleXMLElement::attributes[要素の属性を定義する]
SimpleXMLElement::children[指定したノードの子ノードを見付ける]
SimpleXMLElement::count[子要素を数える]
SimpleXMLElement::getDocNamespaces[ドキュメントで宣言されている名前空間を返す]
SimpleXMLElement::getName[XML 要素の名前を取得する]
SimpleXMLElement::getNamespaces[ドキュメントで使用している名前空間を返す]
SimpleXMLElement::registerXPathNamespace[次の XPath クエリ用の prefix/ns コンテキストを作成する]
SimpleXMLElement::xpath[XML データに Xpath クエリを実行する]
SimpleXMLIterator::current[現在の SimpleXML エントリを返す]
SimpleXMLIterator::getChildren[現在の要素の子要素を返す]
SimpleXMLIterator::hasChildren[現在の要素が子要素を持つかどうかを調べる]
SimpleXMLIterator::key[現在のキーを返す]
SimpleXMLIterator::next[次の要素に移動する]
SimpleXMLIterator::rewind[最初の要素に巻き戻す]
SimpleXMLIterator::valid[現在の要素が有効かどうかを調べる]
SoapClient::SoapClient[SoapClient コンストラクタ]
SoapClient::__call[SOAP 関数をコールする (非推奨)]
SoapClient::__construct[SoapClient のコンストラクタ]
SoapClient::__doRequest[SOAP リクエストを実行する]
SoapClient::__getFunctions[SOAP 関数の一覧を返す]
SoapClient::__getLastRequestHeaders[直近の SOAP リクエストヘッダを返す]
SoapClient::__getLastRequest[直近の SOAP リクエストを返す]
SoapClient::__getLastResponseHeaders[直近の SOAP レスポンスヘッダを返す]
SoapClient::__getLastResponse[直近の SOAP レスポンスを返す]
SoapClient::__getTypes[SOAP 型の一覧を返す]
SoapClient::__setCookie[SOAP リクエストと共に送信されるクッキーを設定する]
SoapClient::__setLocation[使用するウェブサービスの場所を設定する]
SoapClient::__setSoapHeaders[以降のコール用の SOAP ヘッダを設定する]
SoapClient::__soapCall[SOAP 関数をコールする]
SoapFault::SoapFault[SoapFault コンストラクタ]
SoapFault::__construct[SoapFault コンストラクタ]
SoapFault::__toString[SoapFault の文字列表現を取得する]
SoapHeader::SoapHeader[SoapHeader コンストラクタ]
SoapHeader::__construct[SoapHeader コンストラクタ]
SoapParam::SoapParam[SoapParam コンストラクタ]
SoapParam::__construct[SoapParam コンストラクタ]
SoapServer::SoapServer[SoapServer コンストラクタ]
SoapServer::__construct[SoapServer コンストラクタ]
SoapServer::addFunction[SOAP リクエストによって処理される単一もしくはいくつかの関数を追加する]
SoapServer::addSoapHeader[SOAP ヘッダをレスポンスに追加する]
SoapServer::fault[エラーを示す SoapServer フォールト を発行する]
SoapServer::getFunctions[定義されている関数の一覧を返す]
SoapServer::handle[SOAP リクエストを処理する]
SoapServer::setClass[SOAP リクエストを処理するクラスを設定する]
SoapServer::setObject[SOAP リクエストの処理に使用するオブジェクトを設定する]
SoapServer::setPersistence[SoapServer の持続モードを設定する]
SoapVar::SoapVar[SoapVar コンストラクタ]
SoapVar::__construct[SoapVar コンストラクタ]
SolrClient::__construct[Constructor for the SolrClient object]
SolrClient::__destruct[SolrClient に対するデストラクタ]
SolrClient::addDocument[Adds a document to the index]
SolrClient::addDocuments[Adds a collection of SolrInputDocumentinstances to the index]
SolrClient::commit[Finalizes all add/deletes made to theindex]
SolrClient::deleteById[Delete by Id]
SolrClient::deleteByIds[Deletes by Ids]
SolrClient::deleteByQueries[Removes all documents matching any of thequeries]
SolrClient::deleteByQuery[Deletes all documents matching the givenquery]
SolrClient::getDebug[Returns the debug data for the lastconnection attempt]
SolrClient::getOptions[Returns the client options setinternally]
SolrClient::optimize[Defragments the index]
SolrClient::ping[Checks if Solr server is still up]
SolrClient::query[Sends a query to the server]
SolrClient::request[Sends a raw update request]
SolrClient::rollback[Rollbacks all add/deletes made to the indexsince the last commit]
SolrClient::setResponseWriter[Sets the response writer used to prepare theresponse from Solr]
SolrClient::setServlet[Changes the specified servlet type to a newvalue]
SolrClient::threads[スレッドの状態をチェック]
SolrClientException::getInternalInfo[例外がスローされた際の内部情報を返す]
SolrDocument::__clone[SolrDocument オブジェクトのコピーを作成]
SolrDocument::__construct[コンストラクタ]
SolrDocument::__destruct[デストラクタ]
SolrDocument::__get[プロパティとしてフィールドにアクセス]
SolrDocument::__isset[フィールドが存在するかチェック]
SolrDocument::__set[Adds another field to the document]
SolrDocument::__unset[文書からフィールドを除去]
SolrDocument::addField[文書にフィールドを追加]
SolrDocument::clear[Drops all the fields in the document]
SolrDocument::current[現行のフィールドを取得]
SolrDocument::deleteField[文書からフィールドを除去]
SolrDocument::fieldExists[Checks if a field exists in thedocument]
SolrDocument::getFieldCount[この文書内のフィールド数を返す]
SolrDocument::getFieldNames[文書内のフィールド名の配列を返す]
SolrDocument::getField[名前でフィールドを取得]
SolrDocument::getInputDocument[Returns a SolrInputDocument equivalent ofthe object]
SolrDocument::key[現行のキーを返す]
SolrDocument::merge[Merges source to the currentSolrDocument]
SolrDocument::next[内部ポインタを次のフィールドに移動]
SolrDocument::offsetExists[特定のフィールドが存在するかどうかチェック]
SolrDocument::offsetGet[フィールドを取得]
SolrDocument::offsetSet[文書にフィールドを追加]
SolrDocument::offsetUnset[フィールドを除去]
SolrDocument::reset[SolrDocument::clear()へのエイリアス]
SolrDocument::rewind[内部ポインタを先頭にリセット]
SolrDocument::serialize[カスタムのシリアライズで使われます]
SolrDocument::sort[Sorts the fields in the document]
SolrDocument::toArray[文書の配列表現を返す]
SolrDocument::unserialize[Custom serialization of SolrDocumentobjects]
SolrDocument::valid[Checks if the current position internally isstill valid]
SolrDocumentField::__construct[コンストラクタ]
SolrDocumentField::__destruct[デストラクタ]
SolrException::getInternalInfo[例外がスローされた際の内部情報を返す]
SolrGenericResponse::__construct[コンストラクタ]
SolrGenericResponse::__destruct[デストラクタ]
SolrIllegalArgumentException::getInternalInfo[例外がスローされた際の内部情報を返す]
SolrIllegalOperationException::getInternalInfo[例外がスローされた際の内部情報を返す]
SolrInputDocument::__clone[SolrDocument のコピーを作成]
SolrInputDocument::__construct[コンストラクタ]
SolrInputDocument::__destruct[デストラクタ]
SolrInputDocument::addField[文書にフィールドを追加]
SolrInputDocument::clear[入力した文書をリセット]
SolrInputDocument::deleteField[文書からフィールドを除去]
SolrInputDocument::fieldExists[フィールドが存在するかチェック]
SolrInputDocument::getBoost[文書に対する現行の boost 値を取得]
SolrInputDocument::getFieldBoost[特定のフィールドに対する boost 値を取得]
SolrInputDocument::getFieldCount[文書内のフィールド数を返す]
SolrInputDocument::getFieldNames[文書内のフィールドを全て含む配列を返す]
SolrInputDocument::getField[名前でフィールドを取得]
SolrInputDocument::merge[Merges one input document intoanother]
SolrInputDocument::reset[これは、SolrInputDocument::clear のエイリアスです]
SolrInputDocument::setBoost[この文書に対する boost 値を設定]
SolrInputDocument::setFieldBoost[フィールドに対するインデキシング時間の boost 値を設定]
SolrInputDocument::sort[Sorts the fields within the document]
SolrInputDocument::toArray[入力した文書の配列表現を返す]
SolrModifiableParams::__construct[コンストラクタ]
SolrModifiableParams::__destruct[デストラクタ]
SolrObject::__construct[Solr オブジェクトを生成]
SolrObject::__destruct[デストラクタ]
SolrObject::getPropertyNames[全てのプロパティ名の配列を返す]
SolrObject::offsetExists[プロパティが存在するかチェック]
SolrObject::offsetGet[プロパティを取得するために使用される]
SolrObject::offsetSet[プロパティに対して値を設定]
SolrObject::offsetUnset[プロパティに対して値を設定]
SolrParams::addParam[オブジェクトにパラメータを追加]
SolrParams::add[これは、SolrParams::addParam に対するエイリアスです]
SolrParams::getParam[パラメータ値を返す]
SolrParams::getParams[URL エンコードされていないパラメータの配列を返す]
SolrParams::getPreparedParams[URL エンコードされたパラメータの配列を返す]
SolrParams::get[これは、SolrParams::getParam に対するエイリアスです。]
SolrParams::serialize[カスタムのシリアライズで使われます]
SolrParams::setParam[パラメータを指定された値に設定]
SolrParams::set[SolrParams::setParam のエイリアス]
SolrParams::toString[オブジェクト内の名前と値のペアのパラメータを全て返します]
SolrParams::unserialize[カスタムのシリアライズで使われます]
SolrPingResponse::__construct[コンストラクタ]
SolrPingResponse::__destruct[デストラクタ]
SolrPingResponse::getResponse[サーバーからのレスポンスを返す]
SolrQuery::__construct[コンストラクタ]
SolrQuery::__destruct[デストラクタ]
SolrQuery::addFacetDateField[Maps to facet.date]
SolrQuery::addFacetDateOther[Adds another facet.date.otherparameter]
SolrQuery::addFacetField[Adds another field to the facet]
SolrQuery::addFacetQuery[Adds a facet query]
SolrQuery::addField[Specifies which fields to return in theresult]
SolrQuery::addFilterQuery[Specifies a filter query]
SolrQuery::addHighlightField[Maps to hl.fl]
SolrQuery::addMltField[Sets a field to use for similarity]
SolrQuery::addMltQueryField[Maps to mlt.qf]
SolrQuery::addSortField[Used to control how the results should besorted]
SolrQuery::addStatsFacet[Requests a return of sub results for valueswithin the given facet]
SolrQuery::addStatsField[Maps to stats.field parameter]
SolrQuery::getFacetDateEnd[Returns the value for the facet.date.endparameter]
SolrQuery::getFacetDateFields[Returns all the facet.date fields]
SolrQuery::getFacetDateGap[Returns the value of the facet.date.gapparameter]
SolrQuery::getFacetDateHardEnd[Returns the value of the facet.date.hardendparameter]
SolrQuery::getFacetDateOther[Returns the value for the facet.date.otherparameter]
SolrQuery::getFacetDateStart[Returns the lower bound for the first daterange for all date faceting on this field]
SolrQuery::getFacetFields[Returns all the facet fields]
SolrQuery::getFacetLimit[Returns the maximum number of constraintcounts that should be returned for the facet fields]
SolrQuery::getFacetMethod[Returns the value of the facet.methodparameter]
SolrQuery::getFacetMinCount[Returns the minimum counts for facet fieldsshould be included in the response]
SolrQuery::getFacetMissing[Returns the current state of thefacet.missing parameter]
SolrQuery::getFacetOffset[Returns an offset into the list ofconstraints to be used for pagination]
SolrQuery::getFacetPrefix[Returns the facet prefix]
SolrQuery::getFacetQueries[Returns all the facet queries]
SolrQuery::getFacetSort[Returns the facet sort type]
SolrQuery::getFacet[Returns the value of the facetparameter]
SolrQuery::getFields[Returns the list of fields that will bereturned in the response]
SolrQuery::getFilterQueries[Returns an array of filter queries]
SolrQuery::getHighlightAlternateField[Returns the highlight field to use as backupor default]
SolrQuery::getHighlightFields[Returns all the fields that Solr shouldgenerate highlighted snippets for]
SolrQuery::getHighlightFormatter[Returns the formatter for the highlightedoutput]
SolrQuery::getHighlightFragmenter[Returns the text snippet generator forhighlighted text]
SolrQuery::getHighlightFragsize[Returns the number of characters offragments to consider for highlighting]
SolrQuery::getHighlightHighlightMultiTerm[Returns whether or not to enablehighlighting for range/wildcard/fuzzy/prefix queries]
SolrQuery::getHighlightMaxAlternateFieldLength[Returns the maximum number of characters ofthe field to return]
SolrQuery::getHighlightMaxAnalyzedChars[Returns the maximum number of charactersinto a document to look for suitable snippets]
SolrQuery::getHighlightMergeContiguous[Returns whether or not the collapsecontiguous fragments into a single fragment]
SolrQuery::getHighlightRegexMaxAnalyzedChars[Returns the maximum number of charactersfrom a field when using the regex fragmenter]
SolrQuery::getHighlightRegexPattern[Returns the regular expression forfragmenting]
SolrQuery::getHighlightRegexSlop[Returns the deviation factor from the idealfragment size]
SolrQuery::getHighlightRequireFieldMatch[Returns if a field will only be highlightedif the query matched in this particular field]
SolrQuery::getHighlightSimplePost[Returns the text which appears after ahighlighted term]
SolrQuery::getHighlightSimplePre[Returns the text which appears before ahighlighted term]
SolrQuery::getHighlightSnippets[Returns the maximum number of highlightedsnippets to generate per field]
SolrQuery::getHighlightUsePhraseHighlighter[Returns the state of thehl.usePhraseHighlighter parameter]
SolrQuery::getHighlight[Returns the state of the hl parameter]
SolrQuery::getMltBoost[Returns whether or not the query will beboosted by the interesting term relevance]
SolrQuery::getMltCount[Returns the number of similar documents toreturn for each result]
SolrQuery::getMltFields[Returns all the fields to use forsimilarity]
SolrQuery::getMltMaxNumQueryTerms[Returns the maximum number of query termsthat will be included in any generated query]
SolrQuery::getMltMaxNumTokens[Returns the maximum number of tokens toparse in each document field that is not stored with TermVectorsupport]
SolrQuery::getMltMaxWordLength[Returns the maximum word length above whichwords will be ignored]
SolrQuery::getMltMinDocFrequency[Returns the treshold frequency at whichwords will be ignored which do not occur in at least this manydocs]
SolrQuery::getMltMinTermFrequency[Returns the frequency below which terms willbe ignored in the source document]
SolrQuery::getMltMinWordLength[Returns the minimum word length below whichwords will be ignored]
SolrQuery::getMltQueryFields[Returns the query fields and theirboosts]
SolrQuery::getMlt[Returns whether or not MoreLikeThis resultsshould be enabled]
SolrQuery::getQuery[主なクエリーを返す]
SolrQuery::getRows[Returns the maximum number ofdocuments]
SolrQuery::getSortFields[Returns all the sort fields]
SolrQuery::getStart[Returns the offset in the complete resultset]
SolrQuery::getStatsFacets[Returns all the stats facets that wereset]
SolrQuery::getStatsFields[Returns all the statistics fields]
SolrQuery::getStats[Returns whether or not stats isenabled]
SolrQuery::getTermsField[Returns the field from which the terms areretrieved]
SolrQuery::getTermsIncludeLowerBound[Returns whether or not to include the lowerbound in the result set]
SolrQuery::getTermsIncludeUpperBound[Returns whether or not to include the upperbound term in the result set]
SolrQuery::getTermsLimit[Returns the maximum number of terms Solrshould return]
SolrQuery::getTermsLowerBound[Returns the term to start at]
SolrQuery::getTermsMaxCount[Returns the maximum documentfrequency]
SolrQuery::getTermsMinCount[Returns the minimum document frequency toreturn in order to be included]
SolrQuery::getTermsPrefix[Returns the term prefix]
SolrQuery::getTermsReturnRaw[Whether or not to return rawcharacters]
SolrQuery::getTermsSort[Returns an integer indicating how terms aresorted]
SolrQuery::getTermsUpperBound[Returns the term to stop at]
SolrQuery::getTerms[Returns whether or not the TermsComponent isenabled]
SolrQuery::getTimeAllowed[Returns the time in milliseconds allowed forthe query to finish]
SolrQuery::removeFacetDateField[Removes one of the facet date fields]
SolrQuery::removeFacetDateOther[Removes one of the facet.date.otherparameters]
SolrQuery::removeFacetField[Removes one of the facet.dateparameters]
SolrQuery::removeFacetQuery[Removes one of the facet.queryparameters]
SolrQuery::removeField[Removes a field from the list offields]
SolrQuery::removeFilterQuery[Removes a filter query]
SolrQuery::removeHighlightField[Removes one of the fields used forhighlighting]
SolrQuery::removeMltField[Removes one of the moreLikeThisfields]
SolrQuery::removeMltQueryField[Removes one of the moreLikeThis queryfields]
SolrQuery::removeSortField[Removes one of the sort fields]
SolrQuery::removeStatsFacet[Removes one of the stats.facetparameters]
SolrQuery::removeStatsField[Removes one of the stats.fieldparameters]
SolrQuery::setEchoHandler[Toggles the echoHandler parameter]
SolrQuery::setEchoParams[Determines what kind of parameters toinclude in the response]
SolrQuery::setExplainOther[Sets the explainOther common queryparameter]
SolrQuery::setFacetDateEnd[Maps to facet.date.end]
SolrQuery::setFacetDateGap[Maps to facet.date.gap]
SolrQuery::setFacetDateHardEnd[Maps to facet.date.hardend]
SolrQuery::setFacetDateStart[Maps to facet.date.start]
SolrQuery::setFacetEnumCacheMinDefaultFrequency[Sets the minimum document frequency used fordetermining term count]
SolrQuery::setFacetLimit[Maps to facet.limit]
SolrQuery::setFacetMethod[Specifies the type of algorithm to use whenfaceting a field]
SolrQuery::setFacetMinCount[Maps to facet.mincount]
SolrQuery::setFacetMissing[Maps to facet.missing]
SolrQuery::setFacetOffset[Sets the offset into the list of constraintsto allow for pagination]
SolrQuery::setFacetPrefix[Specifies a string prefix with which tolimits the terms on which to facet]
SolrQuery::setFacetSort[Determines the ordering of the facet fieldconstraints]
SolrQuery::setFacet[Maps to the facet parameter. Enables ordisables facetting]
SolrQuery::setHighlightAlternateField[Specifies the backup field to use]
SolrQuery::setHighlightFormatter[Specify a formatter for the highlightoutput]
SolrQuery::setHighlightFragmenter[Sets a text snippet generator forhighlighted text]
SolrQuery::setHighlightFragsize[The size of fragments to consider forhighlighting]
SolrQuery::setHighlightHighlightMultiTerm[Use SpanScorer to highlight phraseterms]
SolrQuery::setHighlightMaxAlternateFieldLength[Sets the maximum number of characters of thefield to return]
SolrQuery::setHighlightMaxAnalyzedChars[Specifies the number of characters into adocument to look for suitable snippets]
SolrQuery::setHighlightMergeContiguous[Whether or not to collapse contiguousfragments into a single fragment]
SolrQuery::setHighlightRegexMaxAnalyzedChars[Specify the maximum number of characters toanalyze]
SolrQuery::setHighlightRegexPattern[Specify the regular expression forfragmenting]
SolrQuery::setHighlightRegexSlop[Sets the factor by which the regexfragmenter can stray from the ideal fragment size]
SolrQuery::setHighlightRequireFieldMatch[Require field matching duringhighlighting]
SolrQuery::setHighlightSimplePost[Sets the text which appears after ahighlighted term]
SolrQuery::setHighlightSimplePre[Sets the text which appears before ahighlighted term]
SolrQuery::setHighlightSnippets[Sets the maximum number of highlightedsnippets to generate per field]
SolrQuery::setHighlightUsePhraseHighlighter[Whether to highlight phrase terms only whenthey appear within the query phrase]
SolrQuery::setHighlight[Enables or disables highlighting]
SolrQuery::setMltBoost[Set if the query will be boosted by theinteresting term relevance]
SolrQuery::setMltCount[Set the number of similar documents toreturn for each result]
SolrQuery::setMltMaxNumQueryTerms[Sets the maximum number of query termsincluded]
SolrQuery::setMltMaxNumTokens[Specifies the maximum number of tokens toparse]
SolrQuery::setMltMaxWordLength[Sets the maximum word length]
SolrQuery::setMltMinDocFrequency[Sets the mltMinDoc frequency]
SolrQuery::setMltMinTermFrequency[Sets the frequency below which terms will beignored in the source docs]
SolrQuery::setMltMinWordLength[Sets the minimum word length]
SolrQuery::setMlt[Enables or disables moreLikeThis]
SolrQuery::setOmitHeader[Exclude the header from the returnedresults]
SolrQuery::setQuery[検索クエリーを設定]
SolrQuery::setRows[Specifies the maximum number of rows toreturn in the result]
SolrQuery::setShowDebugInfo[Flag to show debug information]
SolrQuery::setStart[Specifies the number of rows to skip]
SolrQuery::setStats[Enables or disables the Statscomponent]
SolrQuery::setTermsField[Sets the name of the field to get the Termsfrom]
SolrQuery::setTermsIncludeLowerBound[Include the lower bound term in the resultset]
SolrQuery::setTermsIncludeUpperBound[Include the upper bound term in the resultset]
SolrQuery::setTermsLimit[Sets the maximum number of terms toreturn]
SolrQuery::setTermsLowerBound[Specifies the Term to start from]
SolrQuery::setTermsMaxCount[Sets the maximum document frequency]
SolrQuery::setTermsMinCount[Sets the minimum document frequency]
SolrQuery::setTermsPrefix[Restrict matches to terms that start withthe prefix]
SolrQuery::setTermsReturnRaw[Return the raw characters of the indexedterm]
SolrQuery::setTermsSort[Specifies how to sort the returnedterms]
SolrQuery::setTermsUpperBound[Sets the term to stop at]
SolrQuery::setTerms[Enables or disables theTermsComponent]
SolrQuery::setTimeAllowed[The time allowed for search to finish]
SolrQueryResponse::__construct[コンストラクタ]
SolrQueryResponse::__destruct[デストラクタ]
SolrResponse::getDigestedResponse[シリアライズされた PHP データとして XML レスポンスを返す]
SolrResponse::getHttpStatusMessage[HTTP ステータスに関する詳細を返す]
SolrResponse::getHttpStatus[レスポンスの HTTP ステータスを返す]
SolrResponse::getRawRequestHeaders[Solr サーバーに送られた生のリクエストヘッダを返す]
SolrResponse::getRawRequest[Solr サーバーに送られた生のリクエストを返す]
SolrResponse::getRawResponseHeaders[Solr サーバーからの生のレスポンスヘッダを返す]
SolrResponse::getRawResponse[Solr サーバーからの生のレスポンスを返す]
SolrResponse::getRequestUrl[リクエストが送られた完全な URL を返す]
SolrResponse::getResponse[サーバーからの XML レスポンスを表現する SolrObject を返す]
SolrResponse::setParseMode[パースモードを設定]
SolrResponse::success[リクエストが成功したか]
SolrUpdateResponse::__construct[コンストラクタ]
SolrUpdateResponse::__destruct[デストラクタ]
SolrUtils::digestXmlResponse[Parses an response XML string into aSolrObject]
SolrUtils::escapeQueryChars[Escapes a lucene query string]
SolrUtils::getSolrVersion[Solr エクステンションの現行バージョンを返す]
SolrUtils::queryPhrase[Prepares a phrase from an unescaped lucenestring]
SphinxClient::__construct[新しい SphinxClient オブジェクトを作成する]
SphinxClient::addQuery[マルチクエリバッチにクエリを追加する]
SphinxClient::buildExcerpts[テキストの抜粋を作成する]
SphinxClient::buildKeywords[キーワードをクエリから抽出する]
SphinxClient::close[Closes previously opened persistentconnection]
SphinxClient::escapeString[特殊文字をエスケープする]
SphinxClient::getLastError[直近のエラーメッセージを取得する]
SphinxClient::getLastWarning[直近の警告を取得する]
SphinxClient::open[Opens persistent connection to theserver]
SphinxClient::query[Execute search query]
SphinxClient::resetFilters[Clear all filters]
SphinxClient::resetGroupBy[Clear all group-by settings]
SphinxClient::runQueries[Run a batch of search queries]
SphinxClient::setArrayResult[Change the format of result set array]
SphinxClient::setConnectTimeout[Set connection timeout]
SphinxClient::setFieldWeights[Set field weights]
SphinxClient::setFilterFloatRange[Add new float range filter]
SphinxClient::setFilterRange[Add new integer range filter]
SphinxClient::setFilter[Add new integer values set filter]
SphinxClient::setGeoAnchor[Set anchor point for a geosphere distancecalculations]
SphinxClient::setGroupBy[Set grouping attribute]
SphinxClient::setGroupDistinct[Set attribute name for per-group distinctvalues count calculations]
SphinxClient::setIDRange[Set a range of accepted document IDs]
SphinxClient::setIndexWeights[Set per-index weights]
SphinxClient::setLimits[Set offset and limit of the resultset]
SphinxClient::setMatchMode[Set full-text query matching mode]
SphinxClient::setMaxQueryTime[Set maximum query time]
SphinxClient::setOverride[Sets temporary per-document attribute valueoverrides]
SphinxClient::setRankingMode[Set ranking mode]
SphinxClient::setRetries[Set retry count and delay]
SphinxClient::setSelect[Set select clause]
SphinxClient::setServer[Set searchd host and port]
SphinxClient::setSortMode[Set matches sorting mode]
SphinxClient::status[Queries searchd status]
SphinxClient::updateAttributes[Update document attributes]
SplDoublyLinkedList::bottom[双方向リンクリストの最初のノードを取得する]
SplDoublyLinkedList::count[双方向リンクリストの要素数を数える]
SplDoublyLinkedList::current[現在の配列の要素を返す]
SplDoublyLinkedList::getIteratorMode[反復処理のモードを返す]
SplDoublyLinkedList::isEmpty[双方向リンクリストが空かどうかを調べる]
SplDoublyLinkedList::key[現在のノードのインデックスを返す]
SplDoublyLinkedList::next[次のエントリに移動する]
SplDoublyLinkedList::offsetExists[指定した $index が存在するかどうかを返す]
SplDoublyLinkedList::offsetGet[指定した $index の値を返す]
SplDoublyLinkedList::offsetSet[指定した $index の値を $newval に設定する]
SplDoublyLinkedList::offsetUnset[指定した $index の値を削除する]
SplDoublyLinkedList::pop[双方向リンクリストの末尾からノードを取り出す]
SplDoublyLinkedList::prev[前のエントリに移動する]
SplDoublyLinkedList::push[双方向リンクリストの末尾に要素を追加する]
SplDoublyLinkedList::rewind[イテレータを先頭に巻き戻す]
SplDoublyLinkedList::serialize[ストレージをシリアライズする]
SplDoublyLinkedList::setIteratorMode[反復処理のモードを設定する]
SplDoublyLinkedList::shift[双方向リンクリストの先頭からノードを取り出す]
SplDoublyLinkedList::top[双方向リンクリストの最後のノードを取得する]
SplDoublyLinkedList::unserialize[ストレージをデシリアライズする]
SplDoublyLinkedList::unshift[双方向リンクリストの先頭に要素を追加する]
SplDoublyLinkedList::valid[双方向リンクリストにまだノードがあるかどうかを調べる]
SplEnum::getConstList[すべての定数 (取り得る値) を配列で返す]
SplFileInfo::__construct[新しい SplFileInfo オブジェクトを作成する]
SplFileInfo::__toString[ファイルへのパスを文字列で返す]
SplFileInfo::getATime[ファイルの最終アクセス時刻を取得する]
SplFileInfo::getBasename[ファイルのベース名を取得する]
SplFileInfo::getCTime[inode 変更時刻を取得する]
SplFileInfo::getExtension[ファイルの拡張子を取得する]
SplFileInfo::getFileInfo[ファイルの SplFileInfo オブジェクトを取得する]
SplFileInfo::getFilename[ファイル名を取得する]
SplFileInfo::getGroup[ファイルのグループを取得する]
SplFileInfo::getInode[ファイルの inode を取得する]
SplFileInfo::getLinkTarget[リンク先を取得する]
SplFileInfo::getMTime[最終変更時刻を取得する]
SplFileInfo::getOwner[ファイルの所有者を取得する]
SplFileInfo::getPathInfo[パスの SplFileInfo オブジェクトを取得する]
SplFileInfo::getPath[ファイル名を除いたパスを取得する]
SplFileInfo::getPathname[ファイルへのパスを取得する]
SplFileInfo::getPerms[ファイルのパーミッションを取得する]
SplFileInfo::getRealPath[ファイルへの絶対パスを取得する]
SplFileInfo::getSize[ファイルサイズを取得する]
SplFileInfo::getType[ファイルタイプを取得する]
SplFileInfo::isDir[ファイルがディレクトリかどうかを調べる]
SplFileInfo::isExecutable[ファイルが実行可能かどうかを調べる]
SplFileInfo::isFile[オブジェクトの参照先が通常のファイルであるかどうかを調べる]
SplFileInfo::isLink[ファイルがリンクであるかどうかを調べる]
SplFileInfo::isReadable[ファイルが読み込み可能か調べる]
SplFileInfo::isWritable[エントリが書き込み可能であるかどうかを調べる]
SplFileInfo::openFile[ファイルの SplFileObject オブジェクトを取得する]
SplFileInfo::setFileClass[SplFileInfo::openFile() で使用するクラス名を設定する]
SplFileInfo::setInfoClass[getFileInfo および getPathInfoで使用するクラスを設定する]
SplFileObject::__construct[新しいファイルオブジェクトを作成する]
SplFileObject::__toString[SplFileObject::current() のエイリアス]
SplFileObject::current[ファイルの現在の行を取得する]
SplFileObject::eof[ファイルの終端に到達しているか調べる]
SplFileObject::fflush[出力をファイルにフラッシュする]
SplFileObject::fgetc[ファイルから文字を取り出す]
SplFileObject::fgetcsv[ファイルから行を取り出し CSV フィールドとして処理する]
SplFileObject::fgets[ファイルから 1 行取り出す]
SplFileObject::fgetss[ファイルから 1 行取り出し HTML タグを取り除く]
SplFileObject::flock[簡易なファイルロックを行う]
SplFileObject::fpassthru[ファイルポインタに残っているデータをすべて出力する]
SplFileObject::fputcsv[フィールドの配列を CSV の行として書き出す]
SplFileObject::fscanf[フォーマットに従ってファイルからの入力をパースする]
SplFileObject::fseek[ファイルポインタを移動させる]
SplFileObject::fstat[ファイルの情報を得る]
SplFileObject::ftell[ファイルポインタの現在位置を返す]
SplFileObject::ftruncate[ファイルを指定した長さに丸める]
SplFileObject::fwrite[ファイルに書き込む]
SplFileObject::getChildren[用途はなし]
SplFileObject::getCsvControl[CSV の区切りと囲み文字を取得する]
SplFileObject::getFlags[SplFileObject のフラグを取得する]
SplFileObject::getMaxLineLen[行の最大バイト数を取得する]
SplFileObject::hasChildren[SplFileObject は子を持ちません]
SplFileObject::key[行番号を取得する]
SplFileObject::next[次の行を読み出す]
SplFileObject::rewind[ファイルポインタを先頭に巻き戻す]
SplFileObject::seek[ファイルポインタを指定行に移動させる]
SplFileObject::setCsvControl[CSV の区切り文字と囲み文字をセットする]
SplFileObject::setFlags[SplFileObject のフラグをセットする]
SplFileObject::setMaxLineLen[読み込む行の最大バイト数をセットする]
SplFileObject::valid[ファイル終端でないかチェックする]
SplFixedArray::__wakeup[アンシリアライズ後に配列を再初期化する]
SplFixedArray::count[配列のサイズを返す]
SplFixedArray::current[現在の配列の要素を返す]
SplFixedArray::fromArray[PHP の配列を SplFixedArray インスタンスにインポートする]
SplFixedArray::getSize[配列のサイズを取得する]
SplFixedArray::key[現在の配列の添字を返す]
SplFixedArray::next[次のエントリに進む]
SplFixedArray::offsetExists[指定した添字が存在するかどうかを返す]
SplFixedArray::offsetGet[指定した添字の値を返す]
SplFixedArray::offsetSet[指定した添字の新しい値を設定する]
SplFixedArray::offsetUnset[指定した添字の値を消去する]
SplFixedArray::rewind[イテレータを先頭に巻き戻す]
SplFixedArray::setSize[配列のサイズを変更する]
SplFixedArray::toArray[固定長配列から PHP の配列を返す]
SplFixedArray::valid[配列にまだ要素があるかどうかを調べる]
SplHeap::compare[要素を比較し、ヒープ内の適切な位置に置く]
SplHeap::count[ヒープ内の要素数を数える]
SplHeap::current[イテレータが指す現在のノードを返す]
SplHeap::extract[ヒープの先頭からノードを取り出す]
SplHeap::insert[ヒープに要素を挿入する]
SplHeap::isEmpty[ヒープが空かどうかを調べる]
SplHeap::key[現在のノードのインデックスを返す]
SplHeap::next[次のノードに移動する]
SplHeap::recoverFromCorruption[破壊されたヒープを復旧し、それ以降の操作をできるようにする]
SplHeap::rewind[イテレータを先頭に巻き戻す (何もしない)]
SplHeap::top[ヒープの先頭のノードを取り出す]
SplHeap::valid[ヒープにまだノードがあるかどうかを調べる]
SplMaxHeap::compare[要素を比較し、ヒープ内の適切な位置に置く]
SplMinHeap::compare[要素を比較し、ヒープ内の適切な位置に置く]
SplObjectStorage::addAll[別のストレージからすべてのオブジェクトを追加する]
SplObjectStorage::attach[オブジェクトをストレージに追加する]
SplObjectStorage::contains[ストレージに特定のオブジェクトが含まれるかどうかを調べる]
SplObjectStorage::count[ストレージ内のオブジェクトの数を返す]
SplObjectStorage::current[現在のストレージの要素を返す]
SplObjectStorage::detach[オブジェクトをストレージから取り除く]
SplObjectStorage::getHash[中に含むオブジェクトの一意な識別子を算出する]
SplObjectStorage::getInfo[イテレータの現在のエントリに関連づけられたデータを返す]
SplObjectStorage::key[イテレータの現在位置を返す]
SplObjectStorage::next[次のエントリに移動する]
SplObjectStorage::offsetExists[オブジェクトがストレージ内に存在するかどうかを調べる]
SplObjectStorage::offsetGet[オブジェクトに関連づけられたデータを返す]
SplObjectStorage::offsetSet[ストレージ内のオブジェクトにデータを関連づける]
SplObjectStorage::offsetUnset[ストレージからオブジェクトを取り除く]
SplObjectStorage::removeAllExcept[別のストレージに含まれているもの以外のすべてのオブジェクトを現在のストレージから取り除く]
SplObjectStorage::removeAll[別のストレージに含まれているオブジェクトを現在のストレージから取り除く]
SplObjectStorage::rewind[イテレータをストレージの最初の要素に巻き戻す]
SplObjectStorage::serialize[ストレージをシリアライズする]
SplObjectStorage::setInfo[イテレータの現在のエントリに関連づけるデータを設定する]
SplObjectStorage::unserialize[ストレージの文字列表現をアンシリアライズする]
SplObjectStorage::valid[イテレータの現在のエントリが有効かどうかを返す]
SplObserver::update[subject の更新を受信する]
SplPriorityQueue::compare[要素の優先順位を比較し、ヒープ内の適切な位置に置く]
SplPriorityQueue::count[キュー内の要素数を数える]
SplPriorityQueue::current[イテレータが指す現在のノードを返す]
SplPriorityQueue::extract[ヒープの先頭からノードを取り出す]
SplPriorityQueue::insert[キューに要素を挿入する]
SplPriorityQueue::isEmpty[キューが空かどうかを調べる]
SplPriorityQueue::key[現在のノードのインデックスを返す]
SplPriorityQueue::next[次のノードに移動する]
SplPriorityQueue::recoverFromCorruption[破壊されたキューを復旧し、それ以降の操作をできるようにする]
SplPriorityQueue::rewind[イテレータを先頭に巻き戻す (何もしない)]
SplPriorityQueue::setExtractFlags[取り出しモードを設定する]
SplPriorityQueue::top[キューの先頭のノードを取り出す]
SplPriorityQueue::valid[キューにまだノードがあるかどうかを調べる]
SplQueue::dequeue[キューからノードを取り出す]
SplQueue::enqueue[要素をキューに追加する]
SplQueue::setIteratorMode[反復処理のモードを設定する]
SplStack::setIteratorMode[反復処理のモードを設定する]
SplSubject::attach[SplObserver をアタッチする]
SplSubject::detach[observer をデタッチする]
SplSubject::notify[observer に通知する]
SplTempFileObject::__construct[新しい一時ファイルオブジェクトを作成する]
SplType::__construct[何らかの型の新しい値を作成する]
Spoofchecker::__construct[コンストラクタ]
Spoofchecker::areConfusable[指定したテキストに混同しやすい文字が含まれているかどうかを調べる]
Spoofchecker::isSuspicious[指定したテキストに疑わしい文字が含まれているかどうかを調べる]
Spoofchecker::setAllowedLocales[チェック時に使うロケールを設定する]
Spoofchecker::setChecks[実行するチェックを設定する]
Stackable::isRunning[状態を検出する]
Stackable::isWaiting[状態を検出する]
Stackable::lock[同期処理]
Stackable::notify[同期処理]
Stackable::run[実行する]
Stackable::synchronized[同期処理]
Stackable::unlock[同期処理]
Stackable::wait[同期処理]
Stomp::__construct[Opens a connection]
Stomp::__destruct[Closes stomp connection]
Stomp::abort[Rolls back a transaction in progress]
Stomp::ack[Acknowledges consumption of a message]
Stomp::begin[Starts a transaction]
Stomp::commit[Commits a transaction in progress]
Stomp::error[Gets the last stomp error]
Stomp::getReadTimeout[Gets read timeout]
Stomp::getSessionId[Gets the current stomp session ID]
Stomp::hasFrame[Indicates whether or not there is a frameready to read]
Stomp::readFrame[Reads the next frame]
Stomp::send[Sends a message]
Stomp::setReadTimeout[Sets read timeout]
Stomp::subscribe[Registers to listen to a givendestination]
Stomp::unsubscribe[Removes an existing subscription]
StompException::getDetails[Get exception details]
StompFrame::__construct[Constructor]
Swish::__construct[Swish オブジェクトを作成する]
Swish::getMetaList[このインデックスのメタエントリ一覧を取得する]
Swish::getPropertyList[このインデックスのプロパティ一覧を取得する]
Swish::prepare[検索クエリを準備する]
Swish::query[クエリを実行し、結果オブジェクトを返す]
SwishResult::getMetaList[メタエントリの一覧を取得する]
SwishResult::stem[指定した単語の語幹を取得する]
SwishResults::getParsedWords[パースされた単語の配列を取得する]
SwishResults::getRemovedStopwords[クエリから削除したストップワードの配列を取得する]
SwishResults::nextResult[次の検索結果を取得する]
SwishResults::seekResult[現在のシークポインタを指定した位置に設定する]
SwishSearch::execute[検索を実行し、結果を取得する]
SwishSearch::resetLimit[検索の制限をリセットする]
SwishSearch::setLimit[検索の限界を設定する]
SwishSearch::setPhraseDelimiter[フレーズの区切り文字を設定する]
SwishSearch::setSort[並び順を設定する]
SwishSearch::setStructure[検索オブジェクトの構造フラグを設定する]
Thread::getCreatorId[識別]
Thread::getThreadId[識別]
Thread::isJoined[状態を検出する]
Thread::isRunning[状態を検出する]
Thread::isStarted[状態を検出する]
Thread::isWaiting[状態を検出する]
Thread::join[同期処理]
Thread::lock[同期処理]
Thread::notify[同期処理]
Thread::run[実行する]
Thread::start[実行する]
Thread::synchronized[同期処理]
Thread::unlock[同期処理]
Thread::wait[同期処理]
TokyoTyrant::__construct[新しい TokyoTyrant オブジェクトを作成する]
TokyoTyrant::add[数値キーを加算する]
TokyoTyrant::connectUri[データベースに接続する]
TokyoTyrant::connect[データベースに接続する]
TokyoTyrant::copy[データベースをコピーする]
TokyoTyrant::ext[リモートスクリプトを実行する]
TokyoTyrant::fwmKeys[前方一致でマッチするキーを返す]
TokyoTyrant::getIterator[イテレータを取得する]
TokyoTyrant::get[値を取得する]
TokyoTyrant::num[データベース内のレコードの数を取得する]
TokyoTyrant::out[レコードを削除する]
TokyoTyrant::putCat[レコードを連結する]
TokyoTyrant::putKeep[レコードを書き込む]
TokyoTyrant::putNr[値を格納する]
TokyoTyrant::putShl[レコードを連結する]
TokyoTyrant::put[値を格納する]
TokyoTyrant::restore[データベースをリストアする]
TokyoTyrant::setMaster[レプリケーションのマスタを設定する]
TokyoTyrant::size[値のサイズを返す]
TokyoTyrant::stat[統計情報を取得する]
TokyoTyrant::sync[データベースを同期させる]
TokyoTyrant::tune[接続の値を調節する]
TokyoTyrant::vanish[データベースを空にする]
TokyoTyrantIterator::__construct[イテレータを作成する]
TokyoTyrantIterator::current[現在の値を取得する]
TokyoTyrantIterator::key[現在のキーを返す]
TokyoTyrantIterator::next[次のキーに移動する]
TokyoTyrantIterator::rewind[イテレータを巻き戻す]
TokyoTyrantIterator::valid[イテレータが有効かどうかを調べる]
TokyoTyrantQuery::__construct[新しいクエリを作成する]
TokyoTyrantQuery::addCond[条件をクエリに追加する]
TokyoTyrantQuery::count[レコードを数える]
TokyoTyrantQuery::current[現在の要素を返す]
TokyoTyrantQuery::hint[クエリのヒント文字列を取得する]
TokyoTyrantQuery::key[現在のキーを返す]
TokyoTyrantQuery::metaSearch[複数のクエリからレコードを取得する]
TokyoTyrantQuery::next[イテレータを次のエントリに移動する]
TokyoTyrantQuery::out[クエリに基づいてレコードを削除する]
TokyoTyrantQuery::rewind[イテレータを巻き戻す]
TokyoTyrantQuery::search[レコードを検索する]
TokyoTyrantQuery::setLimit[結果を制限する]
TokyoTyrantQuery::setOrder[結果を並べ替える]
TokyoTyrantQuery::valid[現在のアイテムの有効性をチェックする]
TokyoTyrantTable::add[レコードを追加する]
TokyoTyrantTable::genUid[一意な id を生成する]
TokyoTyrantTable::getIterator[イテレータを取得する]
TokyoTyrantTable::getQuery[クエリオブジェクトを取得する]
TokyoTyrantTable::get[行を取得する]
TokyoTyrantTable::out[レコードを削除する]
TokyoTyrantTable::putCat[行を連結する]
TokyoTyrantTable::putKeep[新しいレコードを書き込む]
TokyoTyrantTable::putNr[値を格納する]
TokyoTyrantTable::putShl[レコードを連結する]
TokyoTyrantTable::put[行を格納する]
TokyoTyrantTable::setIndex[インデックスを設定する]
Transliterator::createFromRules[規則に基づいた Transliterator を作成する]
Transliterator::createInverse[逆方向の Transliterator を作成する]
Transliterator::create[Transliterator を作成する]
Transliterator::getErrorCode[直近のエラーコードを取得する]
Transliterator::getErrorMessage[直近のエラーメッセージを取得する]
Transliterator::listIDs[Transliterator の ID を取得する]
Transliterator::transliterate[文字列を音訳する]
V8Js::__construct[新しい V8Jsオブジェクトを作成する]
V8Js::executeString[文字列を Javascript のコードとして実行する]
V8Js::getExtensions[登録された拡張の配列を返す]
V8Js::getPendingException[キャッチされなかった Javascript 例外の中で未処理のものを返す]
V8Js::registerExtension[V8Js で使う Javascript の拡張を登録する]
V8JsException::getJsFileName[getJsFileName]
V8JsException::getJsLineNumber[getJsLineNumber]
V8JsException::getJsSourceLine[getJsSourceLine]
V8JsException::getJsTrace[getJsTrace]
VarnishAdmin::__construct[VarnishAdmin のコンストラクタ]
VarnishAdmin::auth[varnish インスタンス上で認証する]
VarnishAdmin::banUrl[VCL の式を使って URL を禁止する]
VarnishAdmin::ban[VCL の式を使って URL を禁止する]
VarnishAdmin::clearPanic[varnish インスタンスのパニックメッセージをクリアする]
VarnishAdmin::connect[varnish インスタンスの管理インターフェイスに接続する]
VarnishAdmin::getPanic[varnish インスタンスの直近のパニックメッセージを取得する]
VarnishAdmin::getParams[現在の varnish インスタンスの設定パラメータを取得する]
VarnishAdmin::isRunning[varnish のスレーブプロセスが現在実行中かどうかを調べる]
VarnishAdmin::setCompat[クラスのオプション compat を設定する]
VarnishAdmin::setHost[クラスのオプション host を設定する]
VarnishAdmin::setIdent[クラスのオプション ident を設定する]
VarnishAdmin::setParam[現在の varnish インスタンスの構成パラメータを設定する]
VarnishAdmin::setPort[クラスのオプション port を設定する]
VarnishAdmin::setSecret[クラスのオプション secret を設定する]
VarnishAdmin::setTimeout[クラスのオプション timeout を設定する]
VarnishAdmin::start[varnish ワーカープロセスを開始する]
VarnishAdmin::stop[varnish ワーカープロセスを停止する]
VarnishLog::__construct[Varnishlog のコンストラクタ]
VarnishLog::getLine[ログの次の行を取得する]
VarnishLog::getTagName[ログのタグ文字列を、インデックスから取得する]
VarnishStat::__construct[VarnishStat のコンストラクタ]
VarnishStat::getSnapshot[現在の varnish インスタンスの統計スナップショットを取得する]
WeakMap::__construct[新しいマップを作る]
WeakMap::count[マップ内の生きたエントリを数える]
WeakMap::current[反復処理中の現在の値を返す]
WeakMap::key[反復処理中の現在のキーを返す]
WeakMap::next[マップの次の要素に進む]
WeakMap::offsetExists[オブジェクトがマップ内にあるかどうかを調べる]
WeakMap::offsetGet[オブジェクトを指定して、それが指す値を返す]
WeakMap::offsetSet[新しいキー/値のペアでマップを更新する]
WeakMap::offsetUnset[エントリをマップから削除する]
WeakMap::rewind[イテレータをマップの先頭まで巻き戻す]
WeakMap::valid[イテレータが有効なマップ要素を指しているかどうかを返す]
Weakref::acquire[オブジェクトへの強い参照を確保する]
Weakref::get[弱い参照が指す先にオブジェクトを返す]
Weakref::release[確保した参照を解放する]
Weakref::valid[参照先のオブジェクトがまだ存在するかどうかを調べる]
Worker::getCreatorId[識別]
Worker::getStacked[スタックの状態を調べる]
Worker::getThreadId[識別]
Worker::isShutdown[状態を検出する]
Worker::isWorking[状態を検出する]
Worker::run[実行する]
Worker::shutdown[同期処理]
Worker::stack[スタック処理]
Worker::start[実行する]
Worker::unstack[スタック処理]
XMLReader::XML[パースする XML を含むデータを設定する]
XMLReader::close[XMLReader の入力を閉じる]
XMLReader::expand[現在のノードのコピーを DOM オブジェクトとして返す]
XMLReader::getAttributeNo[インデックスをもとに、属性の値を取得する]
XMLReader::getAttributeNs[名前および URI をもとに、属性の値を取得する]
XMLReader::getAttribute[名前をもとに、属性の値を取得する]
XMLReader::getParserProperty[指定したプロパティが設定されているかどうかを示す]
XMLReader::isValid[パースしているドキュメントの妥当性を示す]
XMLReader::lookupNamespace[プレフィックスから、名前空間を検索する]
XMLReader::moveToAttributeNo[指定したインデックスの属性にカーソルを移動する]
XMLReader::moveToAttributeNs[指定した名前の属性にカーソルを移動する]
XMLReader::moveToAttribute[指定した名前の属性にカーソルを移動する]
XMLReader::moveToElement[現在の属性の親要素にカーソルを移動する]
XMLReader::moveToFirstAttribute[最初の属性にカーソルを移動する]
XMLReader::moveToNextAttribute[次の属性にカーソルを移動する]
XMLReader::next[すべてのサブツリーを飛ばして、次のノードにカーソルを移動する]
XMLReader::open[パースする XML を含む URI を設定する]
XMLReader::readInnerXML[現在のノードから XML を取得する]
XMLReader::readOuterXML[現在のノードから自分自身も含めた XML を取得する]
XMLReader::readString[現在のノードの内容を文字列で読み込む]
XMLReader::read[ドキュメント内の次のノードに移動する]
XMLReader::setParserProperty[パーサのオプションを設定する]
XMLReader::setRelaxNGSchemaSource[RelaxNG スキーマを含むデータを設定する]
XMLReader::setRelaxNGSchema[RelaxNG スキーマのファイル名あるいは URI を設定する]
XMLReader::setSchema[ドキュメントを XSD で検証する]
XMLWriter::endAttribute[属性を終了する]
XMLWriter::endCData[現在の CDATA を終了する]
XMLWriter::endComment[コメントの終了部を作成する]
XMLWriter::endDTDAttlist[現在の DTD 属性リストを終了する]
XMLWriter::endDTDElement[現在の DTD 要素を終了する]
XMLWriter::endDTDEntity[現在の DTD エンティティを終了する]
XMLWriter::endDTD[現在の DTD を終了する]
XMLWriter::endDocument[現在のドキュメントを終了する]
XMLWriter::endElement[現在の要素を終了する]
XMLWriter::endPI[現在の PI (処理命令) を終了する]
XMLWriter::flush[現在のバッファをフラッシュする]
XMLWriter::fullEndElement[現在の要素を終了する]
XMLWriter::openMemory[文字列の出力にメモリを使用する新しい xmlwriter を作成する]
XMLWriter::openURI[ソース URI を指定して新しい xmlwriter を作成する]
XMLWriter::outputMemory[現在のバッファを返す]
XMLWriter::setIndentString[字下げに使用する文字列を設定する]
XMLWriter::setIndent[字下げの on/off を切り替える]
XMLWriter::startAttributeNS[名前空間つきの属性を開始する]
XMLWriter::startAttribute[属性を開始する]
XMLWriter::startCData[CDATA の開始タグを作成する]
XMLWriter::startComment[コメントを開始する]
XMLWriter::startDTDAttlist[DTD 属性リストを開始する]
XMLWriter::startDTDElement[DTD 要素を開始する]
XMLWriter::startDTDEntity[DTD エンティティを開始する]
XMLWriter::startDTD[DTD の開始タグを作成する]
XMLWriter::startDocument[ドキュメントタグを作成する]
XMLWriter::startElementNS[名前空間つき要素の開始タグを作成する]
XMLWriter::startElement[要素の開始タグを作成する]
XMLWriter::startPI[PI (処理命令) の開始タグを作成する]
XMLWriter::text[テキストを書き込む]
XMLWriter::writeAttributeNS[名前空間つき属性全体を書き込む]
XMLWriter::writeAttribute[属性全体を書き込む]
XMLWriter::writeCData[CDATA タグ全体を書き込む]
XMLWriter::writeComment[コメントタグ全体を書き込む]
XMLWriter::writeDTDAttlist[DTD 属性リストタグ全体を書き込む]
XMLWriter::writeDTDElement[DTD 要素タグ全体を書き込む]
XMLWriter::writeDTDEntity[DTD エンティティタグ全体を書き込む]
XMLWriter::writeDTD[DTD タグ全体を書き込む]
XMLWriter::writeElementNS[名前空間つき要素タグ全体を書き込む]
XMLWriter::writeElement[要素タグ全体を書き込む]
XMLWriter::writePI[PI (処理命令) 書き込む]
XMLWriter::writeRaw[生の XML テキストを書き込む]
XSLTProcessor::getParameter[パラメータの値を取得する]
XSLTProcessor::hasExsltSupport[PHP が EXSLT をサポートしているかどうかを判定する]
XSLTProcessor::importStylesheet[スタイルシートを取り込む]
XSLTProcessor::registerPHPFunctions[PHP 関数を XSLT 関数として利用できるようにする]
XSLTProcessor::removeParameter[パラメータを削除する]
XSLTProcessor::setParameter[パラメータの値を設定する]
XSLTProcessor::setProfiling[プロファイル情報の出力ファイルを設定する]
XSLTProcessor::transformToDoc[DOMDocument に変換する]
XSLTProcessor::transformToUri[URI に変換する]
XSLTProcessor::transformToXML[XML に変換する]
XsltProcessor::getSecurityPrefs[セキュリティ設定を取得する]
XsltProcessor::setSecurityPrefs[セキュリティ設定の指定する]
Yaf_Action_Abstract::execute[アクションのエントリポイント]
Yaf_Action_Abstract::getController[コントローラオブジェクトを取得する]
Yaf_Application::__clone[Yaf_Application はクローンできない]
Yaf_Application::__construct[Yaf_Application のコンストラクタ]
Yaf_Application::__destruct[デストラクタ]
Yaf_Application::__sleep[Yaf_Application はシリアライズできない]
Yaf_Application::__wakeup[Yaf_Application はデシリアライズできない]
Yaf_Application::app[アプリケーションのインスタンスを取得する]
Yaf_Application::bootstrap[ブートストラップをコールする]
Yaf_Application::clearLastError[直近のエラー情報を消す]
Yaf_Application::environ[環境を取得する]
Yaf_Application::execute[コールバックを実行する]
Yaf_Application::getAppDirectory[アプリケーションディレクトリを取得する]
Yaf_Application::getConfig[設定情報を取得する]
Yaf_Application::getDispatcher[Yaf_Dispatcher のインスタンスを取得する]
Yaf_Application::getLastErrorMsg[直近で発生したエラーのメッセージを取得する]
Yaf_Application::getLastErrorNo[直近で発生したエラーのコードを取得する]
Yaf_Application::getModules[定義済みのモジュール名を取得する]
Yaf_Application::run[Yaf_Application を開始する]
Yaf_Application::setAppDirectory[アプリケーションディレクトリを変更する]
Yaf_Config_Abstract::get[ゲッター]
Yaf_Config_Abstract::readonly[設定項目が読み込み専用かどうかを調べる]
Yaf_Config_Abstract::set[セッター]
Yaf_Config_Abstract::toArray[配列に変換する]
Yaf_Config_Ini::__construct[コンストラクタ]
Yaf_Config_Ini::__get[The __get purpose]
Yaf_Config_Ini::__isset[The __isset purpose]
Yaf_Config_Ini::__set[The __set purpose]
Yaf_Config_Ini::count[The count purpose]
Yaf_Config_Ini::current[The current purpose]
Yaf_Config_Ini::key[The key purpose]
Yaf_Config_Ini::next[The next purpose]
Yaf_Config_Ini::offsetExists[The offsetExists purpose]
Yaf_Config_Ini::offsetGet[The offsetGet purpose]
Yaf_Config_Ini::offsetSet[The offsetSet purpose]
Yaf_Config_Ini::offsetUnset[The offsetUnset purpose]
Yaf_Config_Ini::readonly[The readonly purpose]
Yaf_Config_Ini::rewind[The rewind purpose]
Yaf_Config_Ini::toArray[The toArray purpose]
Yaf_Config_Ini::valid[The valid purpose]
Yaf_Config_Simple::__construct[コンストラクタ]
Yaf_Config_Simple::__get[The __get purpose]
Yaf_Config_Simple::__isset[The __isset purpose]
Yaf_Config_Simple::__set[The __set purpose]
Yaf_Config_Simple::count[The count purpose]
Yaf_Config_Simple::current[The current purpose]
Yaf_Config_Simple::key[The key purpose]
Yaf_Config_Simple::next[The next purpose]
Yaf_Config_Simple::offsetExists[The offsetExists purpose]
Yaf_Config_Simple::offsetGet[The offsetGet purpose]
Yaf_Config_Simple::offsetSet[The offsetSet purpose]
Yaf_Config_Simple::offsetUnset[The offsetUnset purpose]
Yaf_Config_Simple::readonly[The readonly purpose]
Yaf_Config_Simple::rewind[The rewind purpose]
Yaf_Config_Simple::toArray[The toArray purpose]
Yaf_Config_Simple::valid[The valid purpose]
Yaf_Controller_Abstract::__clone[Yaf_Controller_Abstract はクローンできない]
Yaf_Controller_Abstract::__construct[Yaf_Controller_Abstract のコンストラクタ]
Yaf_Controller_Abstract::display[The display purpose]
Yaf_Controller_Abstract::forward[別のアクションに転送する]
Yaf_Controller_Abstract::getInvokeArg[The getInvokeArg purpose]
Yaf_Controller_Abstract::getInvokeArgs[The getInvokeArgs purpose]
Yaf_Controller_Abstract::getModuleName[モジュール名を取得する]
Yaf_Controller_Abstract::getRequest[現在のリクエストオブジェクトを取得する]
Yaf_Controller_Abstract::getResponse[現在のレスポンスオブジェクトを取得する]
Yaf_Controller_Abstract::getView[ビューエンジンを取得する]
Yaf_Controller_Abstract::getViewpath[The getViewpath purpose]
Yaf_Controller_Abstract::initView[The initView purpose]
Yaf_Controller_Abstract::init[コントローラを初期化する]
Yaf_Controller_Abstract::redirect[URL にリダイレクトする]
Yaf_Controller_Abstract::render[ビューテンプレートをレンダリングする]
Yaf_Controller_Abstract::setViewpath[The setViewpath purpose]
Yaf_Dispatcher::__clone[Yaf_Dispatcher はクローンできない]
Yaf_Dispatcher::__construct[Yaf_Dispatcher のコンストラクタ]
Yaf_Dispatcher::__sleep[Yaf_Dispatcher はシリアライズできない]
Yaf_Dispatcher::__wakeup[Yaf_Dispatcher はデシリアライズできない]
Yaf_Dispatcher::autoRender[自動レンダリングのオン/オフを切り替える]
Yaf_Dispatcher::catchException[例外のキャッチのオン/オフを切り替える]
Yaf_Dispatcher::disableView[ビューのレンダリングを無効にする]
Yaf_Dispatcher::dispatch[リクエストをディスパッチする]
Yaf_Dispatcher::enableView[ビューのレンダリングを有効にする]
Yaf_Dispatcher::flushInstantly[その場でのフラッシュのオン/オフを切り替える]
Yaf_Dispatcher::getApplication[アプリケーションを取得する]
Yaf_Dispatcher::getInstance[ディスパッチャのインスタンスを取得する]
Yaf_Dispatcher::getRequest[リクエストのインスタンスを取得する]
Yaf_Dispatcher::getRouter[ルーターのインスタンスを取得する]
Yaf_Dispatcher::initView[ビューを初期化して返す]
Yaf_Dispatcher::registerPlugin[プラグインを登録する]
Yaf_Dispatcher::returnResponse[The returnResponse purpose]
Yaf_Dispatcher::setDefaultAction[デフォルトのアクション名を変更する]
Yaf_Dispatcher::setDefaultController[デフォルトのコントローラ名を変更する]
Yaf_Dispatcher::setDefaultModule[デフォルトのモジュール名を変更する]
Yaf_Dispatcher::setErrorHandler[エラーハンドラを設定する]
Yaf_Dispatcher::setRequest[The setRequest purpose]
Yaf_Dispatcher::setView[カスタムビューエンジンを設定する]
Yaf_Dispatcher::throwException[例外のスローのオン/オフを切り替える]
Yaf_Exception::__construct[コンストラクタ]
Yaf_Exception::getPrevious[The getPrevious purpose]
Yaf_Loader::__clone[The __clone purpose]
Yaf_Loader::__construct[The __construct purpose]
Yaf_Loader::__sleep[The __sleep purpose]
Yaf_Loader::__wakeup[The __wakeup purpose]
Yaf_Loader::autoload[The autoload purpose]
Yaf_Loader::clearLocalNamespace[The clearLocalNamespace purpose]
Yaf_Loader::getInstance[The getInstance purpose]
Yaf_Loader::getLibraryPath[ライブラリパスを取得する]
Yaf_Loader::getLocalNamespace[The getLocalNamespace purpose]
Yaf_Loader::import[The import purpose]
Yaf_Loader::isLocalName[The isLocalName purpose]
Yaf_Loader::registerLocalNamespace[ローカルクラスプレフィックスを登録する]
Yaf_Loader::setLibraryPath[ライブラリパスを変更する]
Yaf_Plugin_Abstract::dispatchLoopShutdown[The dispatchLoopShutdown purpose]
Yaf_Plugin_Abstract::dispatchLoopStartup[The dispatchLoopStartup purpose]
Yaf_Plugin_Abstract::postDispatch[The postDispatch purpose]
Yaf_Plugin_Abstract::preDispatch[The preDispatch purpose]
Yaf_Plugin_Abstract::preResponse[The preResponse purpose]
Yaf_Plugin_Abstract::routerShutdown[The routerShutdown purpose]
Yaf_Plugin_Abstract::routerStartup[RouterStartup フック]
Yaf_Registry::__clone[The __clone purpose]
Yaf_Registry::__construct[Yaf_Registry はシングルトンを実装する]
Yaf_Registry::del[アイテムをレジストリから削除する]
Yaf_Registry::get[アイテムをレジストリから取得する]
Yaf_Registry::has[アイテムが存在するかどうかを調べる]
Yaf_Registry::set[アイテムをレジストリに追加する]
Yaf_Request_Abstract::getActionName[The getActionName purpose]
Yaf_Request_Abstract::getBaseUri[The getBaseUri purpose]
Yaf_Request_Abstract::getControllerName[The getControllerName purpose]
Yaf_Request_Abstract::getEnv[ENV 変数を取得する]
Yaf_Request_Abstract::getException[The getException purpose]
Yaf_Request_Abstract::getLanguage[The getLanguage purpose]
Yaf_Request_Abstract::getMethod[The getMethod purpose]
Yaf_Request_Abstract::getModuleName[The getModuleName purpose]
Yaf_Request_Abstract::getParam[The getParam purpose]
Yaf_Request_Abstract::getParams[The getParams purpose]
Yaf_Request_Abstract::getRequestUri[The getRequestUri purpose]
Yaf_Request_Abstract::getServer[SERVER 変数を取得する]
Yaf_Request_Abstract::isCli[The isCli purpose]
Yaf_Request_Abstract::isDispatched[The isDispatched purpose]
Yaf_Request_Abstract::isGet[The isGet purpose]
Yaf_Request_Abstract::isHead[The isHead purpose]
Yaf_Request_Abstract::isOptions[The isOptions purpose]
Yaf_Request_Abstract::isPost[The isPost purpose]
Yaf_Request_Abstract::isPut[The isPut purpose]
Yaf_Request_Abstract::isRouted[The isRouted purpose]
Yaf_Request_Abstract::isXmlHttpRequest[The isXmlHttpRequest purpose]
Yaf_Request_Abstract::setActionName[The setActionName purpose]
Yaf_Request_Abstract::setBaseUri[ベース URI を設定する]
Yaf_Request_Abstract::setControllerName[The setControllerName purpose]
Yaf_Request_Abstract::setDispatched[The setDispatched purpose]
Yaf_Request_Abstract::setModuleName[The setModuleName purpose]
Yaf_Request_Abstract::setParam[The setParam purpose]
Yaf_Request_Abstract::setRequestUri[The setRequestUri purpose]
Yaf_Request_Abstract::setRouted[The setRouted purpose]
Yaf_Request_Http::__clone[The __clone purpose]
Yaf_Request_Http::__construct[The __construct purpose]
Yaf_Request_Http::getCookie[Cookie 変数を取得する]
Yaf_Request_Http::getFiles[The getFiles purpose]
Yaf_Request_Http::getPost[POST 変数を取得する]
Yaf_Request_Http::getQuery[クエリパラメータを取得する]
Yaf_Request_Http::getRequest[The getRequest purpose]
Yaf_Request_Http::get[クライアントからの変数を取得する]
Yaf_Request_Http::isXmlHttpRequest[Ajax リクエストかどうかを調べる]
Yaf_Request_Simple::__clone[The __clone purpose]
Yaf_Request_Simple::__construct[The __construct purpose]
Yaf_Request_Simple::getCookie[The getCookie purpose]
Yaf_Request_Simple::getFiles[The getFiles purpose]
Yaf_Request_Simple::getPost[The getPost purpose]
Yaf_Request_Simple::getQuery[The getQuery purpose]
Yaf_Request_Simple::getRequest[The getRequest purpose]
Yaf_Request_Simple::get[The get purpose]
Yaf_Request_Simple::isXmlHttpRequest[The isXmlHttpRequest purpose]
Yaf_Response_Abstract::__clone[The __clone purpose]
Yaf_Response_Abstract::__construct[The __construct purpose]
Yaf_Response_Abstract::__destruct[The __destruct purpose]
Yaf_Response_Abstract::__toString[The __toString purpose]
Yaf_Response_Abstract::appendBody[本文に追記する]
Yaf_Response_Abstract::clearBody[The clearBody purpose]
Yaf_Response_Abstract::clearHeaders[The clearHeaders purpose]
Yaf_Response_Abstract::getBody[コンテンツを取得する]
Yaf_Response_Abstract::getHeader[The getHeader purpose]
Yaf_Response_Abstract::prependBody[The prependBody purpose]
Yaf_Response_Abstract::response[レスポンスを送信する]
Yaf_Response_Abstract::setAllHeaders[The setAllHeaders purpose]
Yaf_Response_Abstract::setBody[コンテンツをレスポンスに設定する]
Yaf_Response_Abstract::setHeader[The setHeader purpose]
Yaf_Response_Abstract::setRedirect[The setRedirect purpose]
Yaf_Route_Interface::route[リクエストをルーティングする]
Yaf_Route_Map::__construct[The __construct purpose]
Yaf_Route_Map::route[The route purpose]
Yaf_Route_Regex::__construct[The __construct purpose]
Yaf_Route_Regex::route[The route purpose]
Yaf_Route_Rewrite::__construct[Yaf_Route_Rewrite のコンストラクタ]
Yaf_Route_Rewrite::route[The route purpose]
Yaf_Route_Simple::__construct[Yaf_Route_Simple のコンストラクタ]
Yaf_Route_Simple::route[リクエストをルーティングする]
Yaf_Route_Static::match[The match purpose]
Yaf_Route_Static::route[リクエストをルーティングする]
Yaf_Route_Supervar::__construct[The __construct purpose]
Yaf_Route_Supervar::route[The route purpose]
Yaf_Router::__construct[Yaf_Router のコンストラクタ]
Yaf_Router::addConfig[設定で定義したルートをルーターに追加する]
Yaf_Router::addRoute[新しいルートをルーターに追加する]
Yaf_Router::getCurrentRoute[使われているルート名を取得する]
Yaf_Router::getRoute[名前を指定してルートを取得する]
Yaf_Router::getRoutes[登録済みのルートを取得する]
Yaf_Router::route[The route purpose]
Yaf_Session::__clone[The __clone purpose]
Yaf_Session::__construct[The __construct purpose]
Yaf_Session::__get[The __get purpose]
Yaf_Session::__isset[The __isset purpose]
Yaf_Session::__set[The __set purpose]
Yaf_Session::__sleep[The __sleep purpose]
Yaf_Session::__unset[The __unset purpose]
Yaf_Session::__wakeup[The __wakeup purpose]
Yaf_Session::count[The count purpose]
Yaf_Session::current[The current purpose]
Yaf_Session::del[The del purpose]
Yaf_Session::getInstance[The getInstance purpose]
Yaf_Session::has[The has purpose]
Yaf_Session::key[The key purpose]
Yaf_Session::next[The next purpose]
Yaf_Session::offsetExists[The offsetExists purpose]
Yaf_Session::offsetGet[The offsetGet purpose]
Yaf_Session::offsetSet[The offsetSet purpose]
Yaf_Session::offsetUnset[The offsetUnset purpose]
Yaf_Session::rewind[The rewind purpose]
Yaf_Session::start[The start purpose]
Yaf_Session::valid[The valid purpose]
Yaf_View_Interface::assign[値をビューエンジンに代入する]
Yaf_View_Interface::display[テンプレートをレンダリングして出力する]
Yaf_View_Interface::getScriptPath[The getScriptPath purpose]
Yaf_View_Interface::render[テンプレートをレンダリングする]
Yaf_View_Interface::setScriptPath[The setScriptPath purpose]
Yaf_View_Simple::__construct[Yaf_View_Simple のコンストラクタ]
Yaf_View_Simple::__get[Retrieve assigned variable]
Yaf_View_Simple::__isset[The __isset purpose]
Yaf_View_Simple::__set[値をエンジンに設定する]
Yaf_View_Simple::assignRef[The assignRef purpose]
Yaf_View_Simple::assign[値を代入する]
Yaf_View_Simple::clear[代入した値をクリアする]
Yaf_View_Simple::display[レンダリングして表示する]
Yaf_View_Simple::eval[テンプレートをレンダリングする]
Yaf_View_Simple::getScriptPath[テンプレートのディレクトリを取得する]
Yaf_View_Simple::render[テンプレートをレンダリングする]
Yaf_View_Simple::setScriptPath[テンプレートのディレクトリを設定する]
ZipArchive::addEmptyDir[新しいディレクトリを追加する]
ZipArchive::addFile[指定したパスからファイルを ZIP アーカイブに追加する]
ZipArchive::addFromString[内容を指定して、ファイルを ZIP アーカイブに追加する]
ZipArchive::close[アクティブな (オープンされた、あるいは新しく作成された)アーカイブを閉じる]
ZipArchive::deleteIndex[インデックスを使用して、アーカイブ内のエントリを削除する]
ZipArchive::deleteName[名前を使用して、アーカイブからエントリを削除する]
ZipArchive::extractTo[アーカイブの内容を展開する]
ZipArchive::getArchiveComment[ZIP アーカイブのコメントを返す]
ZipArchive::getCommentIndex[エントリのインデックスを使用して、エントリのコメントを返す]
ZipArchive::getCommentName[エントリ名を使用して、エントリのコメントを返す]
ZipArchive::getFromIndex[インデックスを使用して、エントリの内容を返す]
ZipArchive::getFromName[名前を使用して、エントリの内容を返す]
ZipArchive::getNameIndex[インデックスを使用して、エントリの名前を返す]
ZipArchive::getStatusString[システムエラー、または ZIP メッセージに関するエラー情報を返す]
ZipArchive::getStream[名前を使用して、エントリのファイルハンドラ (読み込み専用) を取得する]
ZipArchive::locateName[アーカイブ内のエントリのインデックスを返す]
ZipArchive::open[ZIP ファイルアーカイブをオープンする]
ZipArchive::renameIndex[インデックスを使用してエントリ名を変更する]
ZipArchive::renameName[名前を使用してエントリ名を変更する]
ZipArchive::setArchiveComment[ZIP アーカイブのコメントを設定する]
ZipArchive::setCommentIndex[インデックスを使用してエントリのコメントを設定する]
ZipArchive::setCommentName[名前を使用してエントリのコメントを設定する]
ZipArchive::statIndex[インデックスを使用してエントリの詳細を取得する]
ZipArchive::statName[名前を使用してエントリの詳細を取得する]
ZipArchive::unchangeAll[アーカイブに対するすべての変更を取り消す]
ZipArchive::unchangeArchive[アーカイブ全体に対して行われたすべての変更を取り消す]
ZipArchive::unchangeIndex[指定したインデックスのエントリに対するすべての変更を取り消す]
ZipArchive::unchangeName[指定した名前のエントリに対するすべての変更を取り消す]
__autoload[未定義のクラスのロードを試みる]
__halt_compiler[コンパイラの実行を中止する]
abs[絶対値]
acos[逆余弦（アークコサイン）]
acosh[逆双曲線余弦（アークハイパボリックコサイン）]
addcslashes[C 言語と同様にスラッシュで文字列をクォートする]
addslashes[文字列をスラッシュでクォートする]
aggregate[メソッドおよびプロパティの動的なクラス/オブジェクト集約を行う]
aggregate_info[指定したオブジェクトの集約情報を取得する]
aggregate_methods[クラスのメソッドを、動的にオブジェクトに集約する]
aggregate_methods_by_list[選択したクラスメソッドを、動的にオブジェクトに集約する]
aggregate_methods_by_regexp[正規表現を使用して選択したクラスメソッドを、 動的にオブジェクトに集約する]
aggregate_properties[クラスのプロパティを、動的にオブジェクトに集約する]
aggregate_properties_by_list[選択したクラスプロパティを、動的にオブジェクトに集約する]
aggregate_properties_by_regexp[正規表現を使用して選択したクラスプロパティを、動的にオブジェクトに集約する]
apache_child_terminate[このリクエストの後にApacheプロセスを終了する]
apache_get_modules[ロードされた Apache モジュールのリストを取得する]
apache_get_version[Apache のバージョンを取得する]
apache_getenv[Apache の subprocess_env 変数を取得する]
apache_lookup_uri[リクエストの一部を指定したURIに対して行い、全ての情報を返す]
apache_note[Apacheリクエスト記号(note)を取得/設定する]
apache_request_headers[すべての HTTP リクエストヘッダを取得する]
apache_reset_timeout[Apache の書き込みタイマーをリセットする]
apache_response_headers[HTTPレスポンスヘッダを全て取得する]
apache_setenv[Apacheサブプロセスの環境変数を設定する]
apc_add[新規の変数をデータ領域にキャッシュする]
apc_bin_dump[指定したファイルおよびユーザー変数のバイナリダンプを取得する]
apc_bin_dumpfile[キャッシュされたファイルやユーザー変数のバイナリダンプをファイルに出力する]
apc_bin_load[バイナリダンプを APC のファイル/ユーザーキャッシュに読み込む]
apc_bin_loadfile[バイナリダンプをファイルから APCのファイル/ユーザーキャッシュに読み込む]
apc_cache_info[APC のデータから、キャッシュされた情報を取得する]
apc_cas[古い値を新しい値に更新する]
apc_clear_cache[APC キャッシュをクリアする]
apc_compile_file[ファイルをバイトコードキャッシュに保存し、すべてのフィルタをバイパスする]
apc_dec[保存した数値を減らす]
apc_define_constants[定数の組を定義し、それを取得あるいは一括定義する]
apc_delete[格納されている変数をキャッシュから取り除く]
apc_delete_file[ファイルを opcode キャッシュから削除する]
apc_exists[APC キーが存在するかどうかを調べる]
apc_fetch[格納されている変数をキャッシュから取得する]
apc_inc[保存した数値を増やす]
apc_load_constants[定数群をキャッシュから読み込む]
apc_sma_info[APC の共有メモリ割り当てに関する情報を取得する]
apc_store[変数をデータ領域にキャッシュする]
apd_breakpoint[インタプリタの処理を停止し、ソケットからの CR を待つ]
apd_callstack[現在のコールスタックを配列で返す]
apd_clunk[警告とコールスタックをスローする]
apd_continue[インタプリタを再開する]
apd_croak[エラーとコールスタックをスローし、終了する]
apd_dump_function_table[現在の関数テーブルを出力する]
apd_dump_persistent_resources[すべての持続的なリソースを配列で返す]
apd_dump_regular_resources[現在のすべての一般リソースを配列で返す]
apd_echo[デバッグ用ソケットに表示する]
apd_get_active_symbols[ローカルスコープ内の現在の変数名を配列で取得する]
apd_set_pprof_trace[セッションのデバッグを開始する]
apd_set_session[現在のデバッグレベルを変更あるいは設定する]
apd_set_session_trace[セッションのデバッグを開始する]
apd_set_session_trace_socket[リモートセッションのデバッグを開始する]
array[配列を生成する]
array_change_key_case[配列のすべてのキーを変更する]
array_chunk[配列を分割する]
array_combine[一方の配列をキーとして、もう一方の配列を値として、ひとつの配列を生成する]
array_count_values[配列の値の数を数える]
array_diff[配列の差を計算する]
array_diff_assoc[追加された添字の確認を含めて配列の差を計算する]
array_diff_key[キーを基準にして配列の差を計算する]
array_diff_uassoc[ユーザーが指定したコールバック関数を利用し、追加された添字の確認を含めて配列の差を計算する]
array_diff_ukey[キーを基準にし、コールバック関数を用いて配列の差を計算する]
array_fill[配列を指定した値で埋める]
array_fill_keys[キーを指定して、配列を値で埋める]
array_filter[コールバック関数を使用して、配列の要素をフィルタリングする]
array_flip[配列のキーと値を反転する]
array_intersect[配列の共通項を計算する]
array_intersect_assoc[追加された添字の確認も含めて配列の共通項を確認する]
array_intersect_key[キーを基準にして配列の共通項を計算する]
array_intersect_uassoc[追加された添字の確認も含め、コールバック関数を用いて配列の共通項を確認する]
array_intersect_ukey[キーを基準にし、コールバック関数を用いて 配列の共通項を計算する]
array_key_exists[指定したキーまたは添字が配列にあるかどうかを調べる]
array_keys[配列のキーすべて、あるいはその一部を返す]
array_map[指定した配列の要素にコールバック関数を適用する]
array_merge[ひとつまたは複数の配列をマージする]
array_merge_recursive[二つ以上の配列を再帰的にマージする]
array_multisort[複数の多次元の配列をソートする]
array_pad[指定長、指定した値で配列を埋める]
array_pop[配列の末尾から要素を取り除く]
array_product[配列の値の積を計算する]
array_push[一つ以上の要素を配列の最後に追加する]
array_rand[配列から一つ以上の要素をランダムに取得する]
array_reduce[コールバック関数を用いて配列を普通の値に変更することにより、配列を再帰的に減らす]
array_replace[渡された配列の要素を置き換える]
array_replace_recursive[渡された配列の要素を再帰的に置き換える]
array_reverse[要素を逆順にした配列を返す]
array_search[指定した値を配列で検索し、見つかった場合に対応するキーを返す]
array_shift[配列の先頭から要素を一つ取り出す]
array_slice[配列の一部を展開する]
array_splice[配列の一部を削除し、他の要素で置換する]
array_sum[配列の中の値の合計を計算する]
array_udiff[データの比較にコールバック関数を用い、配列の差を計算する]
array_udiff_assoc[データの比較にコールバック関数を用い、追加された添字の確認を含めて配列の差を計算する]
array_udiff_uassoc[データと添字の比較にコールバック関数を用い、追加された添字の確認を含めて配列の差を計算する]
array_uintersect[データの比較にコールバック関数を用い、配列の共通項を計算する]
array_uintersect_assoc[データの比較にコールバック関数を用い、追加された添字の確認も含めて配列の共通項を計算する]
array_uintersect_uassoc[データと添字の比較にコールバック関数を用い、追加された添字の確認も含めて配列の共通項を計算する]
array_unique[配列から重複した値を削除する]
array_unshift[一つ以上の要素を配列の最初に加える]
array_values[配列の全ての値を返す]
array_walk[配列の全ての要素にユーザー関数を適用する]
array_walk_recursive[配列の全ての要素に、ユーザー関数を再帰的に適用する]
arsort[連想キーと要素との関係を維持しつつ配列を逆順にソートする]
asin[逆正弦（アークサイン）]
asinh[逆双曲線正弦（アークハイパボリックサイン）]
asort[連想キーと要素との関係を維持しつつ配列をソートする]
assert[assertion が FALSE であるかどうかを調べる]
assert_options[様々な assert フラグを設定/取得する]
atan2[2 変数のアークタンジェント]
atan[逆正接（アークタンジェント）]
atanh[逆双曲線正接（アークハイパボリックタンジェント）]
base64_decode[MIME base64 方式によりエンコードされたデータをデコードする]
base64_encode[MIME base64 方式でデータをエンコードする]
base_convert[数値の基数を任意に変換する]
basename[パスの最後にある名前の部分を返す]
bbcode_add_element[bbcode 要素を追加する]
bbcode_add_smiley[顔文字をパーサに追加する]
bbcode_create[BBCode リソースを作成する]
bbcode_destroy[BBCode_container リソースを閉じる]
bbcode_parse[文字列を、指定した規則のもとでパースする]
bbcode_set_arg_parser[別のパーサをアタッチして、引数のパース用に別のルールセットを設定する]
bbcode_set_flags[パーサのオプションを設定あるいは変更する]
bcadd[2つの任意精度の数値を加算する]
bccomp[2 つの任意精度数値を比較する]
bcdiv[2つの任意精度数値で除算を行う]
bcmod[2 つの任意精度数値の剰余を取得する]
bcmul[2つの任意精度数値の乗算を行う]
bcompiler_load[bz 圧縮されたファイルを読み込み、クラスを生成する]
bcompiler_load_exe[bcompiler の exe ファイルを読み込み、クラスを生成する]
bcompiler_parse_class[クラスのバイトコードを読み込み、ユーザー関数をコールする]
bcompiler_read[ファイルハンドルを読み込み、クラスを生成する]
bcompiler_write_class[定義したクラスをバイトコードとして書き込む]
bcompiler_write_constant[定義した定数をバイトコードとして書き込む]
bcompiler_write_exe_footer[開始位置および exe 形式ファイルのフッタを書き込む]
bcompiler_write_file[php ソースファイルをバイトコードとして書き込む]
bcompiler_write_footer[コンパイルされたデータの終了を示す文字 \x00 を書き込む]
bcompiler_write_function[定義した関数をバイトコードとして書き込む]
bcompiler_write_functions_from_file[ファイル内で定義されているすべての関数をバイトコードとして書き込む]
bcompiler_write_header[bcompiler のヘッダを書き込む]
bcompiler_write_included_filename[インクルードされたファイルをバイトコードとして書き込む]
bcpow[任意精度数値をべき乗する]
bcpowmod[任意精度数値のべき乗の、指定した数値による剰余]
bcscale[すべての BC 演算関数におけるデフォルトのスケールを設定する]
bcsqrt[任意精度数値の平方根を取得する]
bcsub[任意精度数値の減算を行う]
bin2hex[2進表現のデータを16進表現に変換する]
bind_textdomain_codeset[DOMAINメッセージカタログから返されるメッセージの文字エンコーディングを指定する]
bindec[2 進数 を 10 進数に変換する]
bindtextdomain[ドメインのパスを設定する]
boolval[変数の boolean としての値を取得する]
bson_decode[BSON オブジェクトを PHP の配列に復元する]
bson_encode[PHP の変数を BSON 文字列に変換する]
bzclose[bzip2 ファイルを閉じる]
bzcompress[文字列をbzip2形式のデータに圧縮する]
bzdecompress[bzip2 形式のデータを解凍する]
bzerrno[bzip2 エラー番号を返す]
bzerror[bzip2 エラー番号とエラー文字列を配列で返す]
bzerrstr[bzip2 エラー文字列を返す]
bzflush[全てのバッファリングされたデータを強制的に書き込む]
bzopen[bzip2 圧縮されたファイルをオープンする]
bzread[バイナリ対応の bzip2 ファイル読み込み]
bzwrite[バイナリ対応の bzip2 ファイルへの書き込み]
cairo_create[Returns a new CairoContext object on therequested surface.]
cairo_font_face_get_type[Description]
cairo_font_face_status[Description]
cairo_font_options_create[Description]
cairo_font_options_equal[Description]
cairo_font_options_get_antialias[Description]
cairo_font_options_get_hint_metrics[Description]
cairo_font_options_get_hint_style[Description]
cairo_font_options_get_subpixel_order[Description]
cairo_font_options_hash[Description]
cairo_font_options_merge[Description]
cairo_font_options_set_antialias[Description]
cairo_font_options_set_hint_metrics[Description]
cairo_font_options_set_hint_style[Description]
cairo_font_options_set_subpixel_order[Description]
cairo_font_options_status[Description]
cairo_format_stride_for_width[Description]
cairo_image_surface_create[Description]
cairo_image_surface_create_for_data[Description]
cairo_image_surface_create_from_png[Description]
cairo_image_surface_get_data[Description]
cairo_image_surface_get_format[Description]
cairo_image_surface_get_height[Description]
cairo_image_surface_get_stride[Description]
cairo_image_surface_get_width[Description]
cairo_matrix_invert[Description]
cairo_matrix_multiply[Description]
cairo_matrix_rotate[Description]
cairo_matrix_transform_distance[Description]
cairo_matrix_transform_point[Description]
cairo_matrix_translate[Description]
cairo_pattern_add_color_stop_rgb[Description]
cairo_pattern_add_color_stop_rgba[Description]
cairo_pattern_create_for_surface[Description]
cairo_pattern_create_linear[Description]
cairo_pattern_create_radial[Description]
cairo_pattern_create_rgb[Description]
cairo_pattern_create_rgba[Description]
cairo_pattern_get_color_stop_count[Description]
cairo_pattern_get_color_stop_rgba[Description]
cairo_pattern_get_extend[Description]
cairo_pattern_get_filter[Description]
cairo_pattern_get_linear_points[Description]
cairo_pattern_get_matrix[Description]
cairo_pattern_get_radial_circles[Description]
cairo_pattern_get_rgba[Description]
cairo_pattern_get_surface[Description]
cairo_pattern_get_type[Description]
cairo_pattern_set_extend[Description]
cairo_pattern_set_filter[Description]
cairo_pattern_set_matrix[Description]
cairo_pattern_status[Description]
cairo_pdf_surface_create[Description]
cairo_pdf_surface_set_size[Description]
cairo_ps_get_levels[Description]
cairo_ps_level_to_string[Description]
cairo_ps_surface_create[Description]
cairo_ps_surface_dsc_begin_page_setup[Description]
cairo_ps_surface_dsc_begin_setup[Description]
cairo_ps_surface_dsc_comment[Description]
cairo_ps_surface_get_eps[Description]
cairo_ps_surface_restrict_to_level[Description]
cairo_ps_surface_set_eps[Description]
cairo_ps_surface_set_size[Description]
cairo_scaled_font_create[Description]
cairo_scaled_font_extents[Description]
cairo_scaled_font_get_ctm[Description]
cairo_scaled_font_get_font_face[Description]
cairo_scaled_font_get_font_matrix[Description]
cairo_scaled_font_get_font_options[Description]
cairo_scaled_font_get_scale_matrix[Description]
cairo_scaled_font_get_type[Description]
cairo_scaled_font_glyph_extents[Description]
cairo_scaled_font_status[Description]
cairo_scaled_font_text_extents[Description]
cairo_surface_copy_page[Description]
cairo_surface_create_similar[Description]
cairo_surface_finish[Description]
cairo_surface_flush[Description]
cairo_surface_get_content[Description]
cairo_surface_get_device_offset[Description]
cairo_surface_get_font_options[Description]
cairo_surface_get_type[Description]
cairo_surface_mark_dirty[Description]
cairo_surface_mark_dirty_rectangle[Description]
cairo_surface_set_device_offset[Description]
cairo_surface_set_fallback_resolution[Description]
cairo_surface_show_page[Description]
cairo_surface_status[Description]
cairo_surface_write_to_png[Description]
cairo_svg_surface_create[Description]
cairo_svg_surface_restrict_to_version[Description]
cairo_svg_version_to_string[Description]
cal_days_in_month[指定した年とカレンダーについて、月の日数を返す]
cal_from_jd[ユリウス積算日からサポートされるカレンダーに変換する]
cal_info[特定のカレンダーに関する情報を返す]
cal_to_jd[サポートされるカレンダーからユリウス積算日に変換する]
calcul_hmac[hmac を取得する (八つの引数が必要)]
calculhmac[hmac キーを取得する (2 つの引数が必要)]
call_user_func[最初の引数で指定したコールバック関数をコールする]
call_user_func_array[パラメータの配列を指定してコールバック関数をコールする]
call_user_method[指定したオブジェクトのユーザーメソッドをコールする (古い関数)]
call_user_method_array[パラメータの配列を指定してユーザーメソッドをコールする (古い関数)]
ceil[端数の切り上げ]
chdb::__construct[chdbクラスのインスタンスを生成します。]
chdb::get[キーに対応した値を取得する]
chdb_create[chdb ファイルを作成する]
chdir[ディレクトリを変更する]
checkdate[グレゴリオ暦の日付/時刻の妥当性を確認します]
checkdnsrr[指定したインターネットホスト名もしくは IP アドレスに対応する DNSレコードを検索する]
chgrp[ファイルのグループを変更する]
chmod[ファイルのモードを変更する]
chown[ファイルの所有者を変更する]
chr[特定の文字を返す]
chunk_split[文字列をより小さな部分に分割する]
class_alias[クラスのエイリアスを作成する]
class_exists[クラスが定義済みかどうかを確認する]
class_implements[与えられたクラスが実装しているインターフェイスを返す]
class_parents[与えられたクラスの親クラスを返す]
class_uses[指定したクラスが使っているトレイトを返す]
classkit_import[新しいクラスメソッドの定義をファイルから読み込む]
classkit_method_add[指定したクラスに、新しいメソッドを動的に追加する]
classkit_method_copy[あるクラスのメソッドを別のクラスにコピーする]
classkit_method_redefine[指定されたメソッドのコードを動的に変更する]
classkit_method_remove[指定したメソッドを動的に削除する]
classkit_method_rename[指定したメソッドの名前を動的に変更する]
clearstatcache[ファイルのステータスのキャッシュをクリアする]
closedir[ディレクトリハンドルをクローズする]
closelog[システムログへの接続を閉じる]
com_addref[コンポーネントの参照カウンタを増やす (非推奨)]
com_create_guid[グローバルユニーク ID (GUID) を生成する]
com_event_sink[COM オブジェクトのイベントを PHP オブジェクトに接続する]
com_get_active_object[すでに実行中の COM オブジェクトのインスタンスへのハンドルを返す]
com_isenum[COM オブジェクトが IEnumVariantインターフェイスを実装しているかどうかを示す (非推奨)]
com_load_typelib[タイプライブラリを読み込む]
com_message_pump[COM メッセージを処理し、timeoutms ミリ秒の間待つ]
com_print_typeinfo[ディスパッチインターフェイスのために、PHP のクラス定義を出力する]
com_release[コンポーネントリファレンスカウンタを減らす (廃止)]
compact[変数名とその値から配列を作成する]
connection_aborted[クライアントとの接続が切断されているかどうかを調べる]
connection_status[接続ステータスのビットフィールドを返す]
connection_timeout[スクリプトがタイムアウトしたかどうかを調べる]
constant[定数の値を返す]
convert_cyr_string[キリル文字セットを他のものに変換する]
convert_uudecode[uuencode された文字列をデコードする]
convert_uuencode[文字列を uuencode する]
copy[ファイルをコピーする]
cos[余弦（コサイン）]
cosh[双曲線余弦（ハイパボリックコサイン）]
count[変数に含まれるすべての要素、あるいはオブジェクトに含まれる何かの数を数える]
count_chars[文字列で使用されている文字に関する情報を返す]
counter_bump[基本カウンタの現在の値を更新する]
counter_bump_value[カウンタリソースの現在の値を変更する]
counter_create[単一の数値を保持するカウンタを作成する]
counter_get[基本カウンタの現在の値を取得する]
counter_get_meta[カウンタリソースについてのメタ情報を返す]
counter_get_named[指定した名前の既存のカウンタを取得する]
counter_get_value[カウンタリソースの現在の値を取得する]
counter_reset[基本カウンタの現在の値をリセットする]
counter_reset_value[カウンタリソースの現在の値をリセットする]
crack_getlastmessage[直近の強度チェックからのメッセージを返す]
crc32[文字列の crc32 多項式計算を行う]
create_function[匿名関数 (ラムダ形式) を作成する]
crypt[文字列の一方向のハッシュ化を行う]
ctype_alnum[英数字かどうかを調べる]
ctype_alpha[英字かどうかを調べる]
ctype_cntrl[制御文字かどうかを調べる]
ctype_digit[数字かどうかを調べる]
ctype_graph[空白以外の印字可能な文字かどうかを調べる]
ctype_lower[小文字かどうかを調べる]
ctype_print[印字可能な文字かどうかを調べる]
ctype_punct[空白、英数字以外の出力可能な文字かどうかを調べる]
ctype_space[空白文字かどうか調べる]
ctype_upper[大文字かどうか調べる]
ctype_xdigit[16 進数を表す文字かどうかを調べる]
cubrid_affected_rows[Return the number of rows affected by thelast SQL statement]
cubrid_bind[Bind variables to a prepared statement asparameters]
cubrid_client_encoding[Return the current CUBRID connectioncharset]
cubrid_close[Close CUBRID connection]
cubrid_close_prepare[Close the request handle]
cubrid_close_request[Close the request handle]
cubrid_col_get[Get contents of collection type column usingOID]
cubrid_col_size[Get the number of elements in collectiontype column using OID]
cubrid_column_names[Get the column names in result]
cubrid_column_types[Get column types in result]
cubrid_commit[Commit a transaction]
cubrid_connect[Open a connection to a CUBRID Server]
cubrid_connect_with_url[Establish the environment for connecting toCUBRID server]
cubrid_current_oid[Get OID of the current cursorlocation]
cubrid_data_seek[Move the internal row pointer of the CUBRIDresult]
cubrid_db_name[Get db name from results ofcubrid_list_dbs]
cubrid_disconnect[Close a database connection]
cubrid_drop[Delete an instance using OID]
cubrid_errno[Return the numerical value of the errormessage from previous CUBRID operation]
cubrid_error[Get the error message]
cubrid_error_code[Get error code for the most recent functioncall]
cubrid_error_code_facility[Get the facility code of error]
cubrid_error_msg[Get last error message for the most recentfunction call]
cubrid_execute[Execute a prepared SQL statement]
cubrid_fetch[Fetch the next row from a result set]
cubrid_fetch_array[Fetch a result row as an associative array,a numeric array, or both]
cubrid_fetch_assoc[Return the associative array thatcorresponds to the fetched row]
cubrid_fetch_field[Get column information from a result andreturn as an object]
cubrid_fetch_lengths[Return an array with the lengths of thevalues of each field from the current row]
cubrid_fetch_object[Fetche the next row and returns it as anobject]
cubrid_fetch_row[Return a numerical array with the values ofthe current row]
cubrid_field_flags[Return a string with the flags of the givenfield offset]
cubrid_field_len[Get the maximum length of the specifiedfield]
cubrid_field_name[Return the name of the specified fieldindex]
cubrid_field_seek[Move the result set cursor to the specifiedfield offset]
cubrid_field_table[Return the name of the table of thespecified field]
cubrid_field_type[Return the type of the column correspondingto the given field offset]
cubrid_free_result[Free the memory occupied by the resultdata]
cubrid_get[Get a column using OID]
cubrid_get_autocommit[Get auto-commit mode of theconnection]
cubrid_get_charset[Return the current CUBRID connectioncharset]
cubrid_get_class_name[Get the class name using OID]
cubrid_get_client_info[Return the client library version]
cubrid_get_db_parameter[Returns the CUBRID databaseparameters]
cubrid_get_query_timeout[Get the query timeout value of therequest]
cubrid_get_server_info[Return the CUBRID server version]
cubrid_insert_id[Return the ID generated for the last updated AUTO_INCREMENT column]
cubrid_is_instance[Check whether the instance pointed by OIDexists]
cubrid_list_dbs[Return an array with the list of allexisting CUBRID databases]
cubrid_load_from_glo[Read data from a GLO instance and save it ina file]
cubrid_lob2_bind[Bind a lob object or a string as a lobobject to a prepared statement as parameters.]
cubrid_lob2_close[Close LOB object.]
cubrid_lob2_export[Export the lob object to a file.]
cubrid_lob2_import[Import BLOB/CLOB data from a file.]
cubrid_lob2_new[Create a lob object.]
cubrid_lob2_read[Read from BLOB/CLOB data.]
cubrid_lob2_seek64[Move the cursor of a lob object.]
cubrid_lob2_seek[Move the cursor of a lob object.]
cubrid_lob2_size64[Get a lob object's size.]
cubrid_lob2_size[Get a lob object's size.]
cubrid_lob2_tell64[Tell the cursor position of the LOBobject.]
cubrid_lob2_tell[Tell the cursor position of the LOBobject.]
cubrid_lob2_write[Write to a lob object.]
cubrid_lob_close[Close BLOB/CLOB data]
cubrid_lob_export[Export BLOB/CLOB data to file]
cubrid_lob_get[Get BLOB/CLOB data]
cubrid_lob_send[Read BLOB/CLOB data and send straight tobrowser]
cubrid_lob_size[Get BLOB/CLOB data size]
cubrid_lock_read[Set a read lock on the given OID]
cubrid_lock_write[Set a write lock on the given OID]
cubrid_move_cursor[Move the cursor in the result]
cubrid_new_glo[Create a glo instance]
cubrid_next_result[Get result of next query when executingmultiple SQL statements]
cubrid_num_cols[Return the number of columns in the resultset]
cubrid_num_fields[Return the number of columns in the resultset]
cubrid_num_rows[Get the number of rows in the resultset]
cubrid_pconnect[Open a persistent connection to a CUBRIDserver]
cubrid_pconnect_with_url[Open a persistent connection to CUBRIDserver]
cubrid_ping[Ping a server connection or reconnect ifthere is no connection]
cubrid_prepare[Prepare an SQL statement forexecution]
cubrid_put[Update a column using OID]
cubrid_query[Send a CUBRID query]
cubrid_real_escape_string[Escape special characters in a string foruse in an SQL statement]
cubrid_result[Return the value of a specific field in aspecific row]
cubrid_rollback[Roll back a transaction]
cubrid_save_to_glo[Save requested file in a GLO instance]
cubrid_schema[Get the requested schema information]
cubrid_send_glo[Read data from glo and send it to stdoutput]
cubrid_seq_drop[Delete an element from sequence type columnusing OID]
cubrid_seq_insert[Insert an element to a sequence type columnusing OID]
cubrid_seq_put[Update the element value of sequence typecolumn using OID]
cubrid_set_add[Insert a single element to set type columnusing OID]
cubrid_set_autocommit[Set autocommit mode of the connection]
cubrid_set_db_parameter[Sets the CUBRID database parameters]
cubrid_set_drop[Delete an element from set type column usingOID]
cubrid_set_query_timeout[Set the timeout time of queryexecution]
cubrid_unbuffered_query[Perform a query without fetching the resultsinto memory]
cubrid_version[Get the CUBRID PHP module's version]
curl_close[cURL セッションを閉じる]
curl_copy_handle[cURL ハンドルを、その設定も含めてコピーする]
curl_errno[直近のエラー番号を返す]
curl_error[現在のセッションに関する直近のエラー文字列を返す]
curl_exec[cURL セッションを実行する]
curl_getinfo[指定した伝送に関する情報を得る]
curl_init[cURL セッションを初期化する]
curl_multi_add_handle[cURL マルチハンドルに、通常の cURL ハンドルを追加する]
curl_multi_close[cURL ハンドルのセットを閉じる]
curl_multi_exec[現在の cURL ハンドルから、サブ接続を実行する]
curl_multi_getcontent[CURLOPT_RETURNTRANSFER が設定されている場合に、cURL ハンドルの内容を返す]
curl_multi_info_read[現在の転送についての情報を表示する]
curl_multi_init[新規 cURL マルチハンドルを返す]
curl_multi_remove_handle[cURL ハンドルのセットからマルチハンドルを削除する]
curl_multi_select[curl_multi 接続のアクティビティを待つ]
curl_setopt[cURL 転送用オプションを設定する]
curl_setopt_array[CURL 転送用の複数のオプションを設定する]
curl_version[cURL のバージョンを返す]
current[配列内の現在の要素を返す]
cyrus_authenticate[Cyrus IMAP サーバーに対する認証を行う]
cyrus_bind[Cyrus IMAP 接続へのコールバックをバインドする]
cyrus_close[Cyrus IMAP サーバーへの接続を閉じる]
cyrus_connect[Cyrus IMAP サーバーに接続する]
cyrus_query[Cyrus IMAP サーバーへクエリを送信する]
cyrus_unbind[アンバインドする ...]
date[ローカルの日付/時刻を書式化する]
date_default_timezone_get[スクリプト中の日付/時刻関数で使用されるデフォルトタイムゾーンを取得する]
date_default_timezone_set[スクリプト中の日付/時刻関数で使用されるデフォルトタイムゾーンを設定する]
date_parse[指定した日付に関する詳細な情報を連想配列で返す]
date_parse_from_format[指定した書式でフォーマットされた日付についての情報を取得する]
date_sun_info[日の出/日の入り時刻と薄明かり (twilight)の開始/終了時刻の情報を含む配列を返す]
date_sunrise[指定した日付と場所についての日の出時刻を返す]
date_sunset[指定した日付と場所についての日の入り時刻を返す]
db2_autocommit[データベース接続の AUTOCOMMIT の状態を取得または設定する]
db2_bind_param[PHP 変数を SQL 文のパラメータにバインドする]
db2_client_info[DB2データベースクライアントの情報をプロパティに保持するオブジェクトを返す]
db2_close[データベース接続を閉じる]
db2_column_privileges[テーブルのカラムおよび関連する権限情報を含む結果セットを返す]
db2_columns[テーブルのカラムおよび関連するメタデータを含む結果セットを返す]
db2_commit[トランザクションをコミットする]
db2_conn_error[直近の接続から返された SQLSTATE を含む文字列を返す]
db2_conn_errormsg[直近の接続エラーメッセージおよび SQLCODE を返す]
db2_connect[データベースへの接続を返す]
db2_cursor_type[ステートメントリソースが使用しているカーソルの型を返す]
db2_escape_string[特定の文字をエスケープする]
db2_exec[SQL 文を直接実行する]
db2_execute[プリペアドステートメントを実行する]
db2_fetch_array[結果セット内の行を表す、カラム位置をインデックスとする配列を返す]
db2_fetch_assoc[結果セット内の行を表す、カラム名をインデックスとする配列を返す]
db2_fetch_both[結果セット内の行を表す、カラム位置およびカラム名の両方をインデックスとする配列を返す]
db2_fetch_object[結果セット内の行を表す、カラムをプロパティとするオブジェクトを返す]
db2_fetch_row[結果セットポインタを次の行あるいは要求された行に設定する]
db2_field_display_size[カラムを表示するために必要な最大のバイト数を返す]
db2_field_name[結果セット内のカラムの名前を返す]
db2_field_num[結果セット内の指定したカラムの位置を返す]
db2_field_precision[結果セット内の指定したカラムの精度を返す]
db2_field_scale[結果セット内の指定したカラムの位取りを返す]
db2_field_type[結果セット内の指定したカラムのデータ型を返す]
db2_field_width[結果セット内の指定したカラムの現在値の幅を返す]
db2_foreign_keys[テーブルの外部キーを含む結果セットを返す]
db2_free_result[結果セットに関連付けられたリソースを開放する]
db2_free_stmt[指定されたステートメントリソースに関連付けられたリソースを開放する]
db2_get_option[ステートメントリソースあるいは接続リソースからオプションの値を取得する]
db2_last_insert_id[この接続上で最後に成功した insert クエリが自動生成した IDを返す]
db2_lob_read[LOB ファイルから、ユーザーが定義したサイズの内容を取得する]
db2_next_result[ストアドプロシージャから、次の結果セットを要求する]
db2_num_fields[結果セットに含まれるフィールドの数を返す]
db2_num_rows[SQL 文によって変更された行の数を返す]
db2_pclose[持続的データベース接続を閉じる]
db2_pconnect[データベースへの持続的接続を返す]
db2_prepare[実行する SQL 文を準備する]
db2_primary_keys[テーブルの主キーを含む結果セットを返す]
db2_procedure_columns[ストアドプロシージャのパラメータを含む結果セットを返す]
db2_procedures[データベース内に登録されているストアドプロシージャの一覧を含む結果セットを返す]
db2_result[結果セットの行からひとつのカラムを返す]
db2_rollback[トランザクションをロールバックする]
db2_server_info[DB2 データベースサーバーの情報をプロパティに保持するオブジェクトを返す]
db2_set_option[接続リソースあるいはステートメントリソースのオプションを設定する]
db2_special_columns[テーブルのユニーク行 ID カラムを含む結果セットを返す]
db2_statistics[インデックスの情報およびテーブルの統計情報を含む結果セットを返す]
db2_stmt_error[SQL 文が返す SQLSTATE を含む文字列を返す]
db2_stmt_errormsg[直近の SQL 文のエラーメッセージを含む文字列を返す]
db2_table_privileges[データベース内のテーブルおよび関連する権限情報を含む結果セットを返す]
db2_tables[データベース内のテーブルおよび関連するメタデータを含む結果セットを返す]
dba_close[DBA データベースを閉じる]
dba_delete[キーが指す DBA エントリを削除する]
dba_exists[キーが存在するかどうかを確認する]
dba_fetch[キーが指すデータを取得する]
dba_firstkey[最初のキーを取得する]
dba_handlers[利用可能なハンドラの一覧を得る]
dba_insert[エントリを挿入する]
dba_key_split[文字列形式のキーを配列形式に分割する]
dba_list[オープンされている全データベースファイルのリストを得る]
dba_nextkey[次のキーを取得する]
dba_open[データベースをオープンする]
dba_optimize[データベースを最適化する]
dba_popen[データベースを持続的にオープンする]
dba_replace[エントリを置換または挿入する]
dba_sync[データベースを同期する]
dbase_add_record[データベースにレコードを追加する]
dbase_close[データベースを閉じる]
dbase_create[データベースを作成する]
dbase_delete_record[データベースからレコードを削除する]
dbase_get_header_info[データベースのヘッダ情報を得る]
dbase_get_record[データベースからレコードを配列形式で得る]
dbase_get_record_with_names[データベースからレコードを連想配列として得る]
dbase_numfields[データベースのフィールド数を得る]
dbase_numrecords[データベースのレコード数を得る]
dbase_open[データベースをオープンする]
dbase_pack[データベースを圧縮する]
dbase_replace_record[データベースのレコードを置換する]
dbplus_add[リレーションにタプルを追加する]
dbplus_aql[AQL クエリを実行する]
dbplus_chdir[データベース仮想カレントディレクトリを設定/取得する]
dbplus_close[リレーションを閉じる]
dbplus_curr[リレーションからカレントタプルを取得する]
dbplus_errcode[指定したエラーコードまたは直近のエラーに関するエラー文字列を取得する]
dbplus_errno[直近の操作に関するエラーコードを取得する]
dbplus_find[リレーションに拘束を設定する]
dbplus_first[リレーションから最初のタプルを取得する]
dbplus_flush[リレーションに行った全ての変更をフラッシュする]
dbplus_freealllocks[このクライアントにより保持された全てのロックを解放する]
dbplus_freelock[タプルの書き込みロックを解放する]
dbplus_freerlocks[指定したリレーションに関する全てのタプルロックを解放する]
dbplus_getlock[タプルの書き込みロックを取得する]
dbplus_getunique[あるリレーションのユニークな ID 番号を取得する]
dbplus_info[リレーションについての情報を取得する]
dbplus_last[リレーションから直近のタプルを取得する]
dbplus_lockrel[リレーションに書き込みロックを要求する]
dbplus_next[リレーションから次のタプルを取得する]
dbplus_open[リレーションファイルをオープンする]
dbplus_prev[リレーションから前のタプルを取得する]
dbplus_rchperm[リレーションの許可属性を変更する]
dbplus_rcreate[新しい DB++ リレーションを作成する]
dbplus_rcrtexact[インデックスを含む、リレーションの空のコピーを作成する]
dbplus_rcrtlike[デフォルトのインデックスで、リレーションの空のコピーを作成する]
dbplus_resolve[リレーションのホスト情報を取得する]
dbplus_restorepos[位置を復元する]
dbplus_rkeys[リレーションの主キーを新規に指定する]
dbplus_ropen[リレーションファイルをローカルにオープンする]
dbplus_rquery[ローカル (raw) AQL クエリを実行する]
dbplus_rrename[リレーションの名前を変更する]
dbplus_rsecindex[リレーションに新規セカンダリインデックスを作成する]
dbplus_runlink[ファイルシステムからリレーションを削除する]
dbplus_rzap[リレーションから全てのタプルを削除する]
dbplus_savepos[位置を保存する]
dbplus_setindex[インデックスを設定する]
dbplus_setindexbynumber[インデックスを数字で設定する]
dbplus_sql[SQL クエリを実行する]
dbplus_tcl[サーバー側で TCL コードを実行する]
dbplus_tremove[タプルを削除し、新規カレントタプルを返す]
dbplus_undo[元に戻す]
dbplus_undoprepare[元に戻す準備をする]
dbplus_unlockrel[リレーションの書き込みロックを中断する]
dbplus_unselect[リレーションから制約を削除する]
dbplus_update[リレーション内の指定したタプルを更新する]
dbplus_xlockrel[リレーションの排他的ロックを要求する]
dbplus_xunlockrel[リレーションの排他的ロックを解放する]
dbx_close[オープンされた接続/データベースを閉じる]
dbx_compare[ソートするために二つのレコードを比較する]
dbx_connect[接続/データベースをオープンする]
dbx_error[使用するモジュールの最新の関数コールにおけるエラーメッセージを出力する]
dbx_escape_string[SQL ステートメントで安全に使用できるように文字列をエスケープする]
dbx_fetch_row[DBX_RESULT_UNBUFFERED フラグを指定した クエリ結果から、行を取得する]
dbx_query[クエリを送信し、(ある場合には)結果を全て取得する]
dbx_sort[カスタマイズされたソート関数により、dbx_queryから結果をソートする]
dcgettext[単一の参照に関するドメインを上書きする]
dcngettext[dcgettext の複数形版]
deaggregate[集約されたメソッドやプロパティをオブジェクトから取り除く]
debug_backtrace[バックトレースを生成する]
debug_print_backtrace[バックトレースを表示する]
debug_zval_dump[内部的な Zend の値を表す文字列をダンプする]
decbin[10 進数を 2 進数に変換する]
dechex[10 進数を 16 進数に変換する]
decoct[10 進数を 8 進数に変換する]
define[名前を指定して定数を定義する]
define_syslog_variables[syslog に関係する全ての定数を初期化する]
defined[指定した名前の定数が存在するかどうかを調べる]
deg2rad[度単位の数値をラジアン単位に変換する]
delete[unlink() か unset() を参照すること]
dgettext[現在のドメインを上書きする]
dio_close[fd で指定したファイル記述子を閉じる]
dio_fcntl[fd について C ライブラリの fcntl を実行する]
dio_open[C ライブラリの入出力ストリーム関数が許すよりも低レベルでファイルをオープンする(必要ならファイルを作成する)]
dio_read[ファイル記述子からバイトデータを読み込む]
dio_seek[fd 上で whence から pos に移動する]
dio_stat[ファイル記述子 fd に関する stat 情報を取得する]
dio_tcsetattr[シリアルポートの端末属性とボーレートを設定する]
dio_truncate[ファイル記述子 fd をオフセットバイトへ丸める]
dio_write[オプションで丸め長さを指定してデータを書き込む]
dir[ディレクトリクラスのインスタンスを返す]
dirname[親ディレクトリのパスを返す]
disk_free_space[ファイルシステムあるいはディスクパーティション上で利用可能な領域を返す]
disk_total_space[ファイルシステムあるいはディスクパーティションの全体サイズを返す]
dl[実行時に PHP 拡張モジュールをロードする]
dngettext[dgettext の複数形版]
dns_get_record[ホスト名に関連する DNS リソースレコードを取得する]
dom_import_simplexml[SimpleXMLElement オブジェクトから DOMElementオブジェクトを取得する]
dotnet_load[DOTNET モジュールをロードする]
each[配列から現在のキーと値のペアを返して、カーソルを進める]
easter_date[指定した年における復活祭の真夜中のUnix時を得る]
easter_days[指定した年において、3 月 21 日から復活祭までの日数を得る]
echo[1 つ以上の文字列を出力する]
eio_busy[人為的に負荷を高くする。テストやベンチマークなどで有用]
eio_cancel[リクエストを取り消す]
eio_chmod[ファイルやディレクトリのパーミッションを変更する]
eio_chown[ファイルやディレクトリのオーナーを変更する]
eio_close[ファイルを閉じる]
eio_custom[eio_* のようなカスタムリクエストを実行する]
eio_dup2[ファイルディスクリプタを複製する]
eio_event_loop[すべてのリクエストを処理し終えるまで libeio をポールする]
eio_fallocate[呼び出し元が、ファイルに割り当てられたディスク空間を直接操作できるようにする]
eio_fchmod[ファイルのパーミッションを変更する]
eio_fchown[ファイルのオーナーを変更する]
eio_fdatasync[ファイルのコア内の情報をストレージデバイスに同期させる]
eio_fstat[ファイルの状態を取得する]
eio_fstatvfs[ファイルシステムの状態を取得する]
eio_fsync[メモリ内でのファイルの状態をストレージデバイスに同期させる]
eio_ftruncate[ファイルを切り詰める]
eio_futime[ファイルの最終アクセス時刻と変更時刻を変更する]
eio_get_event_stream[内部での libeio との通信に使う変数を表すストリームを取得する]
eio_get_last_error[リクエストリソースに関連づけられた直近のエラーの説明を文字列で返す]
eio_grp[リクエストグループを作る]
eio_grp_add[リクエストをリクエストグループに追加する]
eio_grp_cancel[リクエストグループをキャンセルする]
eio_grp_limit[グループリミットを設定する]
eio_init[Eio を初期化する]
eio_link[ファイルのハードリンクを作る]
eio_lstat[ファイルの状態を取得する]
eio_mkdir[ディレクトリを作る]
eio_mknod[特殊ファイルあるいは一般ファイルを作る]
eio_nop[何もせず、ただリクエストのサイクルを回す]
eio_npending[終了したけれども処理されなかったリクエストの数を返す]
eio_nready[未処理のリクエスト数を返す]
eio_nreqs[処理対象のリクエスト数を返す]
eio_nthreads[現在利用中のスレッド数を返す]
eio_open[ファイルを開く]
eio_poll[未処理のリクエストがあるかどうかを調べる]
eio_read[ファイルを、指定したオフセットから読み込む]
eio_readahead[ファイルを先読みしてページキャッシュに格納する]
eio_readdir[ディレクトリ全体を読み込む]
eio_readlink[シンボリックリンクの値を読む]
eio_realpath[正規化した絶対パスを取得する]
eio_rename[ファイル名や場所を変更する]
eio_rmdir[ディレクトリを削除する]
eio_seek[fd で指定したファイル内でのオフセットを、 offset と whence に従って移動する]
eio_sendfile[ファイルディスクリプタ間でデータを転送する]
eio_set_max_idle[アイドルスレッドの最大数を設定する]
eio_set_max_parallel[最大の並列スレッド数を設定する]
eio_set_max_poll_reqs[一度のポールで行う最大のリクエスト回数を設定する]
eio_set_max_poll_time[最大のポール時間を設定する]
eio_set_min_parallel[最小の並列スレッド数を設定する]
eio_stat[ファイルの状態を取得する]
eio_statvfs[ファイルシステムの状態を取得する]
eio_symlink[シンボリックリンクを作る]
eio_sync[バッファのキャッシュをディスクに書き込む]
eio_sync_file_range[ファイルセグメントをディスクに同期する]
eio_syncfs[Linux の syncfs システムコールが使えれば、それを呼ぶ]
eio_truncate[ファイルを切り詰める]
eio_unlink[名前を削除し、その名前で参照しているファイルも削除する]
eio_utime[ファイルの最終アクセス時刻と変更時刻を変更する]
eio_write[ファイルに書き込む]
empty[変数が空であるかどうかを検査する]
enchant_broker_describe[Enchant プロバイダを列挙する]
enchant_broker_dict_exists[辞書が存在するかどうかを調べる。空でないタグを使用する]
enchant_broker_free[ブローカーリソースおよびその辞書を開放する]
enchant_broker_free_dict[辞書リソースを開放する]
enchant_broker_get_error[ブローカーの直近のエラーを返す]
enchant_broker_init[要求を満たすブローカーオブジェクトを作成する]
enchant_broker_list_dicts[使用可能な辞書の一覧を返す]
enchant_broker_request_dict[タグを使用して新しい辞書を作成する]
enchant_broker_request_pwl_dict[PWL ファイルを使用して辞書を作成する]
enchant_broker_set_ordering[その言語で使用する辞書の優先順位を宣言する]
enchant_dict_add_to_personal[パーソナル単語リストに単語を追加する]
enchant_dict_add_to_session['単語' を、このスペルチェックセッションに追加する]
enchant_dict_check[単語のスペルが正しいかどうかを調べる]
enchant_dict_describe[個々の辞書について説明する]
enchant_dict_get_error[現在のスペリングセッションの直近のエラーを返す]
enchant_dict_is_in_session[このスペリングセッションに '単語' が存在するかどうかを調べる]
enchant_dict_quick_check[単語のスペルが正しいかどうかを調べ、修正候補を提供する]
enchant_dict_store_replacement[単語の修正候補を追加する]
enchant_dict_suggest[修正候補となる値の一覧を返す]
end[配列の内部ポインタを最終要素にセットする]
ereg[正規表現によるマッチングを行う]
ereg_replace[正規表現による置換を行う]
eregi[大文字小文字を区別せずに正規表現によるマッチングを行う]
eregi_replace[大文字小文字を区別せずに正規表現による置換を行う]
error_get_last[最後に発生したエラーを取得する]
error_log[エラーメッセージを送信する]
error_reporting[出力する PHP エラーの種類を設定する]
escapeshellarg[シェル引数として使用される文字列をエスケープする]
escapeshellcmd[シェルのメタ文字をエスケープする]
eval[文字列を PHP コードとして評価する]
event_add[モニタするイベントに追加する]
event_base_free[イベントベースを破棄する]
event_base_loop[イベントを処理する]
event_base_loopbreak[イベントループを中止する]
event_base_loopexit[あとでループを終了する]
event_base_new[新しいイベントベースを作成して初期化する]
event_base_priority_init[イベントの優先度レベルの数値を設定する]
event_base_set[イベントベースをイベントと関連づける]
event_buffer_base_set[バッファつきイベントをイベントベースと関連づける]
event_buffer_disable[バッファつきイベントを無効にする]
event_buffer_enable[バッファつきイベントを有効にする]
event_buffer_fd_set[バッファつきイベントのファイル記述子を変更する]
event_buffer_free[バッファつきイベントを破棄する]
event_buffer_new[新しいバッファつきイベントを作成する]
event_buffer_priority_set[バッファ着きイベントの優先度を設定する]
event_buffer_read[バッファつきイベントからデータを読み込む]
event_buffer_set_callback[バッファつきイベントのコールバックを設定あるいはリセットする]
event_buffer_timeout_set[バッファつきイベントの読み込みタイムアウトおよび書き込みタイムアウトを設定する]
event_buffer_watermark_set[読み込みおよび書き込みイベントのウォーターマークを設定する]
event_buffer_write[バッファつきイベントにデータを書き込む]
event_del[モニタするイベントから削除する]
event_free[イベントリソースを解放する]
event_new[新しいイベントを作成する]
event_set[イベントを準備する]
exec[外部プログラムを実行する]
exif_imagetype[イメージの型を定義する]
exif_read_data[JPEGあるいは TIFF から EXIFヘッダを読み込む]
exif_tagname[インデックスに対応するヘッダ名を取得する]
exif_thumbnail[TIFF あるいは JPEG 形式の画像に埋め込まれたサムネイルを取得する]
exit[メッセージを出力し、現在のスクリプトを終了する]
exp[e の累乗を計算する]
expect_expectl[プロセスの出力がパターンに一致する・指定した時間が経過する・ あるいは EOFに達するのいずれかにあてはまるまで待ち続ける]
expect_popen[Bourne シェル経由でコマンドを実行し、プロセスへの PTYストリームをオープンする]
explode[文字列を文字列により分割する]
expm1[値がゼロに近い時にでも精度を保つために exp(number) - 1を返す]
extension_loaded[ある拡張機能がロードされているかどうかを調べる]
extract[配列からシンボルテーブルに変数をインポートする]
ezmlm_hash[EZMLM で必要なハッシュ値を計算する]
fam_cancel_monitor[監視を終了する]
fam_close[FAM 接続を閉じる]
fam_monitor_collection[指定したディレクトリにあるファイルの変更を監視する]
fam_monitor_directory[ディレクトリの変更を監視する]
fam_monitor_file[通常のファイルの変更を監視する]
fam_next_event[次の待機中の FAM イベントを返す]
fam_open[FAM デーモンへの接続をオープンする]
fam_pending[待機中の FAM イベントの有無を調べる]
fam_resume_monitor[中断された監視処理を再開する]
fam_suspend_monitor[監視を一時的に中断する]
fbsql_affected_rows[直近の FrontBase 操作により変更されたレコードの数を得る]
fbsql_autocommit[autocommit を有効または無効にする]
fbsql_blob_size[BLOB の大きさを取得する]
fbsql_change_user[アクティブな接続にログインしているユーザーを変更する]
fbsql_clob_size[CLOB の大きさを取得する]
fbsql_close[FrontBase 接続を閉じる]
fbsql_commit[データベースへのトランザクションをコミットする]
fbsql_connect[FrontBase サーバーへの接続をオープンする]
fbsql_create_blob[BLOB を作成する]
fbsql_create_clob[CLOB を作成する]
fbsql_create_db[FrontBase データベースを作成する]
fbsql_data_seek[内部結果ポインタを移動する]
fbsql_database[接続で使用するデータベース名を取得あるいは設定する]
fbsql_database_password[FrontBase データベースのパスワードを設定または取得する]
fbsql_db_query[FrontBase クエリを送信する]
fbsql_db_status[指定したデータベースの状態を取得する]
fbsql_drop_db[FrontBase データベースを破棄(削除)する]
fbsql_errno[前の FrontBase 操作によるエラーメッセージの数値を返す]
fbsql_error[前の FrontBase 操作によるエラーメッセージの文字列を返す]
fbsql_fetch_array[連想配列、数値配列、またはその両方として結果レコードを取得する]
fbsql_fetch_assoc[連想配列として結果レコードを取得する]
fbsql_fetch_field[結果からカラム情報を得て、オブジェクトとして返す]
fbsql_fetch_lengths[結果の各出力の長さを得る]
fbsql_fetch_object[オブジェクトとして結果レコードを取得する]
fbsql_fetch_row[数値配列として結果レコードを得る]
fbsql_field_flags[クエリ結果において指定したフィールドに関するフラグを得る]
fbsql_field_len[指定したフィールドの長さを返す]
fbsql_field_name[結果の指定したフィールドの名前を得る]
fbsql_field_seek[指定したフィールドオフセットに結果ポインタを設定する]
fbsql_field_table[指定したフィールドがあるテーブルの名前を得る]
fbsql_field_type[結果の中で指定したフィールドの型を得る]
fbsql_free_result[結果メモリを開放する]
fbsql_hostname[接続で使用されているホスト名を取得あるいは設定する]
fbsql_insert_id[直近の INSERT 処理により生成された ID を得る]
fbsql_list_dbs[FrontBase サーバーで利用可能なデータベースの一覧を得る]
fbsql_list_fields[FrontBase 結果フィールドの一覧を得る]
fbsql_list_tables[FrontBase データベースのテーブル一覧を得る]
fbsql_next_result[内部結果ポインタを次の結果に移動する]
fbsql_num_fields[結果のフィールド数を得る]
fbsql_num_rows[結果のレコード数を得る]
fbsql_password[接続に対して使用するユーザーパスワードを取得あるいは設定する]
fbsql_pconnect[FrontBase サーバーへの持続的接続をオープンする]
fbsql_query[FrontBase クエリを送信する]
fbsql_read_blob[データベースから BLOB を読み込む]
fbsql_read_clob[データベースから CLOB を読み込む]
fbsql_result[結果データを得る]
fbsql_rollback[データベースへのトランザクションをロールバックする]
fbsql_rows_fetched[直近の文で影響をうけた行の数を取得する]
fbsql_select_db[FrontBase データベースを選択する]
fbsql_set_characterset[入出力文字セットを変更する]
fbsql_set_lob_mode[FrontBase 結果セットの LOB 取得モードを設定する]
fbsql_set_password[指定したユーザーのパスワードを変更する]
fbsql_set_transaction[トランザクションのロックと分離レベルを設定する]
fbsql_start_db[ローカルまたはリモートサーバーのデータベースを開始する]
fbsql_stop_db[ローカルまたはリモートサーバーのデータベースを停止する]
fbsql_table_name[フィールドのテーブル名を得る]
fbsql_username[接続に使用するホストユーザーを取得あるいは設定する]
fbsql_warnings[FrontBase 警告を有効または無効にする]
fclose[オープンされたファイルポインタをクローズする]
fdf_add_doc_javascript[FDF ドキュメントに javascript コードを追加する]
fdf_add_template[テンプレートを FDF ドキュメントに追加する]
fdf_close[FDF ドキュメントを閉じる]
fdf_create[新規 FDF ドキュメントを作成する]
fdf_enum_values[各ドキュメントの値に対してユーザー定義関数をコールする]
fdf_errno[直近の fdf 操作に関するエラーコードを返す]
fdf_error[直近の fdf エラーコードについての説明を返す]
fdf_get_ap[フィールドの外観を取得する]
fdf_get_attachment[FDF に埋め込まれている、アップロードされたファイルを展開する]
fdf_get_encoding[/Encoding キーの値を取得する]
fdf_get_file[/F キーの値を得る]
fdf_get_flags[フィールドのフラグを取得する]
fdf_get_opt[フィールドのオプション配列から値を取得する]
fdf_get_status[/STATUS キーの値を得る]
fdf_get_value[フィールドの値を得る]
fdf_get_version[FDF API あるいはファイルのバージョンを取得する]
fdf_header[FDF 固有の出力ヘッダをセットする]
fdf_next_field_name[次のフィールド名を得る]
fdf_open[FDF ドキュメントをオープンする]
fdf_open_string[文字列から FDF ドキュメントを読み込む]
fdf_remove_item[フォームのターゲットフレームを設定する]
fdf_save[FDF ドキュメントを保存する]
fdf_save_string[FDF ドキュメントを文字列として返す]
fdf_set_ap[フィールドの外観を設定する]
fdf_set_encoding[FDF 文字エンコーディングを設定する]
fdf_set_file[FDF データを表示する PDF ドキュメントを設定する]
fdf_set_flags[フィールドのフラグを設定する]
fdf_set_javascript_action[フィールドの javascript アクションを設定する]
fdf_set_on_import_javascript[Acrobat が FDF をオープンした際に実行される javascriptのコードを追加する]
fdf_set_opt[フィールドのオプションを設定する]
fdf_set_status[/STATUS キーの値を設定する]
fdf_set_submit_form_action[フィールドの投稿フォームアクションを設定する]
fdf_set_target_frame[フォームの表示対象となるフレームを設定する]
fdf_set_value[フィールドの値を設定する]
fdf_set_version[FDF ファイルのバージョン番号を設定する]
feof[ファイルポインタがファイル終端に達しているかどうか調べる]
fflush[出力をファイルにフラッシュする]
fgetc[ファイルポインタから1文字取り出す]
fgetcsv[ファイルポインタから行を取得し、CSVフィールドを処理する]
fgets[ファイルポインタから 1 行取得する]
fgetss[ファイルポインタから 1 行取り出し、HTML タグを取り除く]
file[ファイル全体を読み込んで配列に格納する]
file_exists[ファイルまたはディレクトリが存在するかどうか調べる]
file_get_contents[ファイルの内容を全て文字列に読み込む]
file_put_contents[文字列をファイルに書き込む]
fileatime[ファイルの最終アクセス時刻を取得する]
filectime[ファイルの inode 変更時刻を取得する]
filegroup[ファイルのグループを取得する]
fileinode[ファイルの inode を取得する]
filemtime[ファイルの更新時刻を取得する]
fileowner[ファイルの所有者を取得する]
fileperms[ファイルのパーミッションを取得する]
filepro[map ファイルの読み込みと照合を行う]
filepro_fieldcount[filePro データベース中のフィールド数を返す]
filepro_fieldname[フィールド名を取得する]
filepro_fieldtype[フィールド型を取得する]
filepro_fieldwidth[フィールド幅を取得する]
filepro_retrieve[filePro データベースからデータを取得する]
filepro_rowcount[filePro データベースの行の数を返します]
filesize[ファイルのサイズを取得する]
filetype[ファイルタイプを取得する]
filter_has_var[指定した型の変数が存在するかどうかを調べる]
filter_id[フィルタの名前からフィルタ ID を返す]
filter_input[指定した名前の変数を外部から受け取り、オプションでそれをフィルタリングする]
filter_input_array[外部から変数を受け取り、オプションでそれらをフィルタリングする]
filter_list[サポートされるフィルタの一覧を返す]
filter_var[指定したフィルタでデータをフィルタリングする]
filter_var_array[複数の変数を受け取り、オプションでそれらをフィルタリングする]
finfo_buffer[文字列バッファの情報を返す]
finfo_close[fileinfo リソースを閉じる]
finfo_file[ファイルについての情報を返す]
finfo_open[新しい fileinfo リソースを作成する]
finfo_set_flags[libmagic のオプションを設定する]
floatval[変数の float 値を取得する]
flock[汎用のファイルロックを行う]
floor[端数の切り捨て]
flush[出力バッファをフラッシュする]
fmod[引数で除算をした際の剰余を返す]
fnmatch[ファイル名がパターンにマッチするか調べる]
fopen[ファイルまたは URL をオープンする]
forward_static_call[静的メソッドをコールする]
forward_static_call_array[静的メソッドをコールし、引数を配列で渡す]
fpassthru[ファイルポインタ上に残っているすべてのデータを出力する]
fprintf[フォーマットされた文字列をストリームに書き込む]
fputcsv[行を CSV 形式にフォーマットし、ファイルポインタに書き込む]
fread[バイナリセーフなファイルの読み込み]
fribidi_log2vis[論理表記を物理表記に変換する]
fscanf[フォーマットに基づきファイルからの入力を処理する]
fseek[ファイルポインタを移動する]
fsockopen[インターネット接続もしくは Unix ドメインソケット接続をオープンする]
fstat[オープンしたファイルポインタからファイルに関する情報を取得する]
ftell[ファイルの読み書き用ポインタの現在位置を返す]
ftok[パス名とプロジェクト ID を、System V IPC キーに変換する]
ftp_alloc[アップロードされるファイルのためのスペースを確保する]
ftp_cdup[親ディレクトリに移動する]
ftp_chdir[FTP サーバー上でディレクトリを移動する]
ftp_chmod[FTP 経由でファイルのパーミッションを設定する]
ftp_close[FTP 接続を閉じる]
ftp_connect[FTP 接続をオープンする]
ftp_delete[FTP サーバー上のファイルを削除する]
ftp_exec[FTP サーバー上でのコマンドの実行をリクエストする]
ftp_fget[FTPサーバーからファイルをダウンロードし、オープン中のファイルに保存する]
ftp_fput[オープン中のファイルを FTP サーバーにアップロードする]
ftp_get[FTP サーバーからファイルをダウンロードする]
ftp_get_option[カレント FTP ストリームでの種々の実行時動作を取得する]
ftp_login[FTP 接続にログインする]
ftp_mdtm[指定したファイルが最後に更新された時刻を返す]
ftp_mkdir[ディレクトリを作成する]
ftp_nb_continue[ファイルの取得/送信を継続する（非ブロッキング）]
ftp_nb_fget[FTPサーバーからファイルをダウンロードし、オープン中のファイルに保存する（非ブロッキング）]
ftp_nb_fput[オープン中のファイルを FTP サーバーに保存する（非ブロッキング）]
ftp_nb_get[FTPサーバーからファイルを取得し、ローカルファイルに書き込む（非ブロッキング）]
ftp_nb_put[FTP サーバーにファイルを保存する（非ブロッキング）]
ftp_nlist[指定したディレクトリのファイルの一覧を返す]
ftp_pasv[パッシブモードをオンまたはオフにする]
ftp_put[FTP サーバーにファイルをアップロードする]
ftp_pwd[カレントのディレクトリ名を返す]
ftp_raw[FTP サーバーに任意のコマンドを送信する]
ftp_rawlist[指定したディレクトリの詳細なファイル一覧を返す]
ftp_rename[FTP サーバー上のファイルまたはディレクトリの名前を変更する]
ftp_rmdir[ディレクトリを削除する]
ftp_set_option[さまざまな FTP 実行時オプションを設定する]
ftp_site[SITEコマンドをサーバーに送信する]
ftp_size[指定したファイルのサイズを返す]
ftp_ssl_connect[セキュアな SSL-FTP 接続をオープンする]
ftp_systype[リモート FTP サーバーのシステム型 ID を返す]
ftruncate[ファイルを指定した長さに丸める]
func_get_arg[引数のリストから要素をひとつ返す]
func_get_args[関数の引数リストを配列として返す]
func_num_args[関数に渡された引数の数を返す]
function_exists[指定した関数が定義されている場合に TRUE を返す]
fwrite[バイナリセーフなファイル書き込み処理]
gc_collect_cycles[すべての既存ガベージサイクルを強制的に収集する]
gc_disable[循環参照コレクタを無効にする]
gc_enable[循環参照コレクタを有効にする]
gc_enabled[循環参照コレクタの状態を返す]
gd_info[現在インストールされているGDライブラリに関する情報を取得する]
geoip_continent_code_by_name[二文字の大陸コードを取得する]
geoip_country_code3_by_name[三文字の国コードを取得する]
geoip_country_code_by_name[二文字の国コードを取得する]
geoip_country_name_by_name[完全な国名を取得する]
geoip_database_info[GeoIP データベースの情報を取得する]
geoip_db_avail[GeoIP データベースが使用可能かどうかを調べる]
geoip_db_filename[対応する GeoIP データベースのファイル名を返す]
geoip_db_get_all_info[すべての GeoIP データベース形式についての詳細情報を返す]
geoip_id_by_name[インターネット接続方式を取得する]
geoip_isp_by_name[インターネットサービスプロバイダ (ISP) 名を取得する]
geoip_org_by_name[組織名を取得する]
geoip_record_by_name[GeoIP データベースで見つかった詳細な都市情報を返す]
geoip_region_by_name[国コードおよび地域を取得する]
geoip_region_name_by_code[国コードと地域コードから地域名を返す]
geoip_time_zone_by_country_and_region[国コードと地域コードからタイムゾーンを返す]
get_browser[ユーザーのブラウザの機能を取得する]
get_called_class["静的遅延束縛" のクラス名]
get_cfg_var[PHP 設定オプションの値を取得する]
get_class[オブジェクトのクラス名を返す]
get_class_methods[クラスメソッドの名前を取得する]
get_class_vars[クラスのデフォルトプロパティを取得する]
get_current_user[現在の PHP スクリプトの所有者の名前を取得する]
get_declared_classes[定義済のクラスの名前を配列として返す]
get_declared_interfaces[宣言されている全てのインターフェイスの配列を返す]
get_declared_traits[宣言されているすべてのトレイトの配列を返す]
get_defined_constants[すべての定数の名前とその値を連想配列として返す]
get_defined_functions[定義済みの全ての関数を配列で返す]
get_defined_vars[全ての定義済の変数を配列で返す]
get_extension_funcs[あるモジュールの関数名を配列として返す]
get_headers[HTTP リクエストに対するレスポンス内でサーバーによって送出された全てのヘッダを取得する]
get_html_translation_table[htmlspecialchars() および htmlentities() で使用される変換テーブルを返す]
get_include_path[現在の include_path 設定オプションを取得する]
get_included_files[include または requireで読み込まれたファイルの名前を配列として返す]
get_loaded_extensions[コンパイル/ロードされている全てのモジュールの名前を配列として返す]
get_magic_quotes_gpc[magic_quotes_gpc の現在の設定を得る]
get_magic_quotes_runtime[magic_quotes_runtimeの現在アクティブな設定値を取得する]
get_meta_tags[ファイル上のすべてのメタタグ情報を配列に展開する]
get_object_vars[指定したオブジェクトのプロパティを取得する]
get_parent_class[オブジェクトの親クラスの名前を取得する]
get_resource_type[リソース型を返す]
getallheaders[全てのHTTPリクエストヘッダを取得する]
getcwd[カレントのワーキングディレクトリを取得する]
getdate[日付/時刻情報を取得する]
getenv[環境変数の値を取得する]
gethostbyaddr[指定した IP アドレスに対応するインターネットホスト名を取得する]
gethostbyname[インターネットホスト名に対応するIPv4アドレスを取得する]
gethostbynamel[指定したインターネットホスト名に対応するIPv4アドレスのリストを取得する]
gethostname[ホスト名を取得する]
getimagesize[画像の大きさを取得する]
getimagesizefromstring[画像の大きさを文字列から取得する]
getlastmod[最終更新時刻を取得する]
getmxrr[指定したインターネットホスト名に対応する MX レコードを取得する]
getmygid[PHP スクリプトの所有者の GID を得る]
getmyinode[現在のスクリプトの inode を取得する]
getmypid[PHP のプロセス ID を取得する]
getmyuid[PHP スクリプト所有者のユーザー ID を取得する]
getopt[コマンドライン引数のリストからオプションを取得する]
getprotobyname[プロトコル名のプロトコル番号を得る]
getprotobynumber[プロトコル番号が指すプロトコル名を取得する]
getrandmax[乱数の最大値を取得する]
getrusage[現在のリソース使用状況を取得する]
getservbyname[インターネットサービスおよびプロトコルが関連するポート番号を取得する]
getservbyport[ポートおよびプロトコルに対応するインターネットサービスを得る]
gettext[現在のドメインのメッセージを参照する]
gettimeofday[現在の時間を得る]
gettype[変数の型を取得する]
glob[パターンにマッチするパス名を探す]
gmdate[GMT/UTC の日付/時刻を書式化する]
gmmktime[GMT 日付から Unix タイムスタンプを取得する]
gmp_abs[絶対値]
gmp_add[数値を加算する]
gmp_and[ビット AND を計算する]
gmp_clrbit[ビットをクリアする]
gmp_cmp[数を比較する]
gmp_com[1 の補数を計算する]
gmp_div_q[数値を除算する]
gmp_div_qr[除算を行い、商と余りを得る]
gmp_div_r[除算の余りを計算する]
gmp_divexact[正確な除算]
gmp_fact[階乗]
gmp_gcd[最大公約数を計算する]
gmp_gcdext[最大公約数と乗数を計算する]
gmp_hamdist[ハミング距離]
gmp_init[GMP 数を作成する]
gmp_intval[GMP 数を整数に変換する]
gmp_invert[法による逆]
gmp_jacobi[ヤコビ記号]
gmp_legendre[ルジェンドル記号]
gmp_mod[モジュロ演算]
gmp_mul[数値を乗算する]
gmp_neg[符号を反転する]
gmp_nextprime[次の素数を見つける]
gmp_or[ビット OR を計算する]
gmp_perfect_square[平方数かどうかを調べる]
gmp_popcount[セットされているビットの数]
gmp_pow[べき乗を計算する]
gmp_powm[べき乗とモジュロを計算する]
gmp_prob_prime[数が"おそらく素数"であるかどうかを調べる]
gmp_random[乱数を生成する]
gmp_scan0[0 を探す]
gmp_scan1[1 を探す]
gmp_setbit[ビットを設定する]
gmp_sign[数の符号]
gmp_sqrt[平方根を計算する]
gmp_sqrtrem[余りつきの平方根]
gmp_strval[GMP 数を文字列に変換する]
gmp_sub[数値の減算]
gmp_testbit[ビットが設定されているかどうかを調べる]
gmp_xor[ビット XOR を計算する]
gmstrftime[ロケールの設定に基づいて GMT/UTC 時刻/日付をフォーマットする]
gnupg_adddecryptkey[復号のためのキーを追加する]
gnupg_addencryptkey[暗号化のためのキーを追加する]
gnupg_addsignkey[署名のためのキーを追加する]
gnupg_cleardecryptkeys[事前に復号のために設定されたすべてのキーを削除する]
gnupg_clearencryptkeys[事前に暗号化のために設定されたすべてのキーを削除する]
gnupg_clearsignkeys[事前に署名のために設定されたすべてのキーを削除する]
gnupg_decrypt[指定されたテキストを復号する]
gnupg_decryptverify[指定されたテキストを復号し、検証する]
gnupg_encrypt[指定したテキストを暗号化する]
gnupg_encryptsign[指定したテキストを暗号化し、署名する]
gnupg_export[キーをエクスポートする]
gnupg_geterror[関数が失敗した場合にエラー文字列を返す]
gnupg_getprotocol[すべての操作で現在アクティブなプロトコルを返す]
gnupg_import[キーをインポートする]
gnupg_init[接続を初期化する]
gnupg_keyinfo[指定したパターンに一致するすべてのキーについての情報を配列で返す]
gnupg_setarmor[armor 形式を切り替える]
gnupg_seterrormode[エラー報告モードを設定する]
gnupg_setsignmode[署名方式を設定する]
gnupg_sign[指定したテキストに署名する]
gnupg_verify[署名済みテキストを検証する]
gopher_parsedir[gopher フォーマットのディレクトリエントリを連想配列に変換する]
grapheme_extract[デフォルトの書記素クラスタシーケンスをテキストバッファから取り出す関数。 テキストはUTF-8 でエンコードされている必要があります]
grapheme_stripos[大文字小文字を区別せず、文字列内で最初にあらわれる場所の (書記素単位の)位置を見つける]
grapheme_stristr[大文字小文字を区別せず、haystack 文字列の中で needleが最初に登場した場所以降の部分文字列を返す]
grapheme_strlen[書記素単位で文字列の長さを取得する]
grapheme_strpos[文字列内で最初にあらわれる場所の (書記素単位の) 位置を見つける]
grapheme_strripos[大文字小文字を区別せず、文字列内で最後にあらわれる場所の (書記素単位の)位置を見つける]
grapheme_strrpos[文字列内で最後にあらわれる場所の (書記素単位の) 位置を見つける]
grapheme_strstr[haystack 文字列の中で、needleが最初に登場した場所以降の部分文字列を返す]
grapheme_substr[部分文字列を返す]
gupnp_context_get_host_ip[Get the IP address]
gupnp_context_get_port[Get the port]
gupnp_context_get_subscription_timeout[Get the event subscription timeout]
gupnp_context_host_path[Start hosting]
gupnp_context_new[Create a new context]
gupnp_context_set_subscription_timeout[Sets the event subscription timeout]
gupnp_context_timeout_add[Sets a function to be called at regularintervals]
gupnp_context_unhost_path[Stop hosting]
gupnp_control_point_browse_start[Start browsing]
gupnp_control_point_browse_stop[Stop browsing]
gupnp_control_point_callback_set[Set control point callback]
gupnp_control_point_new[Create a new control point]
gupnp_device_action_callback_set[Set device callback function]
gupnp_device_info_get[Get info of root device]
gupnp_device_info_get_service[Get the service with type]
gupnp_root_device_get_available[Check whether root device isavailable]
gupnp_root_device_get_relative_location[Get the relative location of rootdevice.]
gupnp_root_device_new[Create a new root device]
gupnp_root_device_set_available[Set whether or not root_device isavailable]
gupnp_root_device_start[Start main loop]
gupnp_root_device_stop[Stop main loop]
gupnp_service_action_get[Retrieves the specified actionarguments]
gupnp_service_action_return[Return successfully]
gupnp_service_action_return_error[Return error code]
gupnp_service_action_set[Sets the specified action returnvalues]
gupnp_service_freeze_notify[Freeze new notifications]
gupnp_service_info_get[Get full info of service]
gupnp_service_info_get_introspection[Get resource introspection of service]
gupnp_service_introspection_get_state_variable[Returns the state variable data]
gupnp_service_notify[Notifies listening clients]
gupnp_service_proxy_action_get[Send action to the service and getvalue]
gupnp_service_proxy_action_set[Send action to the service and setvalue]
gupnp_service_proxy_add_notify[Sets up callback for variable changenotification]
gupnp_service_proxy_callback_set[Set service proxy callback for signal]
gupnp_service_proxy_get_subscribed[Check whether subscription is valid to theservice]
gupnp_service_proxy_remove_notify[Cancels the variable changenotification]
gupnp_service_proxy_send_action[Send action with multiple parameterssynchronously]
gupnp_service_proxy_set_subscribed[(Un)subscribes to the service.]
gupnp_service_thaw_notify[Sends out any pending notifications andstops queuing of new ones.]
gzclose[開かれたgzファイルへのポインタを閉じる]
gzcompress[文字列を圧縮する]
gzdecode[gzip 圧縮された文字列をデコードする]
gzdeflate[文字列を deflate 圧縮する]
gzencode[gzip 圧縮された文字列を作成する]
gzeof[gz ファイルポインタが EOF かどうか調べる]
gzfile[gzファイル全体を配列に読み込む]
gzgetc[gz ファイルへのポインタから文字を得る]
gzgets[ファイルポインタから 1 行を得る]
gzgetss[gzファイルへのポインタから1行を得て、HTMLタグを取り除く]
gzinflate[deflate圧縮された文字列を解凍する]
gzopen[gz ファイルを開く]
gzpassthru[gzファイルへのポインタから残りのデータ全部を出力する]
gzread[バイナリ対応のgzファイル読み込み]
gzrewind[gz ファイルポインタの示す位置を元に戻す]
gzseek[gz ファイルポインタの位置を移動する]
gztell[gz ファイルポインタの読み込み/書き込み位置を返します]
gzuncompress[圧縮された文字列を解凍する]
gzwrite[バイナリセーフな gz ファイル書き込み]
hash[ハッシュ値 (メッセージダイジェスト) を生成する]
hash_algos[登録されているハッシュアルゴリズムの一覧を返す]
hash_copy[ハッシュコンテキストをコピーする]
hash_file[ファイルの内容から、ハッシュ値を生成する]
hash_final[段階的なハッシュ処理を終了し、出来上がったダイジェストを返す]
hash_hmac[HMAC 方式を使用してハッシュ値を生成する]
hash_hmac_file[HMAC 方式を使用して、指定されたファイルの内容からハッシュ値を生成する]
hash_init[段階的なハッシュコンテキストを初期化する]
hash_pbkdf2[PBKDF2 を使ってパスワードからキーを生成する]
hash_update[アクティブなハッシュコンテキストにデータを投入する]
hash_update_file[アクティブなハッシュコンテキストに、ファイルから データを投入する]
hash_update_stream[アクティブなハッシュコンテキストに、オープンしているストリームからデータを投入する]
header[生の HTTP ヘッダを送信する]
header_register_callback[ヘッダ用の関数を登録する]
header_remove[以前に設定したHTTPヘッダを削除する]
headers_list[送信した (もしくは送信される予定の) レスポンスヘッダの一覧を返す]
headers_sent[ヘッダが既に送信されているかどうかを調べる]
hebrev[論理表記のヘブライ語を物理表記に変換する]
hebrevc[論理表記のヘブライ語を、改行の変換も含めて物理表記に変換する]
hex2bin[16進エンコードされたバイナリ文字列をデコードする]
hexdec[16 進数を 10 進数に変換する]
highlight_file[ファイルの構文ハイライト表示]
highlight_string[文字列の構文ハイライト表示]
html_entity_decode[HTML エンティティを適切な文字に変換する]
htmlentities[適用可能な文字を全て HTML エンティティに変換する]
htmlspecialchars[特殊文字を HTML エンティティに変換する]
htmlspecialchars_decode[特殊な HTML エンティティを文字に戻す]
http_build_cookie[クッキー文字列を作成する]
http_build_query[URL エンコードされたクエリ文字列を生成する]
http_build_str[クエリ文字列を組み立てる]
http_build_url[URL を組み立てる]
http_cache_etag[ETag でキャッシュする]
http_cache_last_modified[最終更新日時でキャッシュする]
http_chunked_decode[chunked-encoded データをデコードする]
http_date[HTTP の RFC に準拠した日付を作成する]
http_deflate[データを圧縮する]
http_get[GET リクエストを実行する]
http_get_request_body[リクエストの本文を文字列として取得する]
http_get_request_body_stream[リクエストの本文をストリームとして取得する]
http_get_request_headers[リクエストヘッダを配列として取得する]
http_head[HEAD リクエストを実行する]
http_inflate[データを展開する]
http_match_etag[ETag を比較する]
http_match_modified[最終更新日時を比較する]
http_match_request_header[任意のヘッダを比較する]
http_negotiate_charset[クライアントが希望している文字セットを選択する]
http_negotiate_content_type[クライアントが希望している content type を選択する]
http_negotiate_language[クライアントが希望している言語を選択する]
http_parse_cookie[HTTP クッキーをパースする]
http_parse_headers[HTTP ヘッダをパースする]
http_parse_message[HTTP メッセージをパースする]
http_parse_params[パラメータリストをパースする]
http_persistent_handles_clean[持続ハンドルを消去する]
http_persistent_handles_count[持続ハンドルの状況]
http_persistent_handles_ident[持続ハンドルの ident を取得/設定する]
http_post_data[エンコードされたデータを使用して POST リクエストを実行する]
http_post_fields[エンコードされる前のデータを使用して POST リクエストを実行する]
http_put_data[データを使用して PUT リクエストを実行する]
http_put_file[ファイルを使用して PUT リクエストを実行する]
http_put_stream[ストリームを使用して PUT リクエストを実行する]
http_redirect[HTTP リダイレクトを発行する]
http_request[独自のリクエストを実行する]
http_request_body_encode[リクエスト本文をエンコードする]
http_request_method_exists[リクエストメソッドが存在するかどうかを調べる]
http_request_method_name[リクエストメソッド名を取得する]
http_request_method_register[リクエストメソッドを登録する]
http_request_method_unregister[リクエストメソッドの登録を解除する]
http_response_code[HTTP レスポンスコードを取得または設定]
http_send_content_disposition[Content-Disposition を送信する]
http_send_content_type[Content-Type を送信する]
http_send_data[任意のデータを送信する]
http_send_file[ファイルを送信する]
http_send_last_modified[Last-Modified を送信する]
http_send_status[HTTP レスポンスステータスを送信する]
http_send_stream[ストリームを送信する]
http_support[組み込みの HTTP サポートを調べる]
http_throttle[HTTP 抑止処理]
hw_Array2Objrec[オブジェクト配列からオブジェクトレコードに属性を変換する]
hw_ChildrenObj[子のオブジェクトレコード]
hw_Children[子のオブジェクト ID]
hw_Close[Hyperwave 接続を閉じる]
hw_Connect[接続をオープンする]
hw_Deleteobject[オブジェクトを削除する]
hw_DocByAnchorObj[アンカーが指すオブジェクトレコード]
hw_DocByAnchor[アンカーに属するオブジェクトのオブジェクト ID]
hw_Document_Attributes[hw_document のオブジェクトレコード]
hw_Document_BodyTag[hw_document の BODY タグ]
hw_Document_Content[hw_document の内容を返す]
hw_Document_SetContent[hw_document の内容を設定/置換する]
hw_Document_Size[hw_document のサイズ]
hw_EditText[テキストドキュメントを取得する]
hw_ErrorMsg[エラーメッセージを返す]
hw_Error[エラー番号]
hw_Free_Document[hw_document を解放する]
hw_GetAnchorsObj[ドキュメントのアンカーのオブジェクトレコード]
hw_GetAnchors[ドキュメントのアンカーのオブジェクト ID]
hw_GetAndLock[オブジェクトレコードを返しおよびオブジェクトをロックする]
hw_GetChildCollObj[子のコレクションのオブジェクトレコード]
hw_GetChildColl[子のコレクションのオブジェクト ID]
hw_GetChildDocCollObj[コレクションの子ドキュメントのオブジェクトレコード]
hw_GetChildDocColl[コレクションの子ドキュメントのオブジェクト ID]
hw_GetObjectByQueryCollObj[コレクションのオブジェクトを検索する]
hw_GetObjectByQueryColl[コレクションのオブジェクトを検索する]
hw_GetObjectByQueryObj[オブジェクトを検索する]
hw_GetObjectByQuery[オブジェクトを検索する]
hw_GetObject[オブジェクトレコード]
hw_GetParentsObj[親のオブジェクトレコード]
hw_GetParents[親のオブジェクト ID]
hw_GetRemote[リモートドキュメントを得る]
hw_GetSrcByDestObj[オブジェクトを指すアンカーを返す]
hw_GetText[テキストドキュメントを取得する]
hw_Identify[ユーザーとして認証する]
hw_InCollections[コレクションにオブジェクト ID があるかどうかを確認する]
hw_Info[接続に関する情報]
hw_InsColl[コレクションを挿入する]
hw_InsDoc[ドキュメントを挿入する]
hw_InsertDocument[ドキュメントをアップロードする]
hw_InsertObject[オブジェクトレコードを挿入する]
hw_Modifyobject[オブジェクトレコードを修正する]
hw_New_Document[新しいドキュメントを作成する]
hw_Output_Document[hw_document を出力する]
hw_PipeDocument[ドキュメントを取得する]
hw_Root[ルートオブジェクト ID]
hw_Unlock[オブジェクトをアンロックする]
hw_Who[現在ログイン中のユーザーのリスト]
hw_api::checkin[オブジェクトをチェックインする]
hw_api::checkout[オブジェクトをチェックアウトする]
hw_api::children[オブジェクトの子を返す]
hw_api::content[オブジェクトのコンテンツを返す]
hw_api::copy[物理的にコピーする]
hw_api::dbstat[データベースサーバーの統計情報を返す]
hw_api::dcstat[文書キャッシュサーバーの統計情報を返す]
hw_api::dstanchors[すべての対象アンカーの一覧を返す]
hw_api::dstofsrcanchor[ソースアンカーの対象を返す]
hw_api::find[オブジェクトを検索する]
hw_api::ftstat[フルテキストサーバーの統計情報を返す]
hw_api::hwstat[Hyperwave サーバーについての統計情報を返す]
hw_api::identify[Hyperwave サーバーにログインする]
hw_api::info[サーバー設定についての情報を返す]
hw_api::insert[新しいオブジェクトを挿入する]
hw_api::insertanchor[アンカー型の新しいオブジェクトを挿入する]
hw_api::insertcollection[コレクション型の新しいオブジェクトを挿入する]
hw_api::insertdocument[文書型の新しいオブジェクトを挿入する]
hw_api::link[オブジェクトへのリンクを作成する]
hw_api::lock[オブジェクトをロックする]
hw_api::move[コレクション間でオブジェクトを移動する]
hw_api::object[属性の情報を取得する]
hw_api::objectbyanchor[アンカーが所属しているオブジェクトを返す]
hw_api::parents[オブジェクトの親を返す]
hw_api::remove[オブジェクトを削除する]
hw_api::replace[オブジェクトを置き換える]
hw_api::setcommittedversion[最後のバージョン以外のバージョンをコミットする]
hw_api::srcanchors[ソースアンカーの一覧を返す]
hw_api::srcsofdst[対象オブジェクトのソースを返す]
hw_api::unlock[オブジェクトのロックを解除する]
hw_api::user[自分自身のユーザーオブジェクトを返す]
hw_api::userlist[ログイン中の全ユーザーの一覧を返す]
hw_api_attribute::key[属性のキーを返す]
hw_api_attribute::langdepvalue[指定した言語の値を返す]
hw_api_attribute::value[属性の値を返す]
hw_api_attribute::values[属性のすべての値を返す]
hw_api_content::mimetype[mimetype を返す]
hw_api_content::read[コンテンツを読み込む]
hw_api_error::count[原因の数を返す]
hw_api_error::reason[エラーの原因を返す]
hw_api_object::assign[オブジェクトを複製する]
hw_api_object::attreditable[属性が編集可能かどうかを調べる]
hw_api_object::count[属性の数を返す]
hw_api_object::insert[新しい属性を挿入する]
hw_api_object::remove[属性を削除する]
hw_api_object::title[title 属性を返す]
hw_api_object::value[属性の値を返す]
hw_api_reason::description[原因の説明を返す]
hw_api_reason::type[原因の型を返す]
hw_changeobject[オブジェクトの属性を変更する(古い関数)]
hw_connection_info[Hyperwave サーバーへの接続に関する情報を出力する]
hw_cp[オブジェクトをコピーする]
hw_dummy[Hyperwave ダミー関数]
hw_getrellink[rootid に相対的な source から dest へのリンクを得る]
hw_getremotechildren[リモートドキュメントの子を得る]
hw_getusername[現在ログインしているユーザーの名前]
hw_insertanchors[テキストにアンカーのみを挿入する]
hw_mapid[グローバル ID を仮想的なローカル ID に割りつける]
hw_mv[オブジェクトを移動する]
hw_objrec2array[属性をオブジェクトレコードからオブジェクト配列に変換する]
hw_pConnect[持続的データベース接続を作成する]
hw_setlinkroot[計算されたリンクの ID を設定する]
hw_stat[ステータス文字列を返す]
hwapi_attribute_new[hw_api_attribute クラスのインスタンスを作成する]
hwapi_content_new[hw_api_content クラスの新しいインスタンスを作成する]
hwapi_hgcsp[hw_api クラスのオブジェクトを返す]
hwapi_object_new[hwapi_object_new クラスの新しいインスタンスを作成する]
hypot[直角三角形の斜辺の長さを計算する]
ibase_add_user[セキュリティデータベースにユーザーを追加する]
ibase_affected_rows[直近のクエリで変更された行の数を返す]
ibase_backup[サービスマネージャのバックアップタスクを起動し、すぐに結果を返す]
ibase_blob_add[生成された blob にデータを追加する]
ibase_blob_cancel[blob の生成を取り消す]
ibase_blob_close[blob を閉じる]
ibase_blob_create[データを追加するために blob を生成する]
ibase_blob_echo[ブラウザに blob の内容を出力する]
ibase_blob_get[オープンした blob から len バイト分のデータを取得する]
ibase_blob_import[blob を生成し、ファイルをコピーし、閉じる]
ibase_blob_info[blob の長さと他の便利な情報を返す]
ibase_blob_open[データの一部を取得するために blob をオープンする]
ibase_close[InterBase データベースへの接続を閉じる]
ibase_commit[トランザクションをコミットする]
ibase_commit_ret[トランザクションを閉じずにコミットする]
ibase_connect[データベースへの接続をオープンする]
ibase_db_info[データベースについての統計情報を要求する]
ibase_delete_user[セキュリティデータベースからユーザーを削除する]
ibase_drop_db[データベースを削除する]
ibase_errcode[エラーコードを返す]
ibase_errmsg[エラーメッセージを返す]
ibase_execute[準備されたクエリを実行する]
ibase_fetch_assoc[クエリの結果から、行を連想配列として取得する]
ibase_fetch_object[InterBase データベースからオブジェクトを得る]
ibase_fetch_row[InterBase データベースから 1 行分の結果を取得する]
ibase_field_info[フィールドに関する情報を得る]
ibase_free_event_handler[登録済みのイベントハンドラをキャンセルする]
ibase_free_query[プリペアドクエリにより確保されたメモリを解放する]
ibase_free_result[結果セットを解放する]
ibase_gen_id[指定した名前のジェネレータをひとつ加算し、その新しい値を返す]
ibase_maintain_db[データベースサーバーでメンテナンスコマンドを実行する]
ibase_modify_user[セキュリティデータベースのユーザーを変更する]
ibase_name_result[結果セットに名前を割り当てる]
ibase_num_fields[結果セットにおけるフィールド数を得る]
ibase_num_params[プリペアドクエリのパラメータ数を返す]
ibase_param_info[プリペアドクエリのパラメータに関する情報を返す]
ibase_pconnect[InterBase データベースへの持続的接続をオープンする]
ibase_prepare[後でパラメータのバインド及び実行を行うためにクエリを準備する]
ibase_query[InterBase データベースでクエリを実行する]
ibase_restore[サービスマネージャのリストアタスクを起動し、すぐに結果を返す]
ibase_rollback[トランザクションをロールバックする]
ibase_rollback_ret[トランザクションを閉じずにロールバックする]
ibase_server_info[データベースサーバーについての情報を要求する]
ibase_service_attach[サービスマネージャに接続する]
ibase_service_detach[サービスマネージャとの接続を切断する]
ibase_set_event_handler[イベントが発生した際にコールされるコールバック関数を登録する]
ibase_timefmt[クエリから返される timestamp、data、time型カラムのフォーマットを設定する]
ibase_trans[トランザクションを開始する]
ibase_wait_event[データベースでイベントが発生するのを待つ]
iconv[文字列を指定した文字エンコーディングに変換する]
iconv_get_encoding[iconv 拡張モジュールの内部設定変数を取得する]
iconv_mime_decode[MIME ヘッダフィールドをデコードする]
iconv_mime_decode_headers[複数の MIME ヘッダフィールドを一度にデコードする]
iconv_mime_encode[MIME ヘッダフィールドを作成する]
iconv_set_encoding[文字エンコーディング変換用の設定を行なう]
iconv_strlen[文字列の文字数を返す]
iconv_strpos[文字列が最初に現れる場所を見つける]
iconv_strrpos[文字列が最後に現れる場所を見つける]
iconv_substr[文字列の一部を切り出す]
id3_get_frame_long_name[ID3v2 フレームの長い名前を取得する]
id3_get_frame_short_name[ID3v2 フレームの短い名前を取得する]
id3_get_genre_id[ジャンルの ID を取得する]
id3_get_genre_list[使用可能なジャンルの一覧を取得する]
id3_get_genre_name[ジャンル ID に対応する名前を取得する]
id3_get_tag[ID3 タグに含まれるすべての情報を取得する]
id3_get_version[ID3 タグのバージョンを取得する]
id3_remove_tag[既存の ID3 タグを削除する]
id3_set_tag[ID3 タグに格納されている情報を更新する]
idate[ローカルな時刻/日付を整数として整形する]
idn_to_ascii[ドメイン名をIDNAのASCII形式に変換する]
idn_to_utf8[IDNAのASCII方式でエンコードされたドメイン名をUnicodeに変換する]
ifx_affected_rows[クエリで変更された行の数を得る]
ifx_blobinfile_mode[全ての select クエリに関するデフォルトの BLOBモードを設定する]
ifx_byteasvarchar[デフォルトのバイトモードを設定する]
ifx_close[Informix 接続を閉じる]
ifx_connect[Informix サーバーへの接続をオープンする]
ifx_copy_blob[指定した BLOB オブジェクトを二重化する]
ifx_create_blob[BLOB オブジェクトを作成する]
ifx_create_char[文字オブジェクトを作成する]
ifx_do[事前に準備された SQL 文を実行する]
ifx_error[直近の Informix コールのエラーコードを返す]
ifx_errormsg[直近の Informix コールのエラーメッセージを返す]
ifx_fetch_row[行を連想配列として取得する]
ifx_fieldproperties[SQL フィールドプロパティのリスト]
ifx_fieldtypes[Informix SQL フィールドのリスト]
ifx_free_blob[BLOB オブジェクトを削除する]
ifx_free_char[文字オブジェクトを削除する]
ifx_free_result[クエリに関するリソースを解放する]
ifx_get_blob[BLOB オブジェクトの内容を返す]
ifx_get_char[文字オブジェクトの内容を返す]
ifx_getsqlca[クエリ実行後、sqlca.sqlerrd(0..5) の値を得る]
ifx_htmltbl_result[クエリ結果の全行を HTML テーブルにフォーマットする]
ifx_nullformat[取得する行のデフォルトの返り値を設定する]
ifx_num_fields[クエリのカラム数を返す]
ifx_num_rows[クエリから既に取得された行の数を数える]
ifx_pconnect[持続的 Informix 接続をオープンする]
ifx_prepare[SQL 文を実行用に準備する]
ifx_query[Informix クエリを送信する]
ifx_textasvarchar[デフォルトのテキストモードを設定する]
ifx_update_blob[BLOB オブジェクトの内容を更新する]
ifx_update_char[文字オブジェクトの内容を更新する]
ifxus_close_slob[SLOB オブジェクトを削除する]
ifxus_create_slob[SLOB オブジェクトを作成し、オープンする]
ifxus_free_slob[SLOB オブジェクトを削除する]
ifxus_open_slob[SLOB オブジェクトをオープンする]
ifxus_read_slob[SLOB オブジェクトから n バイト読みこむ]
ifxus_seek_slob[現在のファイル位置またはシーク位置を返す]
ifxus_tell_slob[現在のファイルまたはシーク位置を返す]
ifxus_write_slob[SLOB オブジェクトに文字列を書きこむ]
ignore_user_abort[クライアントの接続が切断された際にスクリプトの実行を終了するかどうかを設定する]
iis_add_server[新規に仮想 Web サーバーを作成する]
iis_get_dir_security[ディレクトリのセキュリティを取得する]
iis_get_script_map[指定した拡張子に関して仮想ディレクトリにおけるスクリプトマッピングを取得する]
iis_get_server_by_comment[指定したコメントのインスタンス番号を返す]
iis_get_server_by_path[指定したパスのインスタンス番号を返す]
iis_get_server_rights[サーバーの権限を取得する]
iis_get_service_state[サービス ID で指定したサービスの状態を取得する]
iis_remove_server[サーバーインスタンスで指定した仮想 Web サーバーを削除する]
iis_set_app_settings[仮想ディレクトリでのアプリケーションスコープを作成する]
iis_set_dir_security[ディレクトリのセキュリティを設定する]
iis_set_script_map[仮想ディレクトリにスクリプトマッピングを設定する]
iis_set_server_rights[サーバーの権限を設定する]
iis_start_server[仮想 Web サーバーを起動する]
iis_start_service[サービス ID で指定したサービスを起動する]
iis_stop_server[仮想 Web サーバーを停止する]
iis_stop_service[サービス ID で指定したサービスを停止する]
image2wbmp[画像をブラウザあるいはファイルに出力する]
image_type_to_extension[画像形式からファイルの拡張子を取得する]
image_type_to_mime_type[getimagesize, exif_read_data,exif_thumbnail, exif_imagetypeから返される 画像形式のMIMEタイプを取得する]
imagealphablending[イメージのブレンドモードを設定する]
imageantialias[アンチエイリアス機能を使用すべきかどうかを判断する]
imagearc[部分楕円を描画する]
imagechar[水平に文字を描画する]
imagecharup[垂直に文字を描画する]
imagecolorallocate[画像で使用する色を作成する]
imagecolorallocatealpha[画像で使用する色を透過度を指定して作成する]
imagecolorat[ピクセルの色のインデックスを取得する]
imagecolorclosest[指定した色に最も近い色のインデックスを取得する]
imagecolorclosestalpha[指定した色+アルファ値に最も近い色のインデックスを取得する]
imagecolorclosesthwb[色合い、白、黒を有する色のインデックスを得る]
imagecolordeallocate[イメージの色リソースを開放する]
imagecolorexact[指定した色のインデックスを取得する]
imagecolorexactalpha[指定した色+アルファ値のインデックスを取得する]
imagecolormatch[パレットイメージの色を True カラーイメージに近づける]
imagecolorresolve[指定した色または出来るだけ近い色のインデックスを得る]
imagecolorresolvealpha[指定した色+アルファ値または最も近い色のインデックスを取得する]
imagecolorset[指定したパレットインデックスの色を設定する]
imagecolorsforindex[カラーインデックスからカラーを取得する]
imagecolorstotal[画像パレットの色数を検出する]
imagecolortransparent[透明色を定義する]
imageconvolution[div および offset の係数を使用し、3x3の畳み込み配列を適用する]
imagecopy[画像の一部をコピーする]
imagecopymerge[イメージの一部をコピー、マージする]
imagecopymergegray[グレースケールでイメージの一部をコピー、マージする]
imagecopyresampled[再サンプリングを行いイメージの一部をコピー、伸縮する]
imagecopyresized[画像の一部をコピーしサイズを変更する]
imagecreate[パレットを使用する新規画像を作成する]
imagecreatefromgd2[GD2 ファイルまたは URL から新規イメージを生成する]
imagecreatefromgd2part[GD2 ファイルまたは URL の指定した部分から新規イメージを生成する]
imagecreatefromgd[GD ファイルまたは URL から新規イメージを生成する]
imagecreatefromgif[新しい画像をファイルあるいは URL から作成する]
imagecreatefromjpeg[新しい画像をファイルあるいは URL から作成する]
imagecreatefrompng[新しい画像をファイルあるいは URL から作成する]
imagecreatefromstring[文字列の中のイメージストリームから新規イメージを作成する]
imagecreatefromwbmp[新しい画像をファイルあるいは URL から作成する]
imagecreatefromxbm[新しい画像をファイルあるいは URL から作成する]
imagecreatefromxpm[新しい画像をファイルあるいは URL から作成する]
imagecreatetruecolor[TrueColor イメージを新規に作成する]
imagedashedline[破線を描画する]
imagedestroy[画像を破棄する]
imageellipse[楕円を描画する]
imagefill[塗り潰す]
imagefilledarc[楕円弧を描画し、塗りつぶす]
imagefilledellipse[塗りつぶされた楕円を描画する]
imagefilledpolygon[塗りつぶした多角形を描画する]
imagefilledrectangle[塗りつぶした矩形を描画する]
imagefilltoborder[特定色で塗りつぶす]
imagefilter[画像にフィルタを適用する]
imagefontheight[フォントの高さを取得する]
imagefontwidth[フォントの幅を取得する]
imageftbbox[freetype2 によるフォントを用いたテキストを囲む箱を取得する]
imagefttext[FreeType 2 によるフォントを用いてイメージにテキストを描画する]
imagegammacorrect[GD イメージにガンマ補正を適用する]
imagegd2[GD2 イメージをブラウザまたはファイルに出力する]
imagegd[GD イメージをブラウザまたはファイルに出力する]
imagegif[画像をブラウザあるいはファイルに出力する]
imagegrabscreen[画面全体をキャプチャする]
imagegrabwindow[ウィンドウをキャプチャする]
imageinterlace[インターレースを有効もしくは無効にする]
imageistruecolor[画像が truecolor かどうか調べる]
imagejpeg[画像をブラウザあるいはファイルに出力する]
imagelayereffect[アルファブレンディングフラグを設定し、 libgdにバンドルされているレイヤ効果を使用する]
imageline[直線を描画する]
imageloadfont[新しいフォントを読み込む]
imagepalettecopy[あるイメージから他のイメージにパレットをコピーする]
imagepng[PNG イメージをブラウザまたはファイルに出力する]
imagepolygon[多角形を描画する]
imagepsbbox[PostScript Type1フォントを用いてテキスト矩形のバウンディングボックスを指定する]
imagepsencodefont[フォントの文字エンコードベクトルを変更する]
imagepsextendfont[フォントを展開または圧縮する]
imagepsfreefont[PostScript Type 1 フォント用メモリを解放する]
imagepsloadfont[ファイルから PostScript Type 1 フォントをロードする]
imagepsslantfont[フォントを傾ける]
imagepstext[PostScript Type1 フォントを用いて画像の上に文字列を描く]
imagerectangle[矩形を描画する]
imagerotate[指定された角度で画像を回転する]
imagesavealpha[PNG 画像を保存する際に（単一色の透過設定ではない）完全なアルファチャネル情報を保存するフラグを設定する]
imagesetbrush[線の描画用にブラシイメージを設定する]
imagesetpixel[点を生成する]
imagesetstyle[線描画用のスタイルを設定する]
imagesetthickness[線描画用の線幅を設定する]
imagesettile[塗りつぶし用のイメージを設定する]
imagestring[文字列を水平に描画する]
imagestringup[文字列を垂直に描画する]
imagesx[画像の幅を取得する]
imagesy[画像の高さを取得する]
imagetruecolortopalette[TrueColor イメージをパレットイメージに変換する]
imagettfbbox[TypeType フォントを使用したテキストの bounding boxを生成する]
imagettftext[TrueType フォントを使用してテキストを画像に書き込む]
imagetypes[この PHP がサポートしている画像形式を返す]
imagewbmp[画像をブラウザあるいはファイルに出力する]
imagexbm[XBM 画像をブラウザあるいはファイルに出力する]
imap_8bit[8 ビット文字列を quoted-printable 文字列に変換する]
imap_alerts[発生した IMAP 警告メッセージを返す]
imap_append[指定されたメールボックスに文字列メッセージを追加する]
imap_base64[BASE64 でエンコードされたテキストをデコードする]
imap_binary[8 ビット文字列を base64 文字列に変換する]
imap_body[メッセージ本文を読む]
imap_bodystruct[指定したメッセージの指定した body セクションの構造を読み込む]
imap_check[現在のメールボックスをチェックする]
imap_clearflag_full[メッセージのフラグをクリアする]
imap_close[IMAP ストリームをクローズする]
imap_createmailbox[新しいメールボックスを作る]
imap_delete[現在のメールボックスから削除するメッセージに印を付ける]
imap_deletemailbox[メールボックスを削除する]
imap_errors[発生したすべての IMAP エラーを返す]
imap_expunge[削除用にマークされたすべてのメッセージを削除する]
imap_fetch_overview[指定したメッセージのヘッダ情報の概要を読む]
imap_fetchbody[メッセージ本文中の特定のセクションを取り出す]
imap_fetchheader[メッセージのヘッダを返す]
imap_fetchmime[メッセージの特定のセクションに対する MIME ヘッダを取り出します]
imap_fetchstructure[特定のメッセージの構造を読み込む]
imap_gc[IMAP キャッシュをクリアする]
imap_get_quota[クオータレベルの設定、メールボックス毎の使用状況を取得する]
imap_get_quotaroot[ユーザー単位のクォータ設定を取得する]
imap_getacl[与えられたメールボックスの ACL を取得する]
imap_getmailboxes[メールボックスのリストを読み込み、各ボックスに関する詳細な情報を返す]
imap_getsubscribed[購読中の全メールボックスの一覧を取得する]
imap_headerinfo[メッセージヘッダを読み込む]
imap_headers[メールボックス内のすべてのメッセージのヘッダを返す]
imap_last_error[ページリクエスト時に生じた直近の IMAP エラーを返す]
imap_list[メールボックスのリストを読み込む]
imap_listscan[指定したテキストにマッチするメールボックスの一覧を返す]
imap_lsub[購読しているすべてのメールボックスの一覧を得る]
imap_mail[e-mail メッセージを送信する]
imap_mail_compose[指定したエンベロープおよびボディセクションに基づいて MIMEメッセージを作成する]
imap_mail_copy[指定されたメッセージをメールボックスにコピーする]
imap_mail_move[指定されたメッセージをメールボックスに移動する]
imap_mailboxmsginfo[現在のメールボックスに関する情報を得る]
imap_mime_header_decode[MIME ヘッダ要素をデコードする]
imap_msgno[指定した UID のメッセージ番号を返す]
imap_num_msg[現在のメールボックスのメッセージ数を取得する]
imap_num_recent[現在のメールボックスにある新規メッセージ数を取得する]
imap_open[メールボックスへの IMAPストリームをオープンする]
imap_ping[IMAP ストリームがアクティブかどうかを調べる]
imap_qprint[quoted-printable 文字列を 8 ビット文字列に変換する]
imap_renamemailbox[メールボックスの名前を変更する]
imap_reopen[新規メールボックスへの IMAPストリームを再度オープンする]
imap_rfc822_parse_adrlist[アドレス文字列を解釈します]
imap_rfc822_parse_headers[文字列からメールヘッダを解釈する]
imap_rfc822_write_address[指定したメールボックス、ホスト、個人情報を、電子メールアドレスとして適当な形式にして返す]
imap_savebody[指定した本文部をファイルに保存する]
imap_search[指定した検索条件にマッチするメッセージを配列として返す]
imap_set_quota[指定したメールボックスにクォータを設定する]
imap_setacl[指定したメールボックスの ACL を設定する]
imap_setflag_full[メッセージにフラグをセットする]
imap_sort[メッセージヘッダの配列をソートする]
imap_status[現在のメールボックス以外のメールボックスのステータス情報を返す]
imap_subscribe[メールボックスを購読する]
imap_thread[スレッド化したメッセージのツリーを返す]
imap_timeout[imap タイムアウトを設定あるいは取得する]
imap_uid[指定したメッセージシーケンス番号の UID を返す]
imap_undelete[削除マークがついているメッセージのマークをはずす]
imap_unsubscribe[メールボックスの購読をやめる]
imap_utf7_decode[修正版 UTF-7 エンコードされた文字列をデコードする]
imap_utf7_encode[ISO-8859-1 文字列を修正版 UTF-7 テキストに変換する]
imap_utf8[MIME エンコードされたテキストを UTF-8 に変換する]
implode[配列要素を文字列により連結する]
import_request_variables[GET/POST/Cookie 変数をグローバルスコープにインポートする]
in_array[配列に値があるかチェックする]
inclued_get_data[inclued データを取得する]
inet_ntop[パックされたインターネットアドレスを、人間が読める形式に変換する]
inet_pton[人間が読める形式の IP アドレスを、パックされた in_addr形式に変換する]
ingres_autocommit[autocommit をオンまたはオフに切替える]
ingres_autocommit_state[接続が autocommit を使っているかどうかを調べる]
ingres_charset[文字セットを返す]
ingres_close[Ingres データベース接続を閉じる]
ingres_commit[トランザクションをコミットする]
ingres_connect[Ingres データベースへの接続をオープンする]
ingres_cursor[指定した結果リソースのカーソル名を取得する]
ingres_errno[直近に発生した ingres エラー番号を取得する]
ingres_error[直近に発生したエラーのエラーメッセージを取得する]
ingres_errsqlstate[直近に発生した SQLSTATE エラーコードを取得する]
ingres_escape_string[クエリで使うために特殊文字をエスケープする]
ingres_execute[プリペアドクエリを実行する]
ingres_fetch_array[1 行分の結果を配列に取得する]
ingres_fetch_assoc[1 行分の結果を連想配列に取得する]
ingres_fetch_object[1 行分の結果をオブジェクトとして取得する]
ingres_fetch_proc_return[プロシージャコールからの返り値を取得する]
ingres_fetch_row[1 行分の結果を数値添字配列として取得する]
ingres_field_length[フィールド長を得る]
ingres_field_name[クエリ結果においてフィールド名を得る]
ingres_field_nullable[フィールドに NULL 値を設定可能かどうか調べる]
ingres_field_precision[フィールドの精度を得る]
ingres_field_scale[フィールドのスケールを得る]
ingres_field_type[クエリ結果においてフィールドの型を得る]
ingres_free_result[結果 ID に関連づけられたリソースを解放する]
ingres_next_error[次の Ingres エラーを取得する]
ingres_num_fields[直近のクエリにより返されたフィールドの数を得る]
ingres_num_rows[クエリが変更したり返したりしたレコードの数を取得する]
ingres_pconnect[Ingres データベースへの持続的接続をオープンする]
ingres_prepare[後で実行するためのクエリを準備する]
ingres_query[Ingres に SQL クエリを送信する]
ingres_result_seek[データを取得する前に行の位置を設定する]
ingres_rollback[トランザクションをロールバックする]
ingres_set_environment[環境を設定して出力オプションを制御する]
ingres_unbuffered_query[未バッファ SQL クエリを Ingres に送信する]
ini_get[設定オプションの値を得る]
ini_get_all[すべての設定オプションを得る]
ini_restore[設定オプションの値を元に戻す]
ini_set[設定オプションの値を設定する]
inotify_add_watch[初期化済みの inotify インスタンスに監視対象を追加する]
inotify_init[inotify インスタンスを初期化する]
inotify_queue_len[待機中のイベントがある場合に正の数を返す]
inotify_read[inotify インスタンスからイベントを読み込む]
inotify_rm_watch[既存の監視を inotify インスタンスから削除する]
interface_exists[インターフェイスが宣言されているかどうかを確認する]
intl_error_name[指定したエラーコードに対応する名前を取得する]
intl_get_error_code[直近のエラーコードを取得する]
intl_get_error_message[直近のエラーの説明を取得する]
intl_is_failure[指定したエラーコードが失敗を表すかどうかを調べる]
intval[変数の整数としての値を取得する]
ip2long[ドット表記の (IPv4) IP アドレスを、適切なアドレスに変換する]
iptcembed[バイナリ IPTC データを JPEG イメージに埋めこむ]
iptcparse[バイナリの IPTC ブロックのタグをパースする]
is_a[オブジェクトがこのクラスのものであるか、このクラスをその親クラスのひとつとしているかどうかを調べる]
is_array[変数が配列かどうかを検査する]
is_bool[変数が boolean であるかを調べる]
is_callable[引数が、関数としてコール可能な構造であるかどうかを調べる]
is_dir[ファイルがディレクトリかどうかを調べる]
is_executable[ファイルが実行可能かどうかを調べる]
is_file[通常ファイルかどうかを調べる]
is_finite[値が有限の数値であるかどうかを判定する]
is_float[変数の型が float かどうか調べる]
is_infinite[値が無限大であるかどうかを判定する]
is_int[変数が整数型かどうかを検査する]
is_link[ファイルがシンボリックリンクかどうかを調べる]
is_nan[値が数値でないかどうかを判定する]
is_null[変数が NULL かどうか調べる]
is_numeric[変数が数字または数値形式の文字列であるかを調べる]
is_object[変数がオブジェクトかどうかを検査する]
is_readable[ファイルが存在し、読み込み可能であるかどうかを知る]
is_resource[変数がリソースかどうかを調べる]
is_scalar[変数がスカラかどうかを調べる]
is_soap_fault[SOAP コールが失敗したかどうかを調べる]
is_string[変数の型が文字列かどうかを調べる]
is_subclass_of[あるオブジェクトが指定したクラスのサブクラスに属するかどうかを調べる]
is_tainted[文字列が汚染されているかどうかを調べる]
is_uploaded_file[HTTP POST でアップロードされたファイルかどうかを調べる]
is_writable[ファイルが書き込み可能かどうかを調べる]
isset[変数がセットされていること、そして NULL でないことを検査する]
iterator_apply[ユーザー関数をイテレータのすべての要素でコールする]
iterator_count[イテレータにある要素をカウントする]
iterator_to_array[イテレータを配列にコピーする]
java_last_exception_clear[直近の例外をクリアする]
java_last_exception_get[直近の Java 例外を取得する]
jdtojewish[ユリウス積算日をユダヤ暦に変換する]
jdtounix[ユリウス歴を Unix タイムスタンプに変換する]
jpeg2wbmp[JPEG イメージファイルから WBMP イメージファイルに変換する]
json_decode[JSON 文字列をデコードする]
json_encode[値を JSON 形式にして返す]
json_last_error[直近に発生したエラーを返す]
judy_type[Return the type of a Judy array]
judy_version[Return or print the current PHP Judyversion]
kadm5_chpass_principal[プリンシパルのパスワードを変更する]
kadm5_create_principal[指定したパラメータで、kerberos のプリンシパルを作成する]
kadm5_delete_principal[kerberos プリンシパルを削除する]
kadm5_destroy[管理サーバーへの接続を閉じ、関連するすべてのリソースを開放する]
kadm5_flush[Kerberos データベースに対するすべての変更を取り消す]
kadm5_get_policies[Kerberos データベースから、すべてのポリシーを取得する]
kadm5_get_principal[Kerberos データベースから、プリンシパルのエントリを取得する]
kadm5_get_principals[Kerberos データベースから、すべてのプリンシパルを取得する]
kadm5_init_with_password[KADM5ライブラリへの接続をオープンし、必要なステータス情報を初期化する]
kadm5_modify_principal[kerberos プリンシパルを、指定したパラメータで変更する]
key[配列からキーを取り出す]
krsort[配列をキーで逆順にソートする]
ksort[配列をキーでソートする]
lcfirst[文字列の最初の文字を小文字にする]
lcg_value[複合線形合同法]
lchgrp[シンボリックリンクのグループ所有権を変更する]
lchown[シンボリックリンクの所有者を変更する]
ldap_8859_to_t61[8859 文字を t61 文字に変換する]
ldap_add[LDAP ディレクトリにエントリを付加する]
ldap_bind[LDAP ディレクトリにバインドする]
ldap_compare[指定した DN のエントリで見付かった属性の値を比較する]
ldap_connect[LDAP サーバーへ接続する]
ldap_control_paged_result[LDAP ページネーション制御情報を送信する]
ldap_control_paged_result_response[LDAP ページネーションクッキーを取得する]
ldap_count_entries[検索結果のエントリ数を数える]
ldap_delete[ディレクトリからエントリを削除する]
ldap_dn2ufn[DN をユーザーに分かりやすい名前のフォーマットに変換する]
ldap_err2str[LDAP のエラー番号をエラーメッセージ文字列に変換する]
ldap_errno[直近の LDAP コマンドの LDAP エラー番号を返す]
ldap_error[直近の LDAP コマンドの LDAP エラーメッセージを返す]
ldap_explode_dn[DN を構成要素ごとに分割する]
ldap_first_attribute[最初の属性を返す]
ldap_first_entry[最初の結果 ID を返す]
ldap_first_reference[最初のリファレンスを返す]
ldap_free_result[結果メモリを開放する]
ldap_get_attributes[検索結果エントリから属性を得る]
ldap_get_dn[結果エントリから DN を得る]
ldap_get_entries[全ての結果エントリを得る]
ldap_get_option[指定したオプションの現在の値を得る]
ldap_get_values[結果エントリから全ての値を得る]
ldap_get_values_len[結果エントリから全てのバイナリ値を得る]
ldap_list[単一階層の検索を行う]
ldap_mod_add[現在の属性に属性を追加する]
ldap_mod_del[現在の属性から属性を削除する]
ldap_mod_replace[属性を新規の値に置換する]
ldap_modify[LDAP エントリを修正する]
ldap_next_attribute[結果における次の属性を得る]
ldap_next_entry[次の結果エントリを得る]
ldap_next_reference[次のリファレンスを得る]
ldap_parse_reference[参照エントリから情報を展開する]
ldap_parse_result[結果から情報を展開する]
ldap_read[エントリを読み込む]
ldap_rename[エントリ名を修正する]
ldap_sasl_bind[SASL を使用して LDAP ディレクトリにバインドする]
ldap_search[LDAP ツリーを探索する]
ldap_set_option[指定したオプションの値を設定する]
ldap_set_rebind_proc[参照先を再バインドするためのコールバック関数を設定する]
ldap_sort[LDAP 結果エントリをソートする]
ldap_start_tls[TLS を開始する]
ldap_t61_to_8859[t61 文字を 8859 文字に変換する]
ldap_unbind[LDAP ディレクトリへのバインドを解除する]
levenshtein[二つの文字列のレーベンシュタイン距離を計算する]
libxml_clear_errors[libxmlエラーハンドラをクリアする]
libxml_disable_entity_loader[外部エンティティの読み込み機能を無効にする]
libxml_get_errors[エラー配列を取得する]
libxml_get_last_error[libxmlから直近のエラーを取得する]
libxml_set_external_entity_loader[デフォルトの外部エンティティローダーを変更する]
libxml_set_streams_context[次のlibxmlドキュメントの読込／書きこみのためにストリームコンテキストを設定する]
libxml_use_internal_errors[libxmlエラーを無効にし、ユーザーが必要に応じてエラー情報を取得できるようにする]
link[ハードリンクを作成する]
linkinfo[リンクに関する情報を取得する]
list[配列と同様の形式で、複数の変数への代入を行う]
localeconv[数値に関するフォーマット情報を得る]
localtime[ローカルタイムを得る]
log10[底が 10 の対数]
log1p[値がゼロに近い時にでも精度を保つ方法で計算した log(1 + number)を返す]
log[自然対数]
long2ip[(IPv4)インターネットアドレスをインターネット標準ドット表記に変換する]
lstat[ファイルあるいはシンボリックリンクの情報を取得する]
ltrim[文字列の最初から空白 (もしくはその他の文字) を取り除く]
lzf_compress[LZF 圧縮を行う]
lzf_decompress[LZF 圧縮を伸長する]
lzf_optimized_for[LZF 拡張モジュールの最適化指定を取得する]
m_checkstatus[トランザクションが完了したかどうかを確かめる]
m_completeauthorizations[キューの中の認証済み件数を数え、その ID の配列を返す]
m_connect[MCVE との接続を確立する]
m_connectionerror[接続が失敗した理由をテキストで取得する]
m_deletetrans[MCVE_CONN 構造体から、指定したトランザクションを削除する]
m_destroyconn[接続および MCVE_CONN 構造体を破壊する]
m_destroyengine[IP/SSL 接続に関連付けられたメモリを開放する]
m_getcell[カンマ区切りの応答から、カラム名を指定してセルを取得する]
m_getcellbynum[カンマ区切りの応答から、カラム番号を指定してセルを取得する]
m_getcommadelimited[MCVE が返すデータを、もとのカンマ区切り形式のままで取得する]
m_getheader[カンマ区切りの応答から、カラム名を取得する]
m_initconn[MCVE_CONN 構造体を作成し、初期化する]
m_initengine[IP/SSL 通信のためのクライアントの準備をする]
m_iscommadelimited[応答がカンマ区切りかどうかを調べる]
m_maxconntimeout[API が MCVE への接続を試みる時間の最大値]
m_monitor[MCVE との通信 (データの送受信) を非ブロックモードで行う]
m_numcolumns[カンマ区切りの応答の中のカラム数を返す]
m_numrows[カンマ区切りの応答の中の行数を返す]
m_parsecommadelimited[カンマ区切りの応答をパースし、m_getcell などが動作するようにする]
m_responsekeys[このトランザクションの応答パラメータとして使用することが可能なキーを表す文字列の配列を返す]
m_responseparam[カスタム応答パラメータを取得する]
m_returnstatus[トランザクションが成功したかどうかを確かめる]
m_setblocking[接続モードを、ブロックモードあるいは非ブロックモードに設定する]
m_setdropfile[Drop-File への接続方法を設定する]
m_setip[IP での接続方法を設定する]
m_setssl[SSL での接続方法を設定する]
m_setssl_cafile[サーバー証明書を検証するための SSL CA (CertificateAuthority) ファイルを設定する]
m_setssl_files[サーバーがクライアント証明書による検証を要求している場合に、証明書のキーファイルを設定する]
m_settimeout[(トランザクション単位の) 最大の時間を設定する]
m_sslcert_gen_hash[SSL クライアント証明書の検証のためのハッシュを作成する]
m_transactionssent[送信バッファが空かどうかを確かめる]
m_transinqueue[クライアントキューの中のトランザクション数を返す]
m_transkeyval[トランザクションにキー/値のペアを追加する。transparam()の代替関数]
m_transnew[新しいトランザクションを開始する]
m_transsend[トランザクションを終了し、送信する]
m_uwait[x マイクロ秒だけ待つ]
m_validateidentifier[指定したトランザクションについて、ID の検証を行うかどうか]
m_verifyconnection[接続の検証を行うために PING を行うかどうかを設定する]
m_verifysslcert[サーバーの ssl 証明書を検証するかどうかを設定する]
mail[メールを送信する]
mailparse_determine_best_xfer_encoding[最も適したエンコーディングを取得する]
mailparse_msg_create[mime メールリソースを作成する]
mailparse_msg_extract_part[メッセージセクションを展開/デコードする]
mailparse_msg_extract_part_file[メッセージセクションを展開/デコードする]
mailparse_msg_extract_whole_part_file[ヘッダを含むメッセージセクションを、transfer encodingをデコードせずに展開する]
mailparse_msg_free[MIME リソースを解放する]
mailparse_msg_get_part[MIME メッセージの指定したセクションに関するハンドルを返す]
mailparse_msg_get_part_data[メッセージに関する情報の連想配列を返す]
mailparse_msg_get_structure[指定したメッセージ内の MIME セクション名の配列を返す]
mailparse_msg_parse[データをパースし、バッファに追加する]
mailparse_msg_parse_file[ファイルをパースする]
mailparse_rfc822_parse_addresses[RFC 822 準拠のアドレスをパースする]
mailparse_stream_encode[ソースファイルポインタからストリームデータを取得し、エンコーディングを適用し、出力ファイルポインタに書き込む]
mailparse_uudecode_all[ファイルポインタからデータをスキャンし、uuencodeされたファイルを展開する]
max[最大値を返す]
maxdb_affected_rows[直前の MaxDB の操作で変更された行数を取得する]
maxdb_autocommit[データベースの変更内容の自動コミット機能を有効あるいは無効にする]
maxdb_change_user[指定したデータベース接続のユーザーを変更する]
maxdb_character_set_name[データベース接続のデフォルトの文字セットを返す]
maxdb_close[事前にオープンされたデータベース接続を閉じる]
maxdb_commit[現在のトランザクションをコミットする]
maxdb_connect[MaxDB サーバーへの新しい接続をオープンする]
maxdb_connect_errno[直近の接続コールのエラーコードを返す]
maxdb_connect_error[直近の接続エラーについての説明を文字列で返す]
maxdb_data_seek[結果ポインタを、結果の任意の行に移動する]
maxdb_debug[デバッグ操作を行う]
maxdb_disable_reads_from_master[マスタからの読み込みを無効にする]
maxdb_disable_rpl_parse[RPL のパースを無効にする]
maxdb_dump_debug_info[デバッグ情報をログに出力する]
maxdb_embedded_connect[組み込み MaxDB サーバーへの接続をオープンする]
maxdb_enable_reads_from_master[マスタからの読み込みを有効にする]
maxdb_enable_rpl_parse[RPL のパースを有効にする]
maxdb_errno[直近の関数コールのエラーコードを返す]
maxdb_error[直近のエラーについて説明する文字列を返す]
maxdb_fetch_array[結果の行を連想配列、数値添字配列あるいはその両方で取得する]
maxdb_fetch_assoc[結果の行を連想配列として取得する]
maxdb_fetch_field[結果セットの次のフィールドを返す]
maxdb_fetch_field_direct[単一のフィールドのメタデータを取得する]
maxdb_fetch_fields[結果セット内のフィールドを表すリソースの配列を返す]
maxdb_fetch_lengths[結果セットの現在の行のカラムの長さを返す]
maxdb_fetch_object[結果セットの現在の行をオブジェクトとして返す]
maxdb_fetch_row[結果の行を数値添字の配列として取得する]
maxdb_field_count[直近のクエリのカラム数を返す]
maxdb_field_seek[結果ポインタを、指定したフィールドオフセットに移動する]
maxdb_field_tell[結果ポインタの現在のフィールドオフセットを取得する]
maxdb_free_result[結果に関連付けられたメモリを開放する]
maxdb_get_client_info[MaxDB クライアントのバージョンを文字列で返す]
maxdb_get_client_version[MaxDB クライアントの情報を取得する]
maxdb_get_host_info[使用している接続の型を表す文字列を返す]
maxdb_get_proto_info[使用している MaxDB プロトコルのバージョンを返す]
maxdb_get_server_info[MaxDB サーバーのバージョンを返す]
maxdb_get_server_version[MaxDB サーバーのバージョンを整数値で返す]
maxdb_info[直近に実行したクエリについての情報を取得する]
maxdb_init[MaxDB を初期化し、maxdb_real_connectで使用するリソースを返す]
maxdb_insert_id[直近のクエリで使用した、自動生成 ID を返す]
maxdb_kill[MaxDB サーバーから切断する]
maxdb_master_query[マスタ/スレーブ構成において、クエリをマスタ側で実行することを強制する]
maxdb_more_results[複数クエリの結果の中に結果セットがまだあるかどうかを調べる]
maxdb_multi_query[データベース上でクエリを実行する]
maxdb_next_result[multi_query の、次の結果を準備する]
maxdb_num_fields[結果のフィールド数を取得する]
maxdb_num_rows[結果の行数を取得する]
maxdb_options[オプションを設定する]
maxdb_ping[サーバーとの接続を確認し、接続が確立されていない場合は再接続を試みる]
maxdb_prepare[後で実行するための SQL 文を準備する]
maxdb_query[データベース上でクエリを実行する]
maxdb_real_connect[MaxDB サーバーへの接続をオープンする]
maxdb_real_escape_string[現在の接続の文字セットを考慮したうえで、 SQL文で使用される文字列中の特殊文字をエスケープする]
maxdb_real_query[SQL クエリを実行する]
maxdb_report[内部のレポート関数を有効あるいは無効にする]
maxdb_rollback[現在のトランザクションをロールバックする]
maxdb_rpl_parse_enabled[RPL のパースが有効かどうかを調べる]
maxdb_rpl_probe[RPL を調べる]
maxdb_rpl_query_type[RPL クエリ型を返す]
maxdb_select_db[データベースクエリ用のデフォルトデータベースを選択する]
maxdb_send_query[クエリを送信する]
maxdb_server_end[埋め込みサーバーをシャットダウンする]
maxdb_server_init[埋め込みサーバーを初期化する]
maxdb_sqlstate[直近の MaxDB 操作の SQLSTATE エラーを返します]
maxdb_ssl_set[SSL を使用したセキュアな接続を確立するために使用する]
maxdb_stat[現在のシステム状態を取得する]
maxdb_stmt_affected_rows[直近のステートメントによって変更、削除あるいは挿入された行の数を返す]
maxdb_stmt_bind_param[プリペアドステートメントに、変数をパラメータとしてバインドする]
maxdb_stmt_bind_result[結果を保存するために、変数をプリペアドステートメントにバインドする]
maxdb_stmt_close[プリペアドステートメントを閉じる]
maxdb_stmt_close_long_data[maxdb_stmt_send_long_data() のシーケンスを終了する]
maxdb_stmt_data_seek[ステートメントの結果セットの、任意の行に移動する]
maxdb_stmt_errno[直近のステートメントコール時のエラーコードを返す]
maxdb_stmt_error[直近のステートメントコール時のエラー文字列を返す]
maxdb_stmt_execute[プリペアドクエリを実行する]
maxdb_stmt_fetch[プリペアドステートメントの結果を取得し、バインド変数に格納する]
maxdb_stmt_free_result[指定したステートメントハンドルの結果を保存しているメモリを開放する]
maxdb_stmt_init[ステートメントを初期化し、maxdb_stmt_prepareで使用するリソースを返す]
maxdb_stmt_num_rows[ステートメントの結果セットの行数を返す]
maxdb_stmt_param_count[指定したステートメントのパラメータ数を返す]
maxdb_stmt_prepare[後で実行するための SQL 文を準備する]
maxdb_stmt_reset[プリペアドステートメントをリセットする]
maxdb_stmt_result_metadata[プリペアドステートメントから、結果セットのメタデータを返す]
maxdb_stmt_send_long_data[データを複数ブロックで送信する]
maxdb_stmt_sqlstate[事前のステートメントの捜査からの SQLSTATE エラーを返す]
maxdb_stmt_store_result[プリペアドステートメントから結果を転送する]
maxdb_store_result[直近のクエリから結果セットを転送する]
maxdb_thread_id[現在の接続のスレッド ID を返す]
maxdb_thread_safe[スレッドセーフであるかどうかを返す]
maxdb_use_result[結果セットの取得を開始する]
maxdb_warning_count[指定したリンクの直近のクエリで発生した警告の数を返す]
mb_check_encoding[文字列が、指定したエンコーディングで有効なものかどうかを調べる]
mb_convert_case[文字列に対してケースフォルディングを行う]
mb_convert_encoding[文字エンコーディングを変換する]
mb_convert_kana[カナを("全角かな"、"半角かな"等に)変換する]
mb_convert_variables[変数の文字コードを変換する]
mb_decode_mimeheader[MIME ヘッダフィールドの文字列をデコードする]
mb_decode_numericentity[HTML 数値エンティティを文字にデコードする]
mb_detect_encoding[文字エンコーディングを検出する]
mb_detect_order[文字エンコーディング検出順序を設定あるいは取得する]
mb_encode_mimeheader[MIMEヘッダの文字列をエンコードする]
mb_encode_numericentity[文字を HTML 数値エンティティにエンコードする]
mb_encoding_aliases[既知のエンコーディング・タイプのエイリアスを取得]
mb_ereg[マルチバイト文字列に正規表現マッチを行う]
mb_ereg_match[マルチバイト文字列が正規表現に一致するか調べる]
mb_ereg_replace[マルチバイト文字列に正規表現による置換を行う]
mb_ereg_replace_callback[マルチバイト文字列にコールバック関数を用いた正規表現による置換を行う]
mb_ereg_search[指定したマルチバイト文字列が正規表現に一致するか調べる]
mb_ereg_search_getpos[次の正規表現検索を開始する位置を取得する]
mb_ereg_search_getregs[マルチバイト文字列が正規表現に一致する部分があるか調べる]
mb_ereg_search_init[マルチバイト正規表現検索用の文字列と正規表現を設定する]
mb_ereg_search_pos[指定したマルチバイト文字列が正規表現に一致する部分の位置と長さを返す]
mb_ereg_search_regs[指定したマルチバイト文字列が正規表現に一致する部分を取得する]
mb_ereg_search_setpos[次の正規表現検索を開始する位置を設定する]
mb_eregi[マルチバイト文字列に大文字小文字を区別しない正規表現マッチを行う]
mb_eregi_replace[マルチバイト文字列に大文字小文字を区別せずに正規表現による置換を行う]
mb_get_info[mbstring の内部設定値を取得する]
mb_http_input[HTTP 入力文字エンコーディングを検出する]
mb_http_output[HTTP 出力文字エンコーディングを設定あるいは取得する]
mb_internal_encoding[内部文字エンコーディングを設定あるいは取得する]
mb_language[現在の言語を設定あるいは取得する]
mb_list_encodings[サポートするすべてのエンコーディングの配列を返す]
mb_output_handler[出力バッファ内で文字エンコーディングを変換するコールバック関数]
mb_parse_str[GET/POST/COOKIE データをパースし、グローバル変数を設定する]
mb_preferred_mime_name[MIME 文字設定を文字列で得る]
mb_regex_encoding[現在のマルチバイト正規表現用のエンコーディングを取得または設定する]
mb_regex_set_options[マルチバイト正規表現関数のデフォルトオプションを取得または設定する]
mb_send_mail[エンコード変換を行ってメールを送信する]
mb_split[マルチバイト文字列を正規表現により分割する]
mb_strcut[文字列の一部を得る]
mb_strimwidth[指定した幅で文字列を丸める]
mb_stripos[大文字小文字を区別せず、文字列の中で指定した文字列が最初に現れる位置を探す]
mb_stristr[大文字小文字を区別せず、文字列の中で指定した文字列が最初に現れる位置を探す]
mb_strlen[文字列の長さを得る]
mb_strpos[文字列の中に指定した文字列が最初に現れる位置を見つける]
mb_strrchr[別の文字列の中で、ある文字が最後に現れる場所を見つける]
mb_strrichr[大文字小文字を区別せず、 別の文字列の中である文字が最後に現れる場所を探す]
mb_strripos[大文字小文字を区別せず、文字列の中で指定した文字列が最後に現れる位置を探す]
mb_strrpos[文字列の中に指定した文字列が最後に現れる位置を見つける]
mb_strstr[文字列の中で、指定した文字列が最初に現れる位置を見つける]
mb_strtolower[文字列を小文字にする]
mb_strtoupper[文字列を大文字にする]
mb_strwidth[文字列の幅を返す]
mb_substitute_character[置換文字を設定あるいは取得する]
mb_substr[文字列の一部を得る]
mb_substr_count[部分文字列の出現回数を数える]
mcrypt_cbc[CBC モードでデータを暗号化/復号する]
mcrypt_cfb[CFB モードでデータを暗号化/復号する]
mcrypt_create_iv[乱数ソースから初期化ベクトル(IV)を生成する]
mcrypt_decrypt[指定したパラメータで暗号化されたテキストを復号する]
mcrypt_ecb[非推奨: ECB モードでデータを暗号化/復号する]
mcrypt_enc_get_algorithms_name[オープンされたアルゴリズムの名前を返す]
mcrypt_enc_get_block_size[オープンされたアルゴリズムのブロックサイズを返す]
mcrypt_enc_get_iv_size[オープンされたアルゴリズムの IV の大きさを返す]
mcrypt_enc_get_key_size[オープンされたモードでサポートされる最大キー長を返す]
mcrypt_enc_get_modes_name[オープンされたモードの名前を返す]
mcrypt_enc_get_supported_key_sizes[オープンされたアルゴリズムでサポートされるキー長を配列にして返す]
mcrypt_enc_is_block_algorithm[オープンされたモードの暗号がブロックアルゴリズムであるかどうかを調べる]
mcrypt_enc_is_block_algorithm_mode[オープンされたモードの暗号がブロックモードで動作するかどうかを調べる]
mcrypt_enc_is_block_mode[オープンされたモードがブロック出力を行うかどうかを調べる]
mcrypt_enc_self_test[オープンしたモジュールのセルフテストを実行する]
mcrypt_encrypt[指定したパラメータでプレーンテキストを暗号化する]
mcrypt_generic[データを暗号化する]
mcrypt_generic_deinit[暗号化モジュールを終了する]
mcrypt_generic_end[暗号処理を終了する]
mcrypt_generic_init[暗号化に必要な全てのバッファを初期化する]
mcrypt_get_block_size[指定した暗号のブロックサイズを得る]
mcrypt_get_cipher_name[指定した暗号の名前を得る]
mcrypt_get_iv_size[指定した暗号/モードの組み合わせに属する IV の大きさを返す]
mcrypt_get_key_size[指定した暗号のキーの長さを得る]
mcrypt_list_algorithms[サポートされる全ての暗号を配列として取得する]
mcrypt_list_modes[サポートされる全てのモードの配列を取得する]
mcrypt_module_close[mcrypt モジュールを閉じる]
mcrypt_module_get_algo_block_size[指定したアルゴリズムのブロック長を返す]
mcrypt_module_get_algo_key_size[オープンされたモードでサポートされる最大キー長を返す]
mcrypt_module_get_supported_key_sizes[オープンされたアルゴリズムでサポートされるキーのサイズを配列として返す]
mcrypt_module_is_block_algorithm[指定したアルゴリズムがブロックアルゴリズムであるかを調べる]
mcrypt_module_is_block_algorithm_mode[指定したモジュールがブロックアルゴリズムであるかどうかを返す]
mcrypt_module_is_block_mode[指定したモードがブロック出力を行うかどうかを返す]
mcrypt_module_open[使用するアルゴリズムおよびモードのモジュールをオープンする]
mcrypt_module_self_test[指定したモジュールのセルフテストを実行する]
mcrypt_ofb[OFB モードでデータを暗号化/復号する]
md5[文字列のmd5ハッシュ値を計算する]
md5_file[指定したファイルのMD5ハッシュ値を計算する]
mdecrypt_generic[データを復号する]
memcache_debug[デバッグ出力のオン/オフを切り替える]
memory_get_peak_usage[PHP によって割り当てられたメモリの最大値を返す]
memory_get_usage[PHP に割り当てられたメモリの量を返す]
metaphone[文字列の metaphone キーを計算する]
method_exists[クラスメソッドが存在するかどうかを確認する]
mhash[ハッシュ値を計算する]
mhash_count[利用可能なハッシュ ID の最大値を得る]
mhash_get_block_size[指定したハッシュのブロックサイズを得る]
mhash_get_hash_name[指定したハッシュの名前を得る]
mhash_keygen_s2k[キーを生成する]
microtime[現在の Unix タイムスタンプをマイクロ秒まで返す]
mime_content_type[ファイルの MIME Content-type を検出する (非推奨)]
min[最小値を返す]
ming_keypress[keyPress(char) のアクションフラグを返す]
ming_setcubicthreshold[三次元の閾値を設定する]
ming_setscale[グローバルなスケール要素を設定する]
ming_setswfcompression[SWF 出力の圧縮を設定する]
ming_useconstants[定数プールを使用する]
ming_useswfversion[SWF のバージョンを設定する]
mkdir[ディレクトリを作る]
mktime[日付を Unix のタイムスタンプとして取得する]
money_format[数値を金額文字列にフォーマットする]
move_uploaded_file[アップロードされたファイルを新しい位置に移動する]
mqseries_back[MQSeries MQBACK]
mqseries_begin[MQseries MQBEGIN]
mqseries_close[MQSeries MQCLOSE]
mqseries_cmit[MQSeries MQCMIT]
mqseries_conn[MQSeries MQCONN]
mqseries_connx[MQSeries MQCONNX]
mqseries_disc[MQSeries MQDISC]
mqseries_get[MQSeries MQGET]
mqseries_inq[MQSeries MQINQ]
mqseries_open[MQSeries MQOPEN]
mqseries_put1[MQSeries MQPUT1]
mqseries_put[MQSeries MQPUT]
mqseries_set[MQSeries MQSET]
mqseries_strerror[結果コード (MQRC) に対応するエラーメッセージを返す]
msession_connect[msession サーバーに接続する]
msession_count[セッション数を得る]
msession_create[セッションを作成する]
msession_destroy[セッションを破棄する]
msession_disconnect[msession サーバーへの接続を閉じる]
msession_find[名前と値で、すべてのセッションを検索する]
msession_get[セッションから値を取得する]
msession_get_array[msession 変数の配列を得る]
msession_get_data[データセッションの、構造化されていないデータを取得する]
msession_inc[セッションの値を増加させる]
msession_list[すべてのセッションの一覧を取得する]
msession_listvar[セッションの一覧を変数を使用して取得する]
msession_lock[セッションをロックする]
msession_plugin[msession personalityプラグイン内のエスケープ関数をコールする]
msession_randstr[ランダムな文字列を取得する]
msession_set[セッションに値を設定する]
msession_set_array[セッションに配列の値を設定する]
msession_set_data[データセッションの、構造化されていないデータを設定する]
msession_timeout[セッションの有効期間を設定/取得する]
msession_uniq[ユニークな ID を取得する]
msession_unlock[セッションのロックを解除する]
msg_get_queue[メッセージキューを作成またはそれにアタッチする]
msg_queue_exists[メッセージキューが存在するかどうかを調べる]
msg_receive[メッセージキューからメッセージを受信する]
msg_remove_queue[メッセージキューを破棄する]
msg_send[メッセージキューにメッセージを送信する]
msg_set_queue[メッセージキューデータ構造体の情報を設定する]
msg_stat_queue[メッセージキューデータ構造体の情報を返す]
msql_affected_rows[変更された行の数を返す]
msql_close[mSQL 接続を閉じる]
msql_connect[mSQL 接続を開く]
msql_create_db[mSQL データベースを作成する]
msql_data_seek[行に関する内部ポインタを移動する]
msql_db_query[mSQL クエリを送信する]
msql_drop_db[mSQL データベースを破棄(削除)する]
msql_error[最後の msql コールに関するエラーメッセージを返す]
msql_fetch_array[結果の行を配列として取得する]
msql_fetch_field[フィールド情報を得る]
msql_fetch_object[結果の行をオブジェクトとして取得する]
msql_fetch_row[結果の行を数値配列として取得する]
msql_field_flags[フィールドのフラグを取得する]
msql_field_len[フィールドの長さを取得する]
msql_field_name[結果における指定したフィールドの名前を取得する]
msql_field_seek[フィールドオフセットを設定する]
msql_field_table[フィールドのテーブル名を取得する]
msql_field_type[フィールドの型を取得する]
msql_free_result[結果保持用メモリを開放する]
msql_list_dbs[サーバー上の mSQL データベースのリストを返す]
msql_list_fields[結果フィールドのリストを得る]
msql_list_tables[mSQL データベースにおけるテーブルのリストを得ます]
msql_num_fields[結果におけるフィールドの数を得る]
msql_num_rows[結果における行の数を得る]
msql_pconnect[持続的な mSQL 接続をオープンする]
msql_query[mSQL クエリを送信する]
msql_result[結果のデータを得る]
msql_select_db[mSQL データベースを選択する]
mssql_bind[ストアドプロシージャまたはリモートストアドプロシージャへパラメータを追加する]
mssql_close[MS SQL Server への接続を閉じる]
mssql_connect[MS SQL サーバー接続をオープンする]
mssql_data_seek[内部行ポインタを移動する]
mssql_execute[MS SQL サーバーデータベースでストアドプロシージャを実行する]
mssql_fetch_array[連想配列・数値添字配列・あるいはその両方で結果の行を取得する]
mssql_fetch_assoc[結果の現在行を連想配列として返す]
mssql_fetch_batch[レコードの次のバッチを返す]
mssql_fetch_field[フィールド情報を取得する]
mssql_fetch_object[オブジェクトとして行を取得する]
mssql_fetch_row[配列として行を取得する]
mssql_field_length[フィールド長を得る]
mssql_field_name[フィールド名を得る]
mssql_field_seek[指定したフィールドオフセットに移動する]
mssql_field_type[フィールド型を得る]
mssql_free_result[結果保持用メモリを解放する]
mssql_free_statement[ステートメントのメモリを開放する]
mssql_get_last_message[サーバーの直近のメッセージを返す]
mssql_guid_string[16 バイトバイナリ GUID を文字列に変換する]
mssql_init[ストアドプロシージャまたはリモートのストアドプロシージャを初期化する]
mssql_min_error_severity[最小のエラー深刻度を設定する]
mssql_min_message_severity[最小のメッセージ深刻度を設定する]
mssql_next_result[次の結果に内部結果ポインタを移動する]
mssql_num_fields[結果のフィールド数を得る]
mssql_num_rows[結果の行数を得る]
mssql_pconnect[持続的 MS SQL 接続をオープンする]
mssql_query[MS SQL クエリを送る]
mssql_result[結果データを得る]
mssql_rows_affected[クエリによって変更されたレコード数を返す]
mssql_select_db[MS SQL データベースを選択する]
mt_getrandmax[乱数値の最大値を表示する]
mt_rand[よりよい乱数値を生成する]
mt_srand[改良型乱数生成器にシードを指定する]
mysql_affected_rows[一番最近の操作で変更された行の数を得る]
mysql_client_encoding[文字セット名を返す]
mysql_close[MySQL 接続を閉じる]
mysql_connect[MySQL サーバーへの接続をオープンする]
mysql_create_db[MySQL データベースを作成する]
mysql_data_seek[内部的な結果ポインタを移動する]
mysql_db_name[mysql_list_dbs() のコール結果からデータベース名を取得する]
mysql_db_query[データベースを選択し、そこでクエリーを実行する]
mysql_drop_db[MySQLデータベースを破棄(削除)する]
mysql_errno[直近の MySQL 処理からエラーメッセージのエラー番号を返す]
mysql_error[直近に実行された MySQL 操作のエラーメッセージを返す]
mysql_escape_string[mysql_query で使用するために文字列をエスケープする]
mysql_fetch_array[連想配列、添字配列、またはその両方として結果の行を取得する]
mysql_fetch_assoc[連想配列として結果の行を取得する]
mysql_fetch_field[結果からカラム情報を取得し、オブジェクトとして返す]
mysql_fetch_lengths[結果における各出力の長さを得る]
mysql_fetch_object[結果の行をオブジェクトとして取得する]
mysql_fetch_row[結果を添字配列として取得する]
mysql_field_flags[結果において指定したフィールドのフラグを取得する]
mysql_field_len[指定したフィールドの長さを返す]
mysql_field_name[結果において指定したフィールド名を取得する]
mysql_field_seek[結果ポインタを指定したフィールドオフセットにセットする]
mysql_field_table[指定したフィールドが含まれるテーブルの名前を取得する]
mysql_field_type[結果において指定したフィールドの型を取得する]
mysql_free_result[結果保持用メモリを開放する]
mysql_get_client_info[MySQL クライアント情報を取得する]
mysql_get_host_info[MySQL ホスト情報を取得する]
mysql_get_proto_info[MySQL プロトコル情報を取得する]
mysql_get_server_info[MySQL サーバー情報を取得する]
mysql_info[直近のクエリについての情報を得る]
mysql_insert_id[直近のクエリで生成された ID を得る]
mysql_list_dbs[MySQL サーバー上で利用可能なデータベースのリストを得る]
mysql_list_fields[MySQL テーブルのフィールドのリストを得る]
mysql_list_processes[MySQL プロセスのリストを得る]
mysql_list_tables[MySQL データベース上のテーブルのリストを得る]
mysql_num_fields[結果におけるフィールドの数を得る]
mysql_num_rows[結果における行の数を得る]
mysql_pconnect[MySQL サーバーへの持続的な接続をオープンする]
mysql_ping[サーバーとの接続状況を調べ、接続されていない場合は再接続する]
mysql_query[MySQL クエリを送信する]
mysql_real_escape_string[SQL 文中で用いる文字列の特殊文字をエスケープする]
mysql_result[結果データを得る]
mysql_select_db[MySQL データベースを選択する]
mysql_set_charset[クライアントの文字セットを設定する]
mysql_stat[現在のシステムの状態を取得する]
mysql_tablename[フィールドのテーブル名を得る]
mysql_thread_id[カレントのスレッド ID を返す]
mysql_unbuffered_query[MySQL に SQLクエリを送信するが、結果に対してのフェッチやバッファリングは行わない]
mysqli::__construct[新規に MySQL サーバーへの接続をオープンする]
mysqli::autocommit[データベース更新の自動コミットをオンまたはオフにする]
mysqli::change_user[指定されたデータベース接続のユーザー名を変更する]
mysqli::character_set_name[データベース接続のデフォルトの文字コードセットを返す]
mysqli::close[事前にオープンしているデータベース接続を閉じる]
mysqli::commit[現在のトランザクションをコミットする]
mysqli::debug[デバッグ操作を行う]
mysqli::disable_reads_from_master[マスタからの読み込みを無効にする]
mysqli::dump_debug_info[デバッグ情報をログに出力する]
mysqli::get_charset[文字セットオブジェクトを返す]
mysqli::get_client_info[MySQL クライアント情報を取得する]
mysqli::get_connection_stats[クライアント接続に関する統計情報を返す]
mysqli::get_warnings[SHOW WARNINGS の結果を取得する]
mysqli::init[MySQLi を初期化し、mysqli_real_connect()で使用するリソースを返す]
mysqli::kill[サーバーに MySQL スレッドの停止を問い合わせる]
mysqli::more_results[マルチクエリからの結果がまだ残っているかどうかを調べる]
mysqli::multi_query[データベース上でクエリを実行する]
mysqli::next_result[multi_query の、次の結果を準備する]
mysqli::options[オプションを設定する]
mysqli::ping[サーバーとの接続をチェックし、もし切断されている場合は再接続を試みる]
mysqli::poll[接続を問い合わせる]
mysqli::prepare[実行するための SQL ステートメントを準備する]
mysqli::query[データベース上でクエリを実行する]
mysqli::real_connect[mysql サーバーとの接続をオープンする]
mysqli::real_escape_string[接続の現在の文字セットを考慮して、SQL文で使用する文字列の特殊文字をエスケープする]
mysqli::real_query[SQL クエリを実行する]
mysqli::reap_async_query[非同期クエリから結果を取得する]
mysqli::refresh[リフレッシュする]
mysqli::rollback[現在のトランザクションをロールバックする]
mysqli::rpl_query_type[RPL クエリの型を返す]
mysqli::select_db[クエリを実行するためのデフォルトのデータベースを選択する]
mysqli::send_query[クエリを送信する]
mysqli::set_charset[クライアントのデフォルト文字セットを設定する]
mysqli::set_local_infile_default[load local infileコマンド用のユーザー定義ハンドラを削除する]
mysqli::set_local_infile_handler[LOAD DATA LOCAL INFILEコマンド用のコールバック関数を設定する]
mysqli::ssl_set[SSL を使用したセキュアな接続を確立する]
mysqli::stat[現在のシステム状態を取得する]
mysqli::stmt_init[ステートメントを初期化し、mysqli_stmt_prepareで使用するオブジェクトを返す]
mysqli::store_result[直近のクエリから結果セットを転送する]
mysqli::thread_safe[スレッドセーフであるかどうかを返す]
mysqli::use_result[結果セットの取得を開始する]
mysqli_affected_rows[直前の MySQL の操作で変更された行の数を得る]
mysqli_connect_errno[直近の接続コールに関するエラーコードを返す]
mysqli_connect_error[直近の接続エラーの内容を文字列で返す]
mysqli_disable_rpl_parse[RPL のパースを無効にする]
mysqli_driver::embedded_server_end[組み込みサーバーを停止する]
mysqli_driver::embedded_server_start[組み込みサーバーを初期化して開始する]
mysqli_enable_reads_from_master[マスタからの読み込みを有効にする]
mysqli_enable_rpl_parse[RPL のパースを有効にする]
mysqli_errno[直近の関数コールによるエラーコードを返す]
mysqli_error[直近のエラーの内容を文字列で返す]
mysqli_error_list[直近で実行したコマンドからのエラーの一覧を返す]
mysqli_fetch_lengths[結果セットにおける現在の行のカラムの長さを返す]
mysqli_field_count[直近のクエリのカラムの数を返す]
mysqli_field_tell[結果ポインタにおける現在のフィールドオフセットを取得する]
mysqli_get_cache_stats[クライアントの Zval キャッシュの統計情報を返す]
mysqli_get_client_info[MySQL クライアント情報を取得する]
mysqli_get_client_stats[クライアントのプロセス単位の統計情報を返す]
mysqli_get_client_version[MySQL クライアントのバージョンを文字列で返す]
mysqli_get_client_version[MySQL クライアントのバージョンを文字列で返す]
mysqli_get_host_info[使用している接続の型を文字列で返す]
mysqli_get_proto_info[使用している MySQL プロトコルのバージョンを返す]
mysqli_get_server_info[MySQL サーバーのバージョンを返す]
mysqli_get_server_version[MySQL サーバーのバージョンを整数値で返す]
mysqli_info[直近に実行されたクエリの情報を取得する]
mysqli_insert_id[直近のクエリで使用した自動生成の ID を返す]
mysqli_master_query[マスタ/スレーブ設定で、マスタ側のクエリを実行する]
mysqli_num_fields[結果のフィールド数を取得する]
mysqli_num_rows[結果の行数を取得する]
mysqli_report[内部のレポート機能を有効あるいは無効にする]
mysqli_result::data_seek[結果の任意の行にポインタを移動する]
mysqli_result::fetch_all[結果のすべての行を連想配列・数値添字配列あるいはその両方の形式で取得する]
mysqli_result::fetch_array[結果の行を連想配列・数値添字配列あるいはその両方の形式で取得する]
mysqli_result::fetch_assoc[結果の行を連想配列で取得する]
mysqli_result::fetch_field[結果セットの次のフィールドを返す]
mysqli_result::fetch_field_direct[単一のフィールドのメタデータを取得する]
mysqli_result::fetch_fields[結果セットのフィールド情報をオブジェクトの配列で返す]
mysqli_result::fetch_object[結果セットの現在の行をオブジェクトとして返す]
mysqli_result::fetch_row[結果の行を数値添字配列で取得する]
mysqli_result::field_seek[結果ポインタを、指定したフィールドオフセットに設定する]
mysqli_result::free[結果に関連付けられたメモリを開放する]
mysqli_rpl_parse_enabled[RPL のパースが有効かどうかを確認する]
mysqli_rpl_probe[RPL の調査]
mysqli_slave_query[マスタ/スレーブ設定で、スレーブ側のクエリを実行する]
mysqli_sqlstate[直前の MySQL の操作での SQLSTATE エラーを返す]
mysqli_stmt::attr_get[ステートメントの属性の現在の値を取得する]
mysqli_stmt::attr_set[プリペアドステートメントの振る舞いを変更する]
mysqli_stmt::bind_param[プリペアドステートメントのパラメータに変数をバインドする]
mysqli_stmt::bind_result[結果を保存するため、プリペアドステートメントに変数をバインドする]
mysqli_stmt::close[プリペアドステートメントを閉じる]
mysqli_stmt::data_seek[ステートメントの結果セットの任意の行に移動する]
mysqli_stmt::execute[プリペアドクエリを実行する]
mysqli_stmt::fetch[プリペアドステートメントから結果を取得し、バインド変数に格納する]
mysqli_stmt::free_result[指定したステートメントハンドルの結果を格納したメモリを開放する]
mysqli_stmt::get_result[プリペアード・ステートメントから結果セットを取得]
mysqli_stmt::get_warnings[SHOW WARNINGS の結果を取得する]
mysqli_stmt::more_results[複数クエリで、次の結果が存在するかどうかを調べる]
mysqli_stmt::next_result[複数クエリから、次の結果を読み込む]
mysqli_stmt::prepare[SQL ステートメントを実行するために準備する]
mysqli_stmt::reset[プリペアドステートメントをリセットする]
mysqli_stmt::result_metadata[プリペアドステートメントから結果セットのメタデータを返す]
mysqli_stmt::send_long_data[データをブロックで送信する]
mysqli_stmt::store_result[プリペアドステートメントから結果を転送する]
mysqli_stmt_affected_rows[直近に実行されたステートメントで変更・削除・あるいは追加された行の総数を返す]
mysqli_stmt_errno[直近のステートメントのコールに関するエラーコードを返す]
mysqli_stmt_error[直近のステートメントのエラー内容を文字列で返す]
mysqli_stmt_error_list[直近で実行したステートメントからのエラーの一覧を返す]
mysqli_stmt_field_count[指定したステートメントのフィールド数を返す]
mysqli_stmt_insert_id[直近の INSERT 操作で生成した ID を取得する]
mysqli_stmt_num_rows[ステートメントの結果セットの行数を返す]
mysqli_stmt_param_count[指定したステートメントのパラメータ数を返す]
mysqli_stmt_sqlstate[直前のステートメントの操作での SQLSTATE エラーを返す]
mysqli_thread_id[現在の接続のスレッド ID を返す]
mysqli_warning::__construct[コンストラクタ]
mysqli_warning::next[next]
mysqli_warning_count[指定した接続の直近のクエリから発生した警告の数を返す]
mysqlnd_memcache_get_config[プラグインの設定情報を返す]
mysqlnd_memcache_set[MySQL の接続を Memcache の接続と関連づける]
mysqlnd_ms_get_last_gtid[Returns the latest global transactionID]
mysqlnd_ms_get_last_used_connection[Returns an array which describes the lastused connection]
mysqlnd_ms_get_stats[Returns query distribution and connectionstatistics]
mysqlnd_ms_match_wild[Finds whether a table name matches awildcard pattern or not]
mysqlnd_ms_query_is_select[Find whether to send the query to themaster, the slave or the last used MySQL server]
mysqlnd_ms_set_qos[Sets the quality of service needed from thecluster]
mysqlnd_ms_set_user_pick_server[Sets a callback for user-defined read/writesplitting]
mysqlnd_qc_clear_cache[Flush all cache contents]
mysqlnd_qc_get_available_handlers[Returns a list of available storagehandler]
mysqlnd_qc_get_cache_info[Returns information on the current handler,the number of cache entries and cache entries, if available]
mysqlnd_qc_get_core_stats[Statistics collected by the core of thequery cache]
mysqlnd_qc_get_normalized_query_trace_log[Returns a normalized query trace log foreach query inspected by the query cache]
mysqlnd_qc_get_query_trace_log[Returns a backtrace for each query inspectedby the query cache]
mysqlnd_qc_set_cache_condition[Set conditions for automatic caching]
mysqlnd_qc_set_is_select[Installs a callback which decides whether astatement is cached]
mysqlnd_qc_set_storage_handler[Change current storage handler]
mysqlnd_qc_set_user_handlers[Sets the callback functions for auser-defined procedural storage handler]
mysqlnd_uh_convert_to_mysqlnd[Converts a MySQL connection handle into amysqlnd connection handle]
mysqlnd_uh_set_connection_proxy[Installs a proxy for mysqlndconnections]
mysqlnd_uh_set_statement_proxy[Installs a proxy for mysqlndstatements]
natcasesort[大文字小文字を区別しない"自然順"アルゴリズムを用いて配列をソートする]
natsort["自然順"アルゴリズムで配列をソートする]
ncurses_addch[現在の位置に文字を追加し、カーソルを進める]
ncurses_addchnstr[現在の位置に指定した長さの属性付き文字列を追加する]
ncurses_addchstr[現在の位置に属性付き文字列を追加する]
ncurses_addnstr[現在の位置に、指定した長さの文字列を追加する]
ncurses_addstr[現在の位置にテキストを出力する]
ncurses_assume_default_colors[カラー 0 のデフォルト色を定義する]
ncurses_attroff[指定した属性を無効とする]
ncurses_attron[指定した属性を有効にする]
ncurses_attrset[指定した属性を設定する]
ncurses_baudrate[端末のボーレートを返す]
ncurses_beep[端末のビープを鳴らす]
ncurses_bkgd[端末画面の背景属性を設定する]
ncurses_bkgdset[画面背景を制御する]
ncurses_border[属性付きの文字で画面周囲に境界を描画する]
ncurses_bottom_panel[パネルをスタックの最下部に移動する]
ncurses_can_change_color[端末の色を変更可能かどうか確認する]
ncurses_cbreak[入力のバッファリングを変更する]
ncurses_clear[スクリーンをクリアする]
ncurses_clrtobot[現在位置から最下部までスクリーンをクリアする]
ncurses_clrtoeol[現在位置から行末までスクリーンをクリアする]
ncurses_color_content[色の RGB 値を取得する]
ncurses_color_set[前景/背景色を設定する]
ncurses_curs_set[カーソル状態を設定する]
ncurses_def_prog_mode[端末(プログラム)モードを保存する]
ncurses_def_shell_mode[端末(シェル)モードを保存する]
ncurses_define_key[キーコードを定義する]
ncurses_del_panel[パネルをスタックから取り除き、削除する(しかし、関連付けられているウィンドウは削除しない)]
ncurses_delay_output[パディング文字を用いて端末出力を遅延させる]
ncurses_delch[現在位置の文字を削除し、残った部分を左に移動する]
ncurses_deleteln[現在位置の行を削除し、残りの部分を上に上げる]
ncurses_delwin[ncurses ウインドウを削除する]
ncurses_doupdate[準備中の全ての出力を書き込み、端末をリフレッシュする]
ncurses_echo[キーボード入力のエコーを有効とする]
ncurses_echochar[リフレッシュを行いつつ 1 文字出力する]
ncurses_end[ncurses を終了し、画面を消去する]
ncurses_erase[端末画面を消去する]
ncurses_erasechar[現在の erase 文字を返す]
ncurses_filter[iniscr() および newterm() の LINES を 1に設定する]
ncurses_flash[端末画面をフラッシュする(ビジュアルベル)]
ncurses_flushinp[キーボード入力バッファをフラッシュする]
ncurses_getch[キーボードから 1 文字読み込む]
ncurses_getmaxyx[ウィンドウの大きさを返す]
ncurses_getmouse[マウスイベントを読みこむ]
ncurses_getyx[ウィンドウ内の現在のカーソル位置を返す]
ncurses_halfdelay[端末をハーフディレイモードにする]
ncurses_has_colors[カラー端末かどうか確認する]
ncurses_has_ic[挿入/削除機能の有無を確認する]
ncurses_has_il[行挿入/削除機能の有無を確認する]
ncurses_has_key[端末キーボードにおいてファンクションキーの有無を調べる]
ncurses_hide_panel[パネルをスタックから取り除き、見えなくする]
ncurses_hline[現在位置に属性付きの文字を用いて最大 n 文字長の線を水平に描画する]
ncurses_inch[現在位置の文字と属性を取得する]
ncurses_init[ncurses を初期化する]
ncurses_init_color[端末の色を定義する]
ncurses_init_pair[色ペアを定義する]
ncurses_insch[文字を挿入し、現在位置にある文字を含む残りの行を移動する]
ncurses_insdelln[現在の行の後に複数の行を挿入し、スクロールダウンする(負の数を指定すると削除し、スクロールアップする)]
ncurses_insertln[行を挿入し、残りの部分をスクロールダウンする]
ncurses_insstr[現在位置に文字列を挿入し、残りの行を右に移動する]
ncurses_instr[端末画面から文字列を読み込む]
ncurses_isendwin[Ncurses が endwin モードの場合、通常の画面出力が実行可能]
ncurses_keyok[キーコードを有効または無効にする]
ncurses_keypad[キーパッドを on あるいは off にする]
ncurses_killchar[現在の行削除文字を返す]
ncurses_longname[端末の説明を返す]
ncurses_meta[8 ビットのメタキー情報を有効/無効にする]
ncurses_mouse_trafo[座標を変換する]
ncurses_mouseinterval[マウスボタンクリックのタイムアウトを設定する]
ncurses_mousemask[マウスオプションを設定する]
ncurses_move[出力位置を移動する]
ncurses_move_panel[左上が (startx, starty) となるようにパネルを移動する]
ncurses_mvaddch[現在位置を移動し、文字を追加する]
ncurses_mvaddchnstr[位置を移動し、指定長の属性付きの文字列を追加する]
ncurses_mvaddchstr[位置を移動し、属性付きの文字列を追加する]
ncurses_mvaddnstr[位置を移動し、指定長の文字列を追加する]
ncurses_mvaddstr[位置を移動し、文字列を追加する]
ncurses_mvcur[直ちにカーソルを移動する]
ncurses_mvdelch[位置を移動し、文字を削除、行の残りを左シフトする]
ncurses_mvgetch[位置を移動し、新しい位置で文字を得る]
ncurses_mvhline[位置を新しく設定し、属性付きの文字を用いて最大n文字の水平線を描画]
ncurses_mvinch[位置を移動し、新しい位置の属性付きの文字を取得する]
ncurses_mvvline[位置を新しく設定し、属性付きの文字を用いて最大 n 文字の垂直線を描画する]
ncurses_mvwaddstr[ウインドウの新規位置に文字列を追加する]
ncurses_napms[スリープ]
ncurses_new_panel[新しいパネルを作成し、それをウィンドウに関連づける]
ncurses_newpad[新しいパッド (window) を作成する]
ncurses_newwin[新規ウインドウを作成する]
ncurses_nl[改行と復改/ラインフィードを変換する]
ncurses_nocbreak[端末を cooked モードに変更する]
ncurses_noecho[キーボード入力エコーを無効にする]
ncurses_nonl[改行と復改/ラインフィードを変換しない]
ncurses_noqiflush[シグナル文字のフラッシュを無効とする]
ncurses_noraw[端末を raw モード以外に変更する]
ncurses_pair_content[色ペアの前景色と背景色を取得する]
ncurses_panel_above[パネルの上のパネルを返す]
ncurses_panel_below[パネルの下のパネルを返す]
ncurses_panel_window[パネルに関連付けられたウィンドウを返す]
ncurses_pnoutrefresh[パッドから仮想画面にリージョンをコピーする]
ncurses_prefresh[パッドから仮想画面にリージョンをコピーする]
ncurses_putp[パディング情報を文字列に適用し、それを出力する]
ncurses_qiflush[シグナル文字のフラッシュを有効とする]
ncurses_raw[端末を raw モードに変更する]
ncurses_refresh[画面をリフレッシュする]
ncurses_replace_panel[パネルに関連付けられたウィンドウを置き換える]
ncurses_reset_prog_mode[def_prog_mode で保存したプログラムモードをリセットする]
ncurses_reset_shell_mode[def_shell_mode で保存したシェルモードをリセットする]
ncurses_resetty[保存した端末モードに復帰する]
ncurses_savetty[端末の状態を保存する]
ncurses_scr_dump[画面の内容をファイルにダンプする]
ncurses_scr_init[ファイルダンプから画面を初期化する]
ncurses_scr_restore[ファイルダンプから画面を復帰する]
ncurses_scr_set[ファイルダンプから画面を継承する]
ncurses_scrl[現在位置を変更せずに画面の内容をスクロールアップまたはダウンする]
ncurses_show_panel[不可視のパネルをスタックの最上部に置き、見えるようにする]
ncurses_slk_attr[現在のソフトラベルキー属性を返す]
ncurses_slk_attroff[ソフトファンクションキーラベルの指定した属性を無効にする]
ncurses_slk_attron[ソフトファンクションキーラベルの指定した属性を有効にする]
ncurses_slk_attrset[ソフトファンクションキーラベルに、指定した属性を設定する]
ncurses_slk_clear[画面からソフトラベルをクリアする]
ncurses_slk_color[ソフトラベルキーの色を設定する]
ncurses_slk_init[ソフトラベルキー関数を初期化する]
ncurses_slk_noutrefresh[仮想画面にソフトラベルキーをコピーする]
ncurses_slk_refresh[ソフトラベルキーを画面にコピーする]
ncurses_slk_restore[ソフトラベルキーを復帰する]
ncurses_slk_set[ファンクションキーラベルを設定する]
ncurses_slk_touch[ncurses_slk_noutrefreshを実行する際に強制的に出力する]
ncurses_standend['standout' 属性の使用を停止する]
ncurses_standout['standout' 属性の使用を開始する]
ncurses_start_color[色機能を初期化する]
ncurses_termattrs[端末でサポートされる全ての属性フラグの論理和を返す]
ncurses_termname[端末の(簡略)名を返す]
ncurses_timeout[特別なキーシーケンスのタイムアウトを設定する]
ncurses_top_panel[可視パネルをスタックの最上部に移動する]
ncurses_typeahead[typeahead 確認用に別のファイル記述子を指定する]
ncurses_ungetch[入力ストリームに 1 文字戻す]
ncurses_ungetmouse[マウスイベントをキューにプッシュする]
ncurses_update_panels[仮想画面を再描画し、スタック内のパネルとの関係を反映させる]
ncurses_use_default_colors[端末のデフォルト色をカラー ID -1 に割り付ける]
ncurses_use_env[端末の大きさに関する環境情報の使用を制御する]
ncurses_use_extended_names[terminfo 記述において拡張名の使用を制御する]
ncurses_vidattr[video attribute モードで、端末上に文字列を表示する]
ncurses_vline[現在位置に最大 n 文字の属性付きの文字を用いて垂直線を描画する]
ncurses_waddch[ウィンドウ内の現在位置に文字を追加し、カーソルを進める]
ncurses_waddstr[ウィンドウ内の現在位置にテキストを出力する]
ncurses_wattroff[ウィンドウの属性をオフにする]
ncurses_wattron[ウィンドウの属性をオンにする]
ncurses_wattrset[ウィンドウの属性を設定する]
ncurses_wborder[属性文字を使用してウィンドウの周囲に線を描画する]
ncurses_wclear[ウィンドウをクリアする]
ncurses_wcolor_set[ウィンドウの色の組み合わせを設定する]
ncurses_werase[ウィンドウを消去する]
ncurses_wgetch[キーボート (ウィンドウ) から文字を読み込む]
ncurses_whline[指定した属性文字を用いて、最大 n 文字分の長さの水平線をウィンドウに描画する]
ncurses_wmouse_trafo[ウィンドウ/標準画面の座標系を変換する]
ncurses_wmove[ウィンドウの出力位置を移動する]
ncurses_wnoutrefresh[ウィンドウを仮想画面にコピーする]
ncurses_wrefresh[端末画面のウインドウをリフレッシュする]
ncurses_wstandend[ウィンドウの standout モードを終了する]
ncurses_wstandout[ウィンドウの standout モードに入る]
ncurses_wvline[指定した属性文字を用いて、最大 n 文字分の長さの垂直線をウィンドウに描画する]
newt_bell[ビープ音を端末に送信する]
newt_button[新しいボタンを作成する]
newt_button_bar[作成したボタンを含むグリッドを返す]
newt_centered_window[画面の中央に指定したサイズのウィンドウをオープンする]
newt_checkbox_get_value[チェックボックスリソースの値を取得する]
newt_checkbox_set_flags[チェックボックスリソースを設定する]
newt_checkbox_set_value[チェックボックスの値を設定する]
newt_checkbox_tree_add_item[新しいアイテムをチェックボックスツリーに追加する]
newt_checkbox_tree_find_item[チェックボックスツリーのアイテムを探す]
newt_checkbox_tree_get_current[チェックボックスツリーの選択されているアイテムを返す]
newt_clear_key_buffer[追加の入力を待たずに、端末の入力バッファの内容をクリアする]
newt_draw_root_text[指定した位置に文字列を表示する]
newt_finished[newt インターフェイスを終了する]
newt_form[フォームを作成する]
newt_form_add_component[フォームにコンポーネントを追加する]
newt_form_add_components[フォームに複数のコンポーネントを追加する]
newt_form_destroy[フォームを破壊する]
newt_form_run[フォームを実行する]
newt_get_screen_size[参照で渡された引数に、現在の端末の大きさを格納する]
newt_init[newt を初期化する]
newt_open_window[指定したサイズと位置でウィンドウをオープンする]
newt_pop_help_line[現在のヘルプ行をスタックの内容で置き換える]
newt_pop_window[トップウィンドウを画面から消去する]
newt_push_help_line[現在のヘルプ行をスタックに保存し、新しい行を表示する]
newt_refresh[画面の変更された部分を更新する]
newt_resume[newt_suspend() をコールした後に newt インターフェイスの使用を再開する]
newt_run_form[フォームを実行する]
newt_set_suspend_callback[ユーザーがサスペンドキーを押した際に起動するコールバック関数を設定する]
newt_suspend[端末を元の状態に戻すよう、newt に通知する]
newt_wait_for_key[キーが押されるまで結果を返さない]
next[内部配列ポインタを進める]
ngettext[gettext の複数形版]
nl2br[改行文字の前に HTML の改行タグを挿入する]
nl_langinfo[言語およびロケール情報を検索する]
notes_body[指定したサーバーにある指定したメールボックスのメッセージ msg_numberをオープンする]
notes_copy_db[Lotus Notes データベースをコピーする]
notes_create_db[Lotus Notes データベースを作成する]
notes_create_note[フォーム form_name を用いてノートを作成する]
notes_drop_db[Lotus Notes データベースを破棄する]
notes_find_note[database_name で見つかったノートの ID を返す]
notes_header_info[指定したサーバー上の指定したメールボックスにあるメッセージ msg_numberをオープンする]
notes_list_msgs[選択した database_name からノートを返す]
notes_mark_read[ユーザー user_name 用に note_id に既読マークを付ける]
notes_mark_unread[ユーザー user_name 用に note_id に未読マークを付ける]
notes_nav_create[database_name にナビゲータ名を作成する]
notes_search[database_name のキーワードにマッチするノートを見つける]
notes_unread[現在のユーザー user_name に関して未読のノート ID を返す]
notes_version[Lotus Notes のバージョンを取得する]
nsapi_request_headers[HTTP リクエストヘッダを全て取得する]
nsapi_response_headers[すべての HTTP レスポンスヘッダを取得する]
nsapi_virtual[NSAPI サブリクエストを発行する]
nthmac[nthmac キーを取得する (2 つの引数が必要)]
number_format[数字を千位毎にグループ化してフォーマットする]
oauth_get_sbs[SBSを生成する]
oauth_urlencode[URI を RFC 3686 形式でエンコードする]
ob_clean[出力バッファをクリア(消去)する]
ob_deflatehandler[圧縮出力ハンドラ]
ob_end_clean[出力用バッファをクリア(消去)し、出力のバッファリングをオフにする]
ob_end_flush[出力用バッファをフラッシュ(送信)し、出力のバッファリングをオフにする]
ob_etaghandler[ETag 出力ハンドラ]
ob_flush[出力バッファをフラッシュ(送信)する]
ob_get_clean[現在のバッファの内容を取得し、出力バッファを削除する]
ob_get_contents[出力用バッファの内容を返す]
ob_get_flush[出力バッファをフラッシュし、その内容を文字列として返した後で出力バッファリングを終了する]
ob_get_length[出力バッファの長さを返す]
ob_get_level[出力バッファリング機構のネストレベルを返す]
ob_get_status[出力バッファのステータスを取得する]
ob_gzhandler[出力バッファを gzip 圧縮するための ob_startコールバック関数]
ob_iconv_handler[出力バッファハンドラとして文字エンコーディングを変換する]
ob_implicit_flush[自動フラッシュをオンまたはオフにする]
ob_inflatehandler[展開出力ハンドラ]
ob_list_handlers[使用中の出力ハンドラの一覧を取得する]
ob_start[出力のバッファリングを有効にする]
ob_tidyhandler[バッファを修正するための ob_start コールバック関数]
oci_bind_array_by_name[PHP の配列を Oracle PL/SQL の配列に名前でバインドする]
oci_bind_by_name[Oracle プレースホルダに PHP 変数をバインドする]
oci_cancel[カーソルからの読み込みをキャンセルする]
oci_client_version[Oracle クライアント・ライブラリのバージョンを返す]
oci_close[Oracleとの接続を閉じる]
oci_commit[未解決のトランザクションをコミットする]
oci_connect[Oracle データベースに接続する]
oci_define_by_name[PHP の変数を、クエリで取得するカラムに関連づける]
oci_error[最後に見つかったエラーを返す]
oci_execute[文を実行する]
oci_fetch[クエリの次の行を内部バッファに取得する]
oci_fetch_all[クエリからの複数の行を二次元配列に取得する]
oci_fetch_array[クエリの次の行を連想配列あるいは数値添字配列で返す]
oci_fetch_assoc[クエリの次の行を連想配列で返す]
oci_fetch_object[クエリの次の行をオブジェクトとして返す]
oci_fetch_row[クエリの次の行を配列で返す]
oci_field_is_null[フィールドが NULL であるかどうかを確認する]
oci_field_name[文からのフィールド名を返す]
oci_field_precision[フィールドの精度を問い合わせる]
oci_field_scale[フィールドの桁数を問い合わせる]
oci_field_size[フィールドサイズを返す]
oci_field_type[フィールドのデータ型を返す]
oci_field_type_raw[Oracle におけるフィールドの型を問い合わせる]
oci_free_descriptor[ディスクリプタを解放する]
oci_free_statement[文やカーソルに関連付けられた全てのリソースを解放する]
oci_internal_debug[内部デバッグ用の出力を有効または無効にする]
oci_lob_copy[ラージオブジェクトをコピーする]
oci_lob_is_equal[2 つの LOB/FILE ロケータの等価性を比較する]
oci_new_collection[新しいコレクションオブジェクトを割り当てる]
oci_new_connect[一意な接続を使って Oracle サーバーへ接続する]
oci_new_cursor[新規カーソル (ステートメントハンドル) を割り当て、それを返す]
oci_new_descriptor[空の新規 LOB あるいは FILE ディスクリプタを初期化する]
oci_num_fields[ある文における結果のカラム数を返す]
oci_num_rows[文の実行で作用された行数を取得する]
oci_parse[実行のために Oracle の文をパースする]
oci_password_change[Oracle ユーザーのパスワードを変更する]
oci_pconnect[持続的接続を使用してOracle データベースに接続する]
oci_result[フェッチした行からフィールドの値を取得する]
oci_rollback[未解決のデータベーストランザクションをロールバックする]
oci_server_version[Oracle データベースのバージョンを返す]
oci_set_action[アクション名を設定します]
oci_set_client_identifier[クライアント識別子を設定します]
oci_set_client_info[クライアント情報を設定する]
oci_set_edition[データベース・エディション を設定します]
oci_set_module_name[モジュール名を設定します]
oci_set_prefetch[クエリがプリフェッチする行数を設定する]
oci_statement_type[ステートメントの種類を返す]
ocifetchinto[結果配列の次の行を取得する (非推奨)]
octdec[8 進数を 10 進数に変換する]
odbc_autocommit[自動コミットの動作をオンまたはオフにする]
odbc_binmode[バイナリカラムデータを処理する]
odbc_close[ODBC 接続を閉じる]
odbc_close_all[全ての ODBC 接続を閉じる]
odbc_columnprivileges[指定したテーブルに関するカラムおよび付随する権限のリストを取得する]
odbc_columns[指定したテーブルにあるカラム名のリストを取得する]
odbc_commit[ODBC トランザクションをコミットする]
odbc_connect[データソースに接続する]
odbc_cursor[カーソル名を得る]
odbc_data_source[現在の接続についての情報を返す]
odbc_error[直近のエラーコードを得る]
odbc_errormsg[直近のエラーメッセージを得る]
odbc_exec[SQL文を準備し、実行する]
odbc_execute[プリペアドステートメントを実行する]
odbc_fetch_array[連想配列として結果の行を取得する]
odbc_fetch_into[一行ぶんの結果を配列に取り込む]
odbc_fetch_object[オブジェクトとして結果の行を取得する]
odbc_fetch_row[行を取り込む]
odbc_field_len[フィールドの長さ (精度) を得る]
odbc_field_name[カラム名を得る]
odbc_field_num[カラム番号を返す]
odbc_field_scale[フィールドの精度を得る]
odbc_field_type[フィールドのデータ型を返す]
odbc_foreignkeys[外部キーのリストを取得する]
odbc_free_result[結果を保持するリソースを開放する]
odbc_gettypeinfo[データソースがサポートするデータ型についての情報を取得する]
odbc_longreadlen[LONG カラムを処理する]
odbc_next_result[複数の結果が利用可能などうか確認する]
odbc_num_fields[結果のカラム数を返す]
odbc_num_rows[結果における行数を返す]
odbc_pconnect[持続的なデータベース接続を開く]
odbc_prepare[実行用に文を準備する]
odbc_primarykeys[テーブルの主キーを取得する]
odbc_procedurecolumns[プロシージャへのパラメータに関する情報を取得する]
odbc_procedures[指定したデータソースに保存されているプロシージャのリストを取得する]
odbc_result[結果データを得る]
odbc_result_all[HTML テーブルとして結果を出力する]
odbc_rollback[トランザクションをロールバックする]
odbc_setoption[ODBC の設定を変更する]
odbc_specialcolumns[特殊カラムを取得する]
odbc_statistics[テーブルに関する統計情報を取得する]
odbc_tableprivileges[各テーブルのリストおよび関連する権限のリストを取得する]
odbc_tables[指定したデータソースに保存されたテーブルの名前のリストを取得する]
openal_buffer_create[OpenAL バッファを生成する]
openal_buffer_data[バッファのデータを読み込む]
openal_buffer_destroy[OpenAL バッファを削除する]
openal_buffer_get[OpenAL バッファのプロパティを取得する]
openal_buffer_loadwav[.wav ファイルをバッファに読み込む]
openal_context_create[音声処理コンテキストを作成する]
openal_context_current[指定したコンテキストを現在のコンテキストにする]
openal_context_destroy[コンテキストを削除する]
openal_context_process[指定したコンテキストを処理する]
openal_context_suspend[指定したコンテキストをサスペンドする]
openal_device_close[OpenAL デバイスを閉じる]
openal_device_open[OpenAL 音声レイヤを初期化する]
openal_listener_get[リスナーのプロパティを取得する]
openal_listener_set[リスナーのプロパティを設定する]
openal_source_create[ソースリソースを生成する]
openal_source_destroy[ソースリソースを削除する]
openal_source_get[OpenAL ソースのプロパティを取得する]
openal_source_pause[ソースを一時停止する]
openal_source_play[ソースの再生を開始する]
openal_source_rewind[ソースを巻き戻す]
openal_source_set[ソースのプロパティを設定する]
openal_source_stop[ソースの再生を停止する]
openal_stream[ソースのストリーム再生を開始する]
opendir[ディレクトリハンドルをオープンする]
openlog[システムのロガーへの接続をオープンする]
openssl_cipher_iv_length[暗号 iv の長さを取得]
openssl_csr_export[CSR を文字列としてエクスポートする]
openssl_csr_export_to_file[CSR をファイルにエクスポートする]
openssl_csr_get_public_key[CERT の公開鍵を返す]
openssl_csr_get_subject[CERT の subject を返す]
openssl_csr_new[CSR を作成する]
openssl_csr_sign[他の CERT（あるいは自分自身）で証明書をサインする]
openssl_decrypt[データを復号]
openssl_dh_compute_key[リモート DH キー及びローカル DHキーの公開値に関して、共有される秘密を計算]
openssl_digest[ダイジェストを計算]
openssl_encrypt[データを暗号化]
openssl_error_string[OpenSSL エラーメッセージを返す]
openssl_free_key[キーリソースを開放する]
openssl_get_cipher_methods[利用可能な暗号メソッドを取得]
openssl_get_md_methods[利用可能なダイジェスト・メソッドを取得]
openssl_open[シール(暗号化)されたデータをオープン(復号)する]
openssl_pkcs12_export[PKCS#12 互換の証明書保存ファイルを変数にエクスポートする]
openssl_pkcs12_export_to_file[PKCS#12 互換の証明書保存ファイルをエクスポートする]
openssl_pkcs12_read[PKCS#12 認証ストアをパースして配列形式にする]
openssl_pkcs7_decrypt[S/MIME 暗号化されたメッセージを復号する]
openssl_pkcs7_encrypt[S/MIME メッセージを暗号化する]
openssl_pkcs7_sign[S/MIME メッセージにサインする]
openssl_pkcs7_verify[S/MIME でサインされたメッセージの署名を検証する]
openssl_pkey_export[エクスポート可能な形式で、キーを文字列に取得する]
openssl_pkey_export_to_file[エクスポート可能な形式で、キーをファイルに取得する]
openssl_pkey_free[秘密鍵を開放する]
openssl_pkey_get_details[キーの詳細の配列を返す]
openssl_pkey_get_private[秘密鍵を取得する]
openssl_pkey_get_public[証明書から公開鍵を抽出し、使用できるようにする]
openssl_pkey_new[新規に秘密鍵を生成する]
openssl_private_decrypt[秘密鍵でデータを復号する]
openssl_private_encrypt[秘密鍵でデータを暗号化する]
openssl_public_decrypt[公開鍵でデータを復号する]
openssl_public_encrypt[公開鍵でデータを暗号化する]
openssl_random_pseudo_bytes[疑似乱数のバイト文字列を生成する]
openssl_seal[データをシール(暗号化)する]
openssl_sign[署名を生成する]
openssl_verify[署名を検証する]
openssl_x509_check_private_key[秘密鍵が証明書に対応するかを確認する]
openssl_x509_checkpurpose[証明書が特定の目的に使用可能かどうか確認する]
openssl_x509_export[証明書を文字列としてエクスポートする]
openssl_x509_export_to_file[証明書をファイルにエクスポートする]
openssl_x509_free[証明書リソースを開放する]
openssl_x509_parse[X509 証明書をパースし、配列として情報を返す]
openssl_x509_read[X.509 証明書をパースし、リソース ID を返す]
ord[文字の ASCII 値を返す]
output_add_rewrite_var[URL リライタの値を追加する]
output_reset_rewrite_vars[URL リライタの値をリセットする]
override_function[組み込みの関数を上書きする]
ovrimos_close[ovrimos への接続を閉じる]
ovrimos_commit[トランザクションをコミットする]
ovrimos_connect[指定したデータベースに接続する]
ovrimos_cursor[カーソルの名前を返す]
ovrimos_exec[SQL 文を実行する]
ovrimos_execute[準備された SQL 命令を実行する]
ovrimos_fetch_into[結果セットから行を取得する]
ovrimos_fetch_row[結果セットからレコードを取得する]
ovrimos_field_len[出力カラムの長さを返す]
ovrimos_field_name[出力のカラム名を返す]
ovrimos_field_num[出力カラムの (1 から始まる) インデックスを返す]
ovrimos_field_type[出力カラムの型を返す]
ovrimos_free_result[指定した result_id を開放する]
ovrimos_longreadlen[long データ型から取得されるバイト数を指定する]
ovrimos_num_fields[カラム数を返す]
ovrimos_num_rows[update 命令により変更された行の数を返す]
ovrimos_prepare[SQL 命令を準備する]
ovrimos_result[出力カラムを取得する]
ovrimos_result_all[結果全体を HTML テーブルとして出力する]
ovrimos_rollback[トランザクションをロールバックする]
pack[データをバイナリ文字列にパックする]
parse_ini_file[設定ファイルをパースする]
parse_ini_string[設定文字列をパースする]
parse_str[文字列を処理し、変数に代入する]
parse_url[URL を解釈し、その構成要素を返す]
parsekit_compile_file[PHP コードの文字列をコンパイルし、結果を op コードの配列で返す]
parsekit_compile_string[PHP コードの文字列をコンパイルし、結果を op コードの配列で返す]
parsekit_func_arginfo[関数の引数に関する情報を返す]
passthru[外部プログラムを実行し、未整形の出力を表示する]
password_get_info[指定したハッシュに関する情報を返す]
password_hash[パスワードハッシュを作る]
password_needs_rehash[指定したハッシュがオプションにマッチするかどうかを調べる]
password_verify[パスワードがハッシュにマッチするかどうかを調べる]
pathinfo[ファイルパスに関する情報を返す]
pclose[プロセスのファイルポインタをクローズする]
pcntl_alarm[シグナルを送信するアラームを設定する]
pcntl_exec[現在のプロセス空間で指定したプログラムを実行する]
pcntl_fork[現在実行中のプロセスをフォークする]
pcntl_getpriority[プロセスの優先度を取得する]
pcntl_setpriority[プロセスの優先度を変更する]
pcntl_signal[シグナルハンドラを設定する]
pcntl_signal_dispatch[ペンディングシグナル用のハンドラをコールする]
pcntl_sigprocmask[ブロックされたシグナルを設定あるいは取得する]
pcntl_sigtimedwait[タイムアウトつきでシグナルを待つ]
pcntl_sigwaitinfo[シグナルを待つ]
pcntl_wait[待つかフォークした子プロセスのステータスを返す]
pcntl_waitpid[待つかフォークした子プロセスのステータスを返す]
pcntl_wexitstatus[終了した子プロセスのリターンコードを返す]
pcntl_wifexited[ステータスコードが正常終了を表しているかどうかを調べる]
pcntl_wifsignaled[ステータスコードがシグナルによる終了を表しているかどうかを調べる]
pcntl_wifstopped[子プロセスが現在停止しているかどうかを調べる]
pcntl_wstopsig[子プロセスを停止させたシグナルを返す]
pcntl_wtermsig[子プロセスの終了を生じたシグナルを返す]
pfsockopen[持続的な Internet または Unixドメインソケット接続をオープンする]
pg_affected_rows[変更されたレコード(タプル)の数を返す]
pg_cancel_query[非同期クエリを取り消す]
pg_client_encoding[クライアントのエンコーディングを取得する]
pg_close[PostgreSQL 接続をクローズする]
pg_connect[PostgreSQL 接続をオープンする]
pg_connection_busy[接続がビジーかどうか調べる]
pg_connection_reset[接続をリセット(再接続)する]
pg_connection_status[接続ステータスを取得する]
pg_convert[連想配列の値を、SQL 文として実行可能な形式に変換する]
pg_copy_from[配列からテーブルに挿入する]
pg_copy_to[配列にテーブルをコピーする]
pg_dbname[データベース名を取得する]
pg_delete[レコードを削除する]
pg_end_copy[PostgreSQL バックエンドと同期する]
pg_escape_bytea[bytea フィールドに挿入するために文字列をエスケープする]
pg_escape_identifier[テキスト型フィールドに挿入するために、識別子をエスケープする]
pg_escape_literal[テキスト型フィールドに挿入するために、リテラルをエスケープする]
pg_escape_string[クエリに使う文字列をエスケープする]
pg_execute[指定したパラメータを用いてプリペアドステートメントを実行するリクエストを送信し、その結果を待つ]
pg_fetch_all[取得されたすべての行を配列として取得する]
pg_fetch_all_columns[指定したカラムの全ての行を配列として取得する]
pg_fetch_array[行を配列として取得する]
pg_fetch_assoc[行を連想配列として取得する]
pg_fetch_object[行をオブジェクトとして得る]
pg_fetch_result[結果リソースから値を返す]
pg_fetch_row[数値添字の配列として行を得る]
pg_field_is_null[フィールドが SQL の NULL かどうか調べる]
pg_field_name[フィールドの名前を返す]
pg_field_num[指定されたフィールドのフィールド番号を返す]
pg_field_prtlen[表示される長さを返す]
pg_field_size[指定したフィールドの内部記憶領域におけるサイズを返す]
pg_field_table[tables フィールドの名前あるいは oid を返す]
pg_field_type[フィールド番号に対応する型名を返す]
pg_field_type_oid[フィールド番号に対応する型 ID（OID）を返す]
pg_free_result[メモリを開放する]
pg_get_notify[SQL NOTIFY メッセージを取得する]
pg_get_pid[バックエンドのプロセス ID を得る]
pg_get_result[非同期クエリの結果を取得する]
pg_host[接続に関連するホスト名を返す]
pg_insert[テーブルに配列を挿入する]
pg_last_error[特定の接続から直近のエラーメッセージ文字列を取得する]
pg_last_notice[PostgreSQL サーバーからの直近の通知メッセージを返す]
pg_last_oid[直近の行のオブジェクト ID を返す]
pg_lo_close[ラージオブジェクトをクローズする]
pg_lo_create[ラージオブジェクトを生成する]
pg_lo_export[ラージオブジェクトをファイルにエクスポートする]
pg_lo_import[ファイルからラージオブジェクトをインポートする]
pg_lo_open[ラージオブジェクトをオープンする]
pg_lo_read[ラージオブジェクトを読み込む]
pg_lo_read_all[ラージオブジェクト全体を読み込みブラウザに直接送信する]
pg_lo_seek[ラージオブジェクトの位置をシークする]
pg_lo_tell[ラージオブジェクトのカレントのシーク位置を返す]
pg_lo_unlink[ラージオブジェクトを削除する]
pg_lo_write[ラージオブジェクトを書く]
pg_meta_data[テーブルからメタデータを取得する]
pg_num_fields[フィールド数を返す]
pg_num_rows[行数を返す]
pg_options[接続に関連するオプションを取得する]
pg_parameter_status[サーバーのパラメータ設定を検索する]
pg_pconnect[持続的な PostgreSQL 接続をオープンする]
pg_ping[データベース接続を調べる]
pg_port[接続に関連するポート番号を返す]
pg_prepare[指定したパラメータでプリペアドステートメントを作成するリクエストを送信し、その完了を待つ]
pg_put_line[NULL で終わる文字列を PostgreSQL バックエンドに送信する]
pg_query[クエリを実行する]
pg_query_params[SQL コマンドとパラメータを分割してサーバーにを送信し、その結果を待つ]
pg_result_error[結果に関連するエラーメッセージを取得する]
pg_result_error_field[エラー報告の各フィールドを返す]
pg_result_seek[結果リソースの内部行オフセットを設定する]
pg_result_status[クエリ結果のステータスを取得する]
pg_select[レコードを選択する]
pg_send_execute[指定したパラメータでプリペアドステートメントを実行するリクエストを送信し、その結果を待たない]
pg_send_prepare[指定したパラメータでプリペアドステートメントを作成するリクエストを送信し、その結果を待たない]
pg_send_query[非同期クエリを送信する]
pg_send_query_params[コマンドとパラメータを分割してサーバーに送信し、その結果を待たない]
pg_set_client_encoding[クライアントのエンコーディングを設定する]
pg_set_error_verbosity[pg_last_error() および pg_result_error() が返すメッセージの詳細度を指定する]
pg_trace[PostgreSQL 接続のトレースを有効にする]
pg_transaction_status[サーバー上で実行中のトランザクションの状態を返す]
pg_tty[接続に関する TTY 名を返す]
pg_unescape_bytea[bytea 型のバイナリをアンエスケープする]
pg_untrace[PostgreSQL 接続のトレースを無効にする]
pg_update[テーブルを更新する]
pg_version[クライアント・プロトコル・サーバーのバージョンを配列で返す]
php_check_syntax[指定したファイルの文法チェック（と実行）を行う]
php_ini_loaded_file[読み込まれた php.ini ファイルのパスを取得する]
php_ini_scanned_files[追加の ini ディレクトリにある .ini ファイルのリストを取得する]
php_logo_guid[ロゴの guid を取得する]
php_sapi_name[ウェブサーバーと PHP の間のインターフェイスの型を返す]
php_strip_whitespace[コメントと空白文字を取り除いたソースを返す]
php_uname[PHP が稼動しているオペレーティングシステムに関する情報を返す]
php_user_filter::filter[フィルタを適用するときにコールされる]
php_user_filter::onClose[フィルタを閉じるときにコールされる]
php_user_filter::onCreate[フィルタを作成するときにコールされる]
phpcredits[PHP に関するクレジットを出力する]
phpinfo[PHP の設定情報を出力する]
phpversion[現在の PHP バージョンを取得する]
pi[円周率の値を得る]
png2wbmp[PNG イメージファイルから WBMP イメージファイルに変換する]
popen[プロセスへのファイルポインタをオープンする]
posix_access[ファイルのアクセス権限を判断する]
posix_ctermid[制御する端末のパス名を得る]
posix_get_last_error[直近で失敗した posix 関数が設定したエラー番号を取得する]
posix_getcwd[現在のディレクトリのパス名]
posix_getegid[現在のプロセスの有効なグループ ID を返す]
posix_geteuid[現在のプロセスの有効なユーザー ID を返す]
posix_getgid[現在のプロセスの実際のグループ ID を返す]
posix_getgrgid[指定したグループ ID を有するグループに関する情報を返す]
posix_getgrnam[指定した名前のグループに関する情報を返す]
posix_getgroups[現在のプロセスのグループセットを返す]
posix_getlogin[ログイン名を返す]
posix_getpgid[ジョブ制御のプロセスグループ ID を得る]
posix_getpgrp[現在のプロセスのグループ ID を返す]
posix_getpid[現在のプロセス ID を返す]
posix_getppid[親プロセスの ID を返す]
posix_getpwnam[指定した名前のユーザーに関する情報を返す]
posix_getpwuid[指定 ID のユーザーに関する情報を返す]
posix_getrlimit[システムリソース制限に関する情報を返す]
posix_getsid[プロセスの現在の sid を得る]
posix_getuid[現在のプロセスの実際のユーザー ID を返す]
posix_initgroups[グループアクセスリストを求める]
posix_isatty[ファイル記述子が対話型端末であるかどうかを定義する]
posix_kill[プロセスにシグナルを送信する]
posix_mkfifo[fifo スペシャルファイル(名前付きパイプ)を作成する]
posix_mknod[スペシャルファイルあるいは通常のファイルを作成する (POSIX.1)]
posix_setegid[現在のプロセスの実効 GID を設定する]
posix_seteuid[現在のプロセスの実効 UID を設定する]
posix_setgid[現在のプロセスの GID を設定する]
posix_setpgid[ジョブ制御のプロセスグループ ID を設定する]
posix_setsid[現在のプロセスをセッションリーダーにする]
posix_setuid[現在のプロセスの UID を設定する]
posix_strerror[指定したエラー番号に対応するシステムのエラーメッセージを取得する]
posix_times[プロセス時間を得る]
posix_ttyname[端末のデバイス名を調べる]
posix_uname[システム名を得る]
pow[指数表現]
preg_filter[正規表現による検索と置換を行う]
preg_grep[パターンにマッチする配列の要素を返す]
preg_last_error[直近の PCRE 正規表現処理のエラーコードを返す]
preg_match[正規表現によるマッチングを行う]
preg_match_all[繰り返し正規表現検索を行う]
preg_quote[正規表現文字をクオートする]
preg_replace[正規表現検索および置換を行う]
preg_replace_callback[正規表現検索を行い、コールバック関数を使用して置換を行う]
preg_split[正規表現で文字列を分割する]
prev[内部の配列ポインタをひとつ前に戻す]
print[文字列を出力する]
print_r[指定した変数に関する情報を解りやすく出力する]
printer_abort[プリンタのスプールファイルを削除する]
printer_close[プリンタへの接続を閉じる]
printer_create_brush[新規ブラシを作成する]
printer_create_dc[新規デバイスコンテキストを作成する]
printer_create_font[新規フォントを作成する]
printer_create_pen[新規ペンを作成する]
printer_delete_brush[ブラシを削除する]
printer_delete_dc[デバイスコンテキストを削除する]
printer_delete_font[フォントを削除する]
printer_delete_pen[ペンを削除する]
printer_draw_bmp[ビットマップを描画する]
printer_draw_chord[弦を描画する]
printer_draw_elipse[楕円を描画する]
printer_draw_line[線を描画する]
printer_draw_pie[円弧を描画する]
printer_draw_rectangle[矩形を描画する]
printer_draw_roundrect[角が丸い矩形を描画する]
printer_draw_text[テキストを描画する]
printer_end_doc[ドキュメントを閉じる]
printer_end_page[アクティブなページを閉じる]
printer_get_option[プリンタ設定データを取得する]
printer_list[サーバーに登録されたプリンタの配列を返す]
printer_logical_fontheight[論理フォントの高さを取得する]
printer_open[プリンタへの接続をオープンする]
printer_select_brush[ブラシを選択する]
printer_select_font[フォントを選択する]
printer_select_pen[ペンを選択する]
printer_set_option[プリンタの接続を設定する]
printer_start_doc[新規ドキュメントを開始する]
printer_start_page[新規ページを開始する]
printer_write[プリンタへデータを書き込む]
printf[フォーマット済みの文字列を出力する]
proc_close[proc_open() で開かれたプロセスを閉じ、 そのプロセスの終了コードを返す]
proc_get_status[proc_open() で開かれたプロセスに関する情報を取得する]
proc_nice[現在のプロセスの優先度を変更する]
proc_open[コマンドを実行し、入出力用にファイルポインタを開く]
proc_terminate[proc_open でオープンされたプロセスを強制終了する]
property_exists[オブジェクトもしくはクラスにプロパティが存在するかどうかを調べる]
ps_add_bookmark[現在のページにブックマークを追加する]
ps_add_launchlink[ファイルを実行するためのリンクを追加する]
ps_add_locallink[同一ドキュメント内のページへのリンクを追加する]
ps_add_note[現在のページに注釈を追加する]
ps_add_pdflink[別の PDF ドキュメントのページへのリンクを追加する]
ps_add_weblink[Web 上の場所へのリンクを追加する]
ps_arc[反時計回りに円弧を描く]
ps_arcn[時計回りに円弧を描く]
ps_begin_page[新しいページを開始する]
ps_begin_pattern[新しいパターンを開始する]
ps_begin_template[新しいテンプレートを開始する]
ps_circle[円を描く]
ps_clip[現在のパスを描画範囲として指定する]
ps_close[PostScript ドキュメントを閉じる]
ps_close_image[画像を閉じ、メモリを開放する]
ps_closepath[パスを閉じる]
ps_closepath_stroke[パスを閉じ、描画する]
ps_continue_text[次の行にテキストを続ける]
ps_curveto[曲線を描く]
ps_delete[PostScript ドキュメントの全リソースを削除する]
ps_end_page[ページを終了する]
ps_end_pattern[パターンを終了する]
ps_end_template[テンプレートを終了する]
ps_fill[現在のパスを塗りつぶす]
ps_fill_stroke[現在のパスを塗りつぶし、線を引く]
ps_findfont[フォントを読み込む]
ps_get_buffer[生成された PS データを含むバッファの内容を取得する]
ps_get_parameter[パラメータを取得する]
ps_get_value[値を取得する]
ps_hyphenate[単語をハイフネーションする]
ps_include_file[外部ファイルを生の PostScript コードとして読み込む]
ps_lineto[直線を描く]
ps_makespotcolor[スポット色を作成する]
ps_moveto[現在位置を設定する]
ps_new[新しい PostScript ドキュメントオブジェクトを作成する]
ps_open_file[出力用のファイルを開く]
ps_open_image[後で配置するために画像を読み込む]
ps_open_image_file[ファイルから画像を開く]
ps_open_memory_image[GD 画像を受け取り、PS ドキュメントにはめ込む画像を返す]
ps_place_image[画像をページに配置する]
ps_rect[矩形を描く]
ps_restore[以前に保存されたコンテキストを復元する]
ps_rotate[回転の程度を設定する]
ps_save[現在のコンテキストを保存する]
ps_scale[縮尺を設定する]
ps_set_border_color[注記の枠線の色を設定する]
ps_set_border_dash[注記の枠線の、破線の状態を設定する]
ps_set_border_style[注記の枠線の形式を設定する]
ps_set_info[ドキュメントの情報を設定する]
ps_set_parameter[パラメータを設定する]
ps_set_text_pos[テキストの出力位置を設定する]
ps_set_value[値を設定する]
ps_setcolor[色を設定する]
ps_setdash[破線の形状を設定する]
ps_setflat[平面度を設定する]
ps_setfont[以降の出力で用いるフォントを設定する]
ps_setgray[グレー値を設定する]
ps_setlinecap[線端の形状を設定する]
ps_setlinejoin[線の連結方法を設定する]
ps_setlinewidth[線幅を設定する]
ps_setmiterlimit[miter limit 値を設定する]
ps_setoverprintmode[overprint モードを設定する]
ps_setpolydash[破線の形状を設定する]
ps_shading[以降の出力で用いるシェーディングを作成する]
ps_shading_pattern[シェーディング用のパターンを作成する]
ps_shfill[範囲をシェーディングで塗りつぶす]
ps_show2[テキストを現在の位置に出力する]
ps_show[テキストを出力する]
ps_show_boxed[テキストをボックス内に出力する]
ps_show_xy2[テキストを指定した位置に出力する]
ps_show_xy[指定された位置にテキストを出力する]
ps_string_geometry[文字列のジオメトリを取得する]
ps_stringwidth[文字列の幅を取得する]
ps_stroke[現在のパスを描画する]
ps_symbol[グリフを出力する]
ps_symbol_name[グリフ名を取得する]
ps_symbol_width[グリフの幅を取得する]
ps_translate[座標変換を設定する]
pspell_add_to_personal[ユーザーの単語リストに単語を追加する]
pspell_add_to_session[現在のセッションの単語リストに単語を追加する]
pspell_check[単語をチェックする]
pspell_clear_session[現在のセッションをクリアする]
pspell_config_create[辞書をオープンする際に使用する設定を作成する]
pspell_config_data_dir[言語データファイルの場所]
pspell_config_dict_dir[メイン単語リストの場所]
pspell_config_ignore[長さが N 文字未満の単語を無視する]
pspell_config_mode[返される提案の数のモードを変更する]
pspell_config_personal[個人の単語リストを保持するファイルを設定する]
pspell_config_repl[置換候補を保持するファイルを設定する]
pspell_config_runtogether[複合語を有効な単語の組み合わせとして考慮する]
pspell_config_save_repl[単語リストと共に置換リストを保存するかどうかを定義する]
pspell_new[新規辞書をロードする]
pspell_new_config[指定した設定に基づき新規辞書をロードする]
pspell_new_personal[個人の単語リストを有する新規辞書をロードする]
pspell_save_wordlist[個人の単語リストをファイルに保存する]
pspell_store_replacement[単語を置換する組を保存する]
pspell_suggest[単語のスペルについて修正候補を示す]
putenv[環境変数の値を設定する]
px_close[paradox データベースを閉じる]
px_create_fp[新しい paradox データベースを作成する]
px_date2string[日付を文字列に変換する]
px_delete[paradox データベースのリソースを削除する]
px_delete_record[paradox データベースからレコードを削除する]
px_get_field[単一のフィールドの仕様を返す]
px_get_info[paradox ファイルに関する多くの情報を返す]
px_get_parameter[パラメータを取得する]
px_get_record[paradox データベースのレコードを返す]
px_get_schema[データベーススキーマを返す]
px_get_value[値を取得する]
px_insert_record[paradox データベースにレコードを挿入する]
px_new[新しい paradox オブジェクトを作成する]
px_numfields[データベース内のフィールドの数を返す]
px_numrecords[データベース内のレコードの数を返す]
px_open_fp[paradox データベースをオープンする]
px_put_record[paradox データベースにレコードを保存する]
px_retrieve_record[paradox データベースのレコードを返す]
px_set_blob_file[blob を読み込むファイル名を設定する]
px_set_parameter[パラメータを設定する]
px_set_tablename[テーブルの名前を設定する (非推奨)]
px_set_targetencoding[文字フィールドのエンコーディングを設定する (非推奨)]
px_set_value[値を設定する]
px_timestamp2string[タイムスタンプを文字列に変換する]
px_update_record[paradox データベースのレコードを更新する]
qdom_error[直近の QDOM 操作からのエラー文字列、 またはエラーが発生しなかった場合にFALSE を返す]
qdom_tree[XML 文字列のツリーを作成する]
quoted_printable_decode[quoted-printable 文字列を 8 ビット文字列に変換する]
quoted_printable_encode[8 ビット文字列を quoted-printable 文字列に変換する]
quotemeta[メタ文字をクォートする]
rad2deg[ラジアン単位の数値を度単位に変換する]
radius_acct_open[課金用の Radius ハンドルを作成する]
radius_add_server[サーバーを追加する]
radius_auth_open[認証用の Radius ハンドルを作成する]
radius_close[すべてのリソースを開放する]
radius_config[指定した設定ファイルをライブラリに読み込ませる]
radius_create_request[課金あるいは認証のリクエストを作成する]
radius_cvt_addr[生データを IP アドレスに変換する]
radius_cvt_int[生データを整数に変換する]
radius_cvt_string[生データを文字列に変換する]
radius_demangle[データを復元する]
radius_demangle_mppe_key[変形されたデータから mppe キーを得る]
radius_get_attr[属性を取得する]
radius_get_vendor_attr[ベンダ固有の属性を取得する]
radius_put_addr[IP アドレス属性を設定する]
radius_put_attr[バイナリ属性を設定する]
radius_put_int[整数属性を設定する]
radius_put_string[文字列属性を設定する]
radius_put_vendor_addr[ベンダ固有の IP アドレス属性を設定する]
radius_put_vendor_attr[ベンダ固有のバイナリ属性を設定する]
radius_put_vendor_int[ベンダ固有の整数属性を設定する]
radius_put_vendor_string[ベンダ固有の文字列属性を設定する]
radius_request_authenticator[リクエスト認証子を返す]
radius_send_request[リクエストを送信し、応答を待つ]
radius_server_secret[共有秘密鍵を返す]
radius_strerror[エラーメッセージを返す]
rand[乱数を生成する]
range[ある範囲の整数を有する配列を作成する]
rar_wrapper_cache_stats[URL ラッパーのキャッシュのヒット数]
rawurldecode[URL エンコードされた文字列をデコードする]
rawurlencode[RFC 3986 に基づき URL エンコードを行う]
readdir[ディレクトリハンドルからエントリを読み込む]
readfile[ファイルを出力する]
readgzfile[gz ファイルを出力する]
readline[一行読み込む]
readline_add_history[ヒストリに 1 行追加する]
readline_callback_handler_install[readline コールバックインターフェイスと端末を初期化し、プロンプトを表示して結果をすぐに返す]
readline_callback_handler_remove[インストールされたハンドラを削除し、端末の設定をもとに戻す]
readline_callback_read_char[文字を読み込み、改行を受け取ると readlineコールバックインターフェイスに通知する]
readline_clear_history[ヒストリをクリアする]
readline_completion_function[補完関数を登録する]
readline_info[種々の readline の内部変数を取得/設定する]
readline_list_history[ヒストリを一覧表示する]
readline_on_new_line[カーソルが新しい行に移動したことを readline に通知する]
readline_read_history[ヒストリを読み込む]
readline_redisplay[画面を再描画する]
readline_write_history[ヒストリを書きこむ]
readlink[シンボリックリンク先を返す]
realpath[絶対パス名を返す]
realpath_cache_get[realpath キャッシュ・エントリーを取得]
realpath_cache_size[realpath キャッシュサイズを取得]
recode_file[コード変換指令に基づきファイルからファイルにコード変換する]
recode_string[コード変換指令に基づき文字列のコードを変換する]
register_shutdown_function[シャットダウン時に実行する関数を登録する]
register_tick_function[各 tick で実行する関数を登録する]
rename[ファイルをリネームする]
rename_function[グローバルの関数テーブルで関数名を変更する]
reset[配列の内部ポインタを先頭の要素にセットする]
restore_error_handler[以前のエラーハンドラ関数を回復する]
restore_exception_handler[以前の例外ハンドラ関数を回復する]
restore_include_path[include_path 設定オプションの値を元に戻す]
rewind[ファイルポインタの位置を先頭に戻す]
rewinddir[ディレクトリハンドルを元に戻す]
rmdir[ディレクトリを削除する]
round[浮動小数点数を丸める]
rpm_close[RPM ファイルを閉じる]
rpm_get_tag[RPM ファイルからヘッダタグを取得する]
rpm_is_valid[filename が RPM ファイルであるかどうかを確かめる]
rpm_open[RPM ファイルをオープンする]
rpm_version[rpmreader 拡張モジュールの現在のバージョンを表す文字列を返す]
rrd_create[Creates rrd database file]
rrd_error[Gets latest error message.]
rrd_fetch[Fetch the data for graph as array.]
rrd_first[Gets the timestamp of the first sample fromrrd file.]
rrd_graph[Creates image from a data.]
rrd_info[Gets information about rrd file]
rrd_last[Gets unix timestamp of the lastsample.]
rrd_lastupdate[Gets information about last updateddata.]
rrd_restore[Restores the RRD file from XML dump.]
rrd_tune[Tunes some RRD database file headeroptions.]
rrd_update[Updates the RRD database.]
rrd_version[Gets information about underlying rrdtoollibrary]
rrd_xport[Exports the information about RRDdatabase.]
rsort[配列を逆順にソートする]
rtrim[文字列の最後から空白 (もしくはその他の文字) を取り除く]
runkit_class_adopt[ある基底クラスを、他のクラスを継承させたクラスに変換する。親クラスの適切なメソッドを追加する]
runkit_class_emancipate[他のクラスを継承しているクラスから継承関係を解消し、親クラスから継承しているメソッドを取り除く]
runkit_constant_add[define() と同じだが、クラス定数も指定可能]
runkit_constant_redefine[定義済みの定数を再定義する]
runkit_constant_remove[定義済みの定数を削除する]
runkit_function_add[新しい関数を追加する。 create_function() と同じ]
runkit_function_copy[関数を別の名前でコピーする]
runkit_function_redefine[関数の定義を新しい実装で置き換える]
runkit_function_remove[関数の定義を削除する]
runkit_function_rename[関数名を変更する]
runkit_import[ファイルから関数やクラスの定義を読み込み、必要に応じて書き換える]
runkit_lint[指定した PHP コードの文法をチェックする]
runkit_lint_file[指定したファイルの PHP 文法をチェックする]
runkit_method_add[指定したクラスに、新しいメソッドを動的に追加する]
runkit_method_copy[あるクラスのメソッドを別のクラスにコピーする]
runkit_method_redefine[指定されたメソッドのコードを動的に変更する]
runkit_method_remove[指定したメソッドを動的に削除する]
runkit_method_rename[指定したメソッドの名前を動的に変更する]
runkit_return_value_used[現在の関数の返り値が使用されているかどうかを調べる]
runkit_sandbox_output_handler[サンドボックス内での出力を取得・処理するための関数を指定する]
runkit_superglobals[登録されているスーパーグローバルを、数値添字の配列で返す]
scandir[指定されたパスのファイルとディレクトリのリストを取得する]
sem_acquire[セマフォを得る]
sem_get[セマフォ ID を得る]
sem_release[セマフォを解放する]
sem_remove[セマフォを削除する]
serialize[値の保存可能な表現を生成する]
session_cache_expire[現在のキャッシュの有効期限を返す]
session_cache_limiter[現在のキャッシュリミッタを取得または設定する]
session_decode[セッションエンコードされた文字列からセッションデータをデコードする]
session_destroy[セッションに登録されたデータを全て破棄する]
session_encode[現在のセッションデータを、セッションエンコードされた文字列に変換する]
session_get_cookie_params[セッションクッキーのパラメータを得る]
session_id[現在のセッション ID を取得または設定する]
session_is_registered[変数がセッションに登録されているかどうかを調べる]
session_module_name[現在のセッションモジュールを取得または設定する]
session_name[現在のセッション名を取得または設定する]
session_pgsql_add_error[エラーカウントを加算し、直近のエラーメッセージを設定する]
session_pgsql_get_error[エラーの数および直近のエラーメッセージを返す]
session_pgsql_get_field[カスタムフィールドの値を取得する]
session_pgsql_reset[セッションデータベースサーバーとの接続をリセットする]
session_pgsql_set_field[カスタムフィールドの値を設定する]
session_pgsql_status[現在の保存ハンドラの状態を得る]
session_regenerate_id[現在のセッションIDを新しく生成したものと置き換える]
session_register[現在のセッションに1つ以上の変数を登録する]
session_register_shutdown[セッションのシャットダウン関数]
session_save_path[現在のセッションデータ保存パスを取得または設定する]
session_set_cookie_params[セッションクッキーパラメータを設定する]
session_set_save_handler[ユーザー定義のセッション保存関数を設定する]
session_start[新しいセッションを開始、あるいは既存のセッションを再開する]
session_status[現在のセッションの状態を返す]
session_unregister[現在のセッションから変数の登録を削除する]
session_unset[全てのセッション変数を開放する]
session_write_close[セッションデータを書き込んでセッションを終了する]
set_error_handler[ユーザー定義のエラーハンドラ関数を設定する]
set_exception_handler[ユーザー定義の例外ハンドラ関数を設定する]
set_include_path[include_path 設定オプションをセットする]
set_magic_quotes_runtime[magic_quotes_runtimeの現在アクティブな設定をセットする]
set_time_limit[実行時間の最大値を制限する]
setcookie[クッキーを送信する]
setlocale[ロケール情報を設定する]
setproctitle[プロセスのタイトルを設定]
setrawcookie[値を URL エンコードせずにクッキーを送信する]
setthreadtitle[スレッドのタイトルを設定]
settype[変数の型をセットする]
sha1[文字列の sha1 ハッシュを計算する]
sha1_file[ファイルの sha1 ハッシュを計算する]
shell_exec[シェルによりコマンドを実行し、文字列として出力全体を返す]
shm_attach[共有メモリセグメントを作成またはオープンする]
shm_detach[共有メモリセグメントへの接続を閉じる]
shm_get_var[共有メモリから変数を返す]
shm_has_var[特定のエントリが存在するかどうかを調べる]
shm_put_var[共有メモリの変数を挿入または更新する]
shm_remove[Unix システムから共有メモリを削除する]
shm_remove_var[共有メモリから変数を削除する]
shmop_close[共有メモリブロックを閉じる]
shmop_delete[共有メモリブロックを削除する]
shmop_open[共有メモリブロックを作成またはオープンする]
shmop_read[共有メモリブロックからデータを読み込む]
shmop_size[共有メモリブロックの大きさを得る]
shmop_write[共有メモリブロックにデータを書き込む]
shuffle[配列をシャッフルする]
signeurlpaiement[決済 url を取得する (2 つの引数が必要)]
similar_text[二つの文字列の間の類似性を計算する]
simplexml_import_dom[DOM ノードから SimpleXMLElement オブジェクトを取得する]
simplexml_load_file[XMLファイルをパースし、オブジェクトに代入する]
simplexml_load_string[XML 文字列をオブジェクトに代入する]
sin[正弦（サイン）]
sinh[双曲線正弦（ハイパボリックサイン）]
sleep[実行を遅延させる]
snmp2_get[SNMPオブジェクトを取得する]
snmp2_getnext[指定したオブジェクト ID に続く SNMPオブジェクトを取得する]
snmp2_real_walk[指定したすべてのオブジェクトとそのオブジェクト ID を返す]
snmp2_set[SNMPオブジェクトの値を設定する]
snmp2_walk[すべての SNMPオブジェクトをエージェントから取得する]
snmp3_get[SNMPオブジェクトを取得する]
snmp3_getnext[指定したオブジェクト ID に続く SNMPオブジェクトを取得する]
snmp3_real_walk[指定したすべてのオブジェクトとそのオブジェクト ID を返す]
snmp3_set[SNMP オブジェクトの値を設定する]
snmp3_walk[すべての SNMPオブジェクトをエージェントから取得する]
snmp_get_quick_print[UCD ライブラリの quick_print の現在の設定値を取得する]
snmp_get_valueretrieval[SNMP の値が返される方法を返す]
snmp_read_mib[アクティブな MIB ツリーの中に MIB ファイルを読み込んでパースする]
snmp_set_enum_print[すべての enum を、実際の整数値ではなく enum 値とともに返す]
snmp_set_oid_numeric_print[指定したオブジェクト内の全てのオブジェクトを、対応するオブジェクト IDを含めて返す]
snmp_set_oid_output_format[OID の出力形式を設定する]
snmp_set_quick_print[UCB SNMPライブラリで quick_print の値を設定する]
snmp_set_valueretrieval[SNMP の値が返される方法を設定する]
snmpget[SNMPオブジェクトを取得する]
snmpgetnext[指定したオブジェクト ID に続く SNMPオブジェクトを取得する]
snmprealwalk[指定したオブジェクトに関するオブジェクト IDを含むすべてのオブジェクトを返す]
snmpset[SNMPオブジェクトの値を設定する]
snmpwalk[エージェントから全ての SNMPオブジェクトを取得する]
snmpwalkoid[ネットワークエンティティに関する情報ツリーを検索する]
socket_accept[ソケットへの接続を許可する]
socket_bind[ソケットに名前をバインドする]
socket_clear_error[ソケットのエラーまたは直近のエラーコードをクリアする]
socket_close[ソケットリソースを閉じる]
socket_connect[ソケット上の接続を初期化する]
socket_create[ソケット（通信時の終端）を作成する]
socket_create_listen[接続を受けつけるためにポートにソケットをオープンする]
socket_create_pair[区別できないソケットの組を作成し、配列に保存する]
socket_get_option[ソケットのオプションを取得する]
socket_getpeername[指定したソケットのリモート側に問い合わせ、その型に応じてホスト/ポート、あるいはUnix ファイルシステムのパスを返す]
socket_getsockname[指定したソケットのローカル側に問い合わせ、その型に応じてホスト/ポート、あるいはUnix ファイルシステムのパスを返す]
socket_import_stream[ストリームをインポートする]
socket_last_error[ソケットの直近のエラーを返す]
socket_listen[ソケット上で接続待ち(listen)する]
socket_read[ソケットから最大バイト長まで読みこむ]
socket_recv[接続したソケットからデータを受信する]
socket_recvfrom[接続しているかどうかによらず、ソケットからデータを受信する]
socket_select[与えられたソケットの配列に対し、指定した有効時間で select()システムコールを実行する]
socket_send[接続したソケットにデータを送信する]
socket_sendto[接続しているかどうかによらずソケットにメッセージを送信する]
socket_set_block[ソケットリソースをブロックモードに設定する]
socket_set_nonblock[ソケットリソースを非ブロックモードに設定する]
socket_set_option[ソケットのオプションを設定する]
socket_shutdown[受信、送信、または送受信用のソケットをシャットダウンする]
socket_strerror[ソケットエラーの内容を文字列として返す]
socket_write[ソケットに書き込む]
solr_get_version[Apache Solr エクステンションの現行バージョンを返す]
sort[配列をソートする]
soundex[文字列の soundex キーを計算する]
spl_autoload[__autoload() のデフォルト実装]
spl_autoload_call[要求されたクラスを読み込むために、すべての登録済みの __autoload()関数を試す]
spl_autoload_extensions[spl_autoload 用のデフォルトの拡張子を登録し、それを返す]
spl_autoload_functions[すべての登録済み __autoload() 関数を返す]
spl_autoload_register[指定した関数を __autoload() の実装として登録する]
spl_autoload_unregister[指定した関数の、__autoload() の実装としての登録を解除する]
spl_classes[利用可能な SPL クラスを返す]
spl_object_hash[指定したオブジェクトのハッシュ ID を返す]
split[正規表現により文字列を分割し、配列に格納する]
spliti[大文字小文字を区別しない正規表現により文字列を分割し、配列に格納する]
sprintf[フォーマットされた文字列を返す]
sql_regcase[大文字小文字を区別しないマッチングのための正規表現を作成する]
sqlite_array_query[指定したデータベースに対してクエリを実行し、配列を返す]
sqlite_busy_timeout[ビジータイムアウト時間を設定またはビジーハンドラを無効にする]
sqlite_changes[直近のSQLステートメントにより変更されたレコード数を返す]
sqlite_close[オープンされたSQLiteデータベースを閉じる]
sqlite_column[カレントの結果セットのレコードからカラムを1列取得する]
sqlite_create_aggregate[SQLステートメントで使用する集約UDFを登録する]
sqlite_create_function[SQLステートメントで使用するために"通常の"ユーザー定義関数を登録する]
sqlite_current[結果セットからカレントのレコードを配列として取得する]
sqlite_error_string[エラーコードの説明を返す]
sqlite_escape_string[クエリパラメータ用に文字列をエスケープする]
sqlite_exec[与えられたデータベースに対して結果を伴わないクエリを実行する]
sqlite_factory[SQLite データベースをオープンし、SQLiteDatabseオブジェクトを返す]
sqlite_fetch_all[結果セットから全てのレコードを配列の配列として取得する]
sqlite_fetch_array[結果セットから次のレコードを配列として取得する]
sqlite_fetch_column_types[特定のテーブルからカラム型の配列を返す]
sqlite_fetch_object[結果セットから次のレコードをオブジェクトとして取得する]
sqlite_fetch_single[結果セットの最初のカラムを文字列として取得する]
sqlite_field_name[特定のフィールドの名前を返す]
sqlite_has_more[まだレコードがあるかないかを返す]
sqlite_has_prev[前のレコードがあるかどうかを返す]
sqlite_key[カレントレコードのインデックスを返す]
sqlite_last_error[データベースに関する直近のエラーコードを返す]
sqlite_last_insert_rowid[直近に挿入されたレコードのrowidを返す]
sqlite_libencoding[リンクされているSQLiteライブラリのエンコーディングを返す]
sqlite_libversion[リンクされているSQLiteライブラリのバージョンを返す]
sqlite_next[次のレコード番号へシークする]
sqlite_num_fields[結果セットのフィールド数を返す]
sqlite_num_rows[結果セットのレコード数を返す]
sqlite_open[SQLiteデータベースをオープンする。データベースが存在しない場合は作成する]
sqlite_popen[SQLiteデータベースへの持続的ハンドルをオープンする。存在しない場合には、データベースを作成する]
sqlite_prev[結果セットの前のレコード番号へシークする]
sqlite_query[指定したデータベースに対してクエリを実行し、結果ハンドル を返す]
sqlite_rewind[先頭レコード番号へシークする]
sqlite_seek[特定のレコード番号へシークする]
sqlite_single_query[クエリを実行し、単一カラムもしくは先頭レコードの値に対する配列を返す]
sqlite_udf_decode_binary[UDFにパラメータとして渡されたバイナリデータをデコードする]
sqlite_udf_encode_binary[UDFから返す前にバイナリデータをエンコードする]
sqlite_unbuffered_query[事前取得していないクエリを実行し、全てのデータをバッファリングする]
sqlite_valid[まだレコードが残っているかどうかを返す]
sqlsrv_begin_transaction[Begins a database transaction]
sqlsrv_cancel[Cancels a statement]
sqlsrv_client_info[Returns information about the client andspecified connection]
sqlsrv_close[Closes an open connection and releasesresourses associated with the connection]
sqlsrv_commit[Commits a transaction that was begun with sqlsrv_begin_transaction()]
sqlsrv_configure[Changes the driver error handling andlogging configurations]
sqlsrv_connect[Opens a connection to a Microsoft SQL Serverdatabase]
sqlsrv_errors[Returns error and warning information aboutthe last SQLSRV operation performed]
sqlsrv_execute[Executes a statement prepared with sqlsrv_prepare()]
sqlsrv_fetch[Makes the next row in a result set availablefor reading]
sqlsrv_fetch_array[Returns a row as an array]
sqlsrv_fetch_object[Retrieves the next row of data in a resultset as an object]
sqlsrv_field_metadata[Retrieves metadata for the fields of astatement prepared by sqlsrv_prepare() or sqlsrv_query()]
sqlsrv_free_stmt[Frees all resources for the specifiedstatement]
sqlsrv_get_config[Returns the value of the specifiedconfiguration setting]
sqlsrv_get_field[Gets field data from the currently selectedrow]
sqlsrv_has_rows[Indicates whether the specified statementhas rows]
sqlsrv_next_result[Makes the next result of the specifiedstatement active]
sqlsrv_num_fields[Retrieves the number of fields (columns) ona statement]
sqlsrv_num_rows[Retrieves the number of rows in a resultset]
sqlsrv_prepare[Prepares a query for execution]
sqlsrv_query[Prepares and executes a query.]
sqlsrv_rollback[Rolls back a transaction that was begun with sqlsrv_begin_transaction()]
sqlsrv_rows_affected[Returns the number of rows modified by thelast INSERT, UPDATE, or DELETE query executed]
sqlsrv_send_stream_data[Sends data from parameter streams to theserver]
sqlsrv_server_info[Returns information about the server]
sqrt[平方根]
srand[乱数ジェネレータを初期化する]
sscanf[フォーマット文字列に基づき入力を処理する]
ssdeep_fuzzy_compare[Calculates the match score between two fuzzyhash signatures]
ssdeep_fuzzy_hash[Create a fuzzy hash from a string]
ssdeep_fuzzy_hash_filename[Create a fuzzy hash from a file]
ssh2_auth_agent[SSH の認証を、ssh agent を使って行う]
ssh2_auth_hostbased_file[ホスト公開鍵を使用して認証を行う]
ssh2_auth_none["none" として認証する]
ssh2_auth_password[SSH 上でプレーンなパスワードを使用した認証を行う]
ssh2_auth_pubkey_file[公開鍵を使用した認証を行う]
ssh2_connect[SSH サーバーに接続する]
ssh2_exec[リモートサーバー上でコマンドを実行する]
ssh2_fetch_stream[拡張データストリームを取得する]
ssh2_fingerprint[リモートサーバーのフィンガープリントを処理する]
ssh2_methods_negotiated[ネゴシエートされたメソッドのリストを返す]
ssh2_publickey_add[認証済み公開鍵を追加する]
ssh2_publickey_init[公開鍵サブシステムを初期化する]
ssh2_publickey_list[現在認証済みの公開鍵の一覧を表示する]
ssh2_publickey_remove[認証済み公開鍵を取り除く]
ssh2_scp_recv[SCP 経由でファイルを要求する]
ssh2_scp_send[SCP 経由でファイルを送信する]
ssh2_sftp[SFTP サブシステムを初期化する]
ssh2_sftp_chmod[ファイルのモードを変更する]
ssh2_sftp_lstat[シンボリックリンクの情報を取得する]
ssh2_sftp_mkdir[ディレクトリを作成する]
ssh2_sftp_readlink[シンボリックリンクのターゲットを返す]
ssh2_sftp_realpath[指定されたパス文字列の実パスを解決する]
ssh2_sftp_rename[リモートファイルを改名する]
ssh2_sftp_rmdir[ディレクトリを削除する]
ssh2_sftp_stat[リモートファイルシステム上のファイルの情報を取得する]
ssh2_sftp_symlink[シンボリックリンクを作成する]
ssh2_sftp_unlink[ファイルを削除する]
ssh2_shell[対話式のシェルを要求する]
ssh2_tunnel[リモートサーバーを経由するトンネルをオープンする]
stat[ファイルに関する情報を取得する]
stats_absolute_deviation[値の配列の絶対偏差を返す]
stats_cdf_beta[ベータ分布用の CDF 関数。ベータ分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_binomial[二項分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_cauchy[未ドキュメント化]
stats_cdf_chisquare[カイ二乗分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_exponential[未ドキュメント化]
stats_cdf_f[F 分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_gamma[ガンマ分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_laplace[未ドキュメント化]
stats_cdf_logistic[未ドキュメント化]
stats_cdf_negative_binomial[負の二項分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_noncentral_chisquare[非心カイ二乗分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_noncentral_f[非心 F 分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_poisson[ポアソン分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_t[T 分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_cdf_uniform[未ドキュメント化]
stats_cdf_weibull[未ドキュメント化]
stats_covariance[ふたつのデータセットの共分散を計算する]
stats_den_uniform[未ドキュメント化]
stats_dens_beta[未ドキュメント化]
stats_dens_cauchy[未ドキュメント化]
stats_dens_chisquare[未ドキュメント化]
stats_dens_exponential[未ドキュメント化]
stats_dens_gamma[未ドキュメント化]
stats_dens_laplace[未ドキュメント化]
stats_dens_logistic[未ドキュメント化]
stats_dens_negative_binomial[未ドキュメント化]
stats_dens_normal[未ドキュメント化]
stats_dens_pmf_binomial[未ドキュメント化]
stats_dens_pmf_poisson[未ドキュメント化]
stats_dens_t[未ドキュメント化]
stats_dens_weibull[未ドキュメント化]
stats_harmonic_mean[値の配列の調和平均を返す]
stats_kurtosis[配列内のデータの尖度を計算する]
stats_rand_gen_beta[無作為な値を生成する]
stats_rand_gen_chisquare[自由度 "df" の乱数で表されるカイ二乗分布から、無作為な値を返す]
stats_rand_gen_exponential[平均値 "av" の指数分布から、無作為な値を返す]
stats_rand_gen_f[無作為な値を返す]
stats_rand_gen_funiform[low (それ自身は含まない) と high (それ自身は含まない)の間の一様な浮動小数点数値を生成する]
stats_rand_gen_gamma[ガンマ分布から無作為な値を生成する]
stats_rand_gen_ibinomial[二項分布から無作為な値を生成する。二項分布の試行回数を "n" (n >=0)、各試行で事象の発生する確率を "pp" ((0;1)) とし、BTPE アルゴリズムを使用する]
stats_rand_gen_ibinomial_negative[負の二項分布から無作為な値を生成する。引数: n -無作為な値を生成するために行う負の二項分布の試行回数 (n > 0)、p - 事象の発生する確率 (0 < p <1))]
stats_rand_gen_int[1 から 2147483562 までの間の無作為な整数値を生成する]
stats_rand_gen_ipoisson[平均 "mu" (mu >= 0.0)のポアソン分布から無作為な値を生成する]
stats_rand_gen_iuniform[LOW (それ自身を含む) と HIGH (それ自身を含む)の間の一様分布から整数値を生成する]
stats_rand_gen_noncenral_chisquare[自由度 "df"、非心母数 "xnonc" の非心カイ二乗分布から無作為な値を生成する。d は >= 1.0、xnonc は >= 0.0 でなければならない]
stats_rand_gen_noncentral_f[分子の自由度が "dfn"、分母の自由度が "dfd"、非心母数が "xnonc"の非心 F (分散比) 分布から、無作為な値を返す。 非心カイ二乗変量の分子とカイ二乗変量の分母の比を直接生成する]
stats_rand_gen_noncentral_t[非心 T 分布から無作為な値を生成する]
stats_rand_gen_normal[mean、av および標準偏差 sd (sd >= 0)によって表される正規分布から無作為な値を生成する。 Method : Renames SNORM from TOMS asslightly modified by BWB to use RANF instead of SUNIF.]
stats_rand_gen_t[T 分布から無作為な値を生成する]
stats_rand_get_seeds[未ドキュメント化]
stats_rand_phrase_to_seeds[乱数ジェネレータ用のふたつのシードを生成する]
stats_rand_ranf[0 から 1 (区間の両端は含まない) までの一様分布から、現在のジェネレータを使用して無作為な浮動小数点数値を返す]
stats_rand_setall[未ドキュメント化]
stats_skew[配列内のデータの歪度を計算する]
stats_standard_deviation[標準偏差を返す]
stats_stat_binomial_coef[未ドキュメント化]
stats_stat_correlation[未ドキュメント化]
stats_stat_gennch[未ドキュメント化]
stats_stat_independent_t[未ドキュメント化]
stats_stat_noncentral_t[非心 t 分布のパラメータのいずれかを、その他のパラメータの値から計算する]
stats_stat_paired_t[未ドキュメント化]
stats_stat_percentile[未ドキュメント化]
stats_stat_powersum[未ドキュメント化]
stats_variance[母分散を返す]
stomp_connect_error[Returns a string description of the lastconnect error]
stomp_version[Gets the current stomp extensionversion]
str_getcsv[CSV 文字列をパースして配列に格納する]
str_ireplace[大文字小文字を区別しない str_replace()]
str_pad[文字列を固定長の他の文字列で埋める]
str_repeat[文字列を反復する]
str_replace[検索文字列に一致したすべての文字列を置換する]
str_rot13[文字列に rot13 変換を行う]
str_shuffle[文字列をランダムにシャッフルする]
str_split[文字列を配列に変換する]
str_word_count[文字列に使用されている単語についての情報を返す]
strcasecmp[大文字小文字を区別しないバイナリセーフな文字列比較を行う]
strcmp[バイナリセーフな文字列比較]
strcoll[ロケールに基づく文字列比較]
strcspn[マスクにマッチしない最初のセグメントの長さを返す]
streamWrapper::__construct[新しいストリームラッパーを作成する]
streamWrapper::__destruct[既存のストリームラッパーを破棄する]
streamWrapper::dir_closedir[ディレクトリハンドルを閉じる]
streamWrapper::dir_opendir[ディレクトリハンドルをオープンする]
streamWrapper::dir_readdir[ディレクトリハンドルからエントリを読み込む]
streamWrapper::dir_rewinddir[ディレクトリハンドルを巻き戻す]
streamWrapper::mkdir[ディレクトリを作成する]
streamWrapper::rename[ファイルあるいはディレクトリの名前を変える]
streamWrapper::rmdir[ディレクトリを削除する]
streamWrapper::stream_cast[元となるリソースを取得する]
streamWrapper::stream_close[リソースを閉じる]
streamWrapper::stream_eof[ファイルポインタが終端にあるかどうかを調べる]
streamWrapper::stream_flush[出力をフラッシュする]
streamWrapper::stream_lock[ファイルのアドバイザリ・ロック]
streamWrapper::stream_metadata[ストリームオプションを変更する]
streamWrapper::stream_open[ファイルあるいは URL をオープンする]
streamWrapper::stream_read[ストリームから読み込む]
streamWrapper::stream_seek[ストリーム内の特定の場所に移動する]
streamWrapper::stream_set_option[ストリームのオプションを変更する]
streamWrapper::stream_stat[ファイルリソースについての情報を取得する]
streamWrapper::stream_tell[ストリームの現在位置を取得する]
streamWrapper::stream_truncate[ストリームを丸める]
streamWrapper::stream_write[ストリームに書き込む]
streamWrapper::unlink[ファイルを削除する]
streamWrapper::url_stat[ファイルについての情報を取得する]
stream_bucket_append[bucket を brigade に追加する]
stream_bucket_make_writeable[操作する brigade から bucket オブジェクトを返す]
stream_bucket_new[現在のストリームで使用する新しい bucket を作成する]
stream_bucket_prepend[bucket を brigade の先頭に追加する]
stream_context_create[ストリームコンテキストを作成する]
stream_context_get_default[デフォルトのストリームコンテキストを取得する]
stream_context_get_options[ストリーム / ラッパー /コンテキストに設定されているオプションを取得する]
stream_context_get_params[コンテキストのパラメータを取得する]
stream_context_set_default[デフォルトのストリームコンテキストを設定する]
stream_context_set_option[ストリーム / ラッパー / コンテキストのオプションを設定する]
stream_context_set_params[ストリーム / ラッパー / コンテキストのパラメータを設定する]
stream_copy_to_stream[データをあるストリームから別のストリームにコピーする]
stream_encoding[ストリームのエンコード用の文字セットを設定する]
stream_filter_append[ストリームにフィルタを付加する]
stream_filter_prepend[フィルタをストリームに付加する]
stream_filter_register[ユーザー定義のストリームフィルタを登録する]
stream_filter_remove[ストリームからフィルタを取り除く]
stream_get_contents[残りのストリームを文字列に読み込む]
stream_get_filters[登録されているフィルタのリストを取得する]
stream_get_line[指定されたデリミタの位置までのデータを一行分としてストリームから読み込む]
stream_get_meta_data[ヘッダーあるいはメタデータをストリームまたはファイルポインタから取得する]
stream_get_transports[登録されたソケットのトランスポートの一覧を取得する]
stream_get_wrappers[登録されているストリームのラッパーのリストを取得する]
stream_is_local[ローカルストリームかどうかを調べる]
stream_notification_callback[notification コンテキストパラメータ用のコールバック関数]
stream_resolve_include_path[インクルードパスに対してファイル名を解決する]
stream_select[select() システムコールと同等の操作を、 ストリームの配列に対して tv_secと tv_usec で指定されたタイムアウト時間をもって行う]
stream_set_blocking[ストリームのブロックモードを有効にする / 解除する]
stream_set_chunk_size[ストリームのチャンクサイズを設定する]
stream_set_read_buffer[指定したストリームのファイル読み込みバッファリングを有効にする]
stream_set_timeout[ストリームにタイムアウトを設定する]
stream_set_write_buffer[指定されたストリームのファイル書き込みバッファリングを有効にする]
stream_socket_accept[stream_socket_server() で作られたソケットの接続を受け入れる]
stream_socket_client[インターネットドメインまたは Unix ドメインのソケット接続を開く]
stream_socket_enable_crypto[接続済みのソケットについて暗号化の on/off を切り替える]
stream_socket_get_name[ローカルまたはリモートのソケットの名前を取得する]
stream_socket_pair[接続された、区別できないソケットストリームの組を作成する]
stream_socket_recvfrom[接続されているかどうかにかかわらず、ソケットからのデータを受信する]
stream_socket_sendto[接続されているかどうかにかかわらず、ソケットにデータを送信する]
stream_socket_server[インターネットドメインまたは Unixドメインのサーバーソケットを作成する]
stream_socket_shutdown[全二重接続を終了する]
stream_supports_lock[ストリームがロックをサポートしているかどうかを調べる]
stream_wrapper_register[PHP のクラスとして実装された URL ラッパーを登録する]
stream_wrapper_restore[事前に登録を解除された組み込みラッパーを復元する]
stream_wrapper_unregister[URL ラッパーの登録を解除する]
strftime[ロケールの設定に基づいてローカルな日付・時間をフォーマットする]
strip_tags[文字列から HTML および PHP タグを取り除く]
stripcslashes[addcslashes() でクォートされた文字列をアンクォートする]
stripos[大文字小文字を区別せずに文字列が最初に現れる位置を探す]
stripslashes[クォートされた文字列のクォート部分を取り除く]
stristr[大文字小文字を区別しない strstr()]
strlen[文字列の長さを得る]
strnatcasecmp["自然順"アルゴリズムにより大文字小文字を区別しない文字列比較を行う]
strnatcmp["自然順"アルゴリズムにより文字列比較を行う]
strncasecmp[バイナリセーフで大文字小文字を区別しない文字列比較を、最初の n文字について行う]
strncmp[最初の n 文字についてバイナリセーフな文字列比較を行う]
strpbrk[文字列の中から任意の文字を探す]
strpos[文字列内の部分文字列が最初に現れる場所を見つける]
strptime[strftime() が生成した日付/時刻をパースする]
strrchr[文字列中に文字が最後に現れる場所を取得する]
strrev[文字列を逆順にする]
strripos[文字列中で、特定の(大文字小文字を区別しない)文字列が最後に現れた位置を探す]
strrpos[文字列中に、ある部分文字列が最後に現れる場所を探す]
strspn[指定したマスク内に含まれる文字からなる文字列の最初のセグメントの長さを探す]
strstr[文字列が最初に現れる位置を見つける]
strtok[文字列をトークンに分割する]
strtolower[文字列を小文字にする]
strtotime[英文形式の日付を Unix タイムスタンプに変換する]
strtoupper[文字列を大文字にする]
strtr[文字の変換あるいは部分文字列の置換を行う]
strval[変数の文字列としての値を取得する]
substr[文字列の一部分を返す]
substr_compare[指定した位置から指定した長さの 2つの文字列について、バイナリ対応で比較する]
substr_count[副文字列の出現回数を数える]
substr_replace[文字列の一部を置換する]
svn_add[作業ディレクトリ内のアイテムの追加を予約する]
svn_auth_get_parameter[認証パラメータを取得する]
svn_auth_set_parameter[認証パラメータを設定する]
svn_blame[ファイルの SVN blame を取得する]
svn_cat[リポジトリ内のファイルの内容を返す]
svn_checkout[リポジトリから作業コピーをチェックアウトする]
svn_cleanup[作業コピーディレクトリを再帰的にクリーンアップし、中途半端な操作を解消してロックを削除する]
svn_client_version[SVN クライアントライブラリのバージョンを返す]
svn_commit[変更内容を、ローカルの作業コピーからリポジトリに送信する]
svn_delete[作業コピーあるいはリポジトリからアイテムを削除する]
svn_diff[ふたつのパスの差分を再帰的に取得する]
svn_export[SVN ディレクトリの内容をエクスポートする]
svn_fs_abort_txn[トランザクションを中断し、成功したら true、失敗したら falseを返す]
svn_fs_apply_text[置換に使用するストリームを作成して返す]
svn_fs_begin_txn2[新しいトランザクションを作成する]
svn_fs_change_node_prop[成功したら true、失敗したら false を返す]
svn_fs_check_path[指定したリポジトリの fsrootパスにどんなアイテムが存在するかを調べる]
svn_fs_contents_changed[コンテンツが変更されている場合に true、されていない場合に falseを返す]
svn_fs_copy[ファイルやディレクトリをコピーし、成功したら true、失敗したら falseを返す]
svn_fs_delete[ファイルやディレクトリを削除し、成功したら true、失敗したら falseを返す]
svn_fs_dir_entries[指定したパスのディレクトリを列挙し、ディレクトリ名とファイルタイプのハッシュを返す]
svn_fs_file_contents[指定したバージョンの fsから、ファイルの中身を読み込むためのストリームを返す]
svn_fs_file_length[指定したバージョンの fs から、ファイルの長さを返す]
svn_fs_is_dir[ディレクトリを指すパスである場合に true、それ以外の場合に falseを返す]
svn_fs_is_file[ファイルを指すパスである場合に true、それ以外の場合に falseを返す]
svn_fs_make_dir[空のディレクトリを作成し、成功したら true、失敗したら falseを返す]
svn_fs_make_file[空のファイルを作成し、成功したら true、失敗したら false を返す]
svn_fs_node_created_rev[fsroot 配下のパスが作成されたリビジョンを返す]
svn_fs_node_prop[ノードのプロパティの値を返す]
svn_fs_props_changed[プロパティが変更されている場合に true、それ以外の場合に falseを返す]
svn_fs_revision_prop[指定したプロパティの値を取得する]
svn_fs_revision_root[リポジトリのルートの指定したバージョンのハンドルを取得する]
svn_fs_txn_root[トランザクションのルートを作成して返す]
svn_fs_youngest_rev[ファイルシステム内で一番若いリビジョン番号を返す]
svn_import[バージョン管理されていないパスをリポジトリにインポートする]
svn_log[指定したリポジトリ URL のコミットログメッセージを返す]
svn_ls[指定したリポジトリ URL のディレクトリ内の一覧を返す(オプションでリビジョン番号も指定可能)]
svn_mkdir[作業コピーあるいはリポジトリ内にディレクトリを作成する]
svn_repos_create[新しい subversion リポジトリを指定したパスに作成する]
svn_repos_fs[リポジトリ用に、ファイルシステム上のハンドルを取得する]
svn_repos_fs_begin_txn_for_commit[新しいトランザクションを作成する]
svn_repos_fs_commit_txn[トランザクションをコミットし、新しいリビジョンを返す]
svn_repos_hotcopy[repospath にあるリポジトリのホットコピーを作成し、destpathにコピーする]
svn_repos_open[リポジトリの共有ロックをオープンする]
svn_repos_recover[指定したパスのリポジトリのリカバリ処理を実行する]
svn_revert[作業コピーへの変更を取り消す]
svn_status[作業コピー内のファイルやディレクトリの状態を返す]
svn_update[作業コピーをアップデートする]
swf_actiongeturl[Shockwave Flash ムービーから URL を得る]
swf_actiongotoframe[フレームを実行した後、停止する]
swf_actiongotolabel[指定したラベルを有するフレームを表示する]
swf_actionnextframe[フレームを一つ進める]
swf_actionplay[現在のフレームから flash ムービーの実行を開始する]
swf_actionprevframe[フレームを一つ戻す]
swf_actionsettarget[アクションのコンテキストを設定する]
swf_actionstop[現在のフレームで flash ムービーの実行を終了する]
swf_actiontogglequality[低品質/高品質を切り替える]
swf_actionwaitforframe[フレームがロードされていない場合にアクションをスキップする]
swf_addbuttonrecord[現在のボタンの位置、外観、アクティブエリアを制御する]
swf_addcolor[グローバル加算色を、指定した rbga 値に設定する]
swf_closefile[現在の Shockwave Flash ファイルを閉じる]
swf_definebitmap[ビットマップを定義する]
swf_definefont[フォントを定義する]
swf_defineline[線を定義する]
swf_definepoly[多角形を定義する]
swf_definerect[長方形を定義する]
swf_definetext[テキスト文字列を定義する]
swf_endbutton[現在のボタンの定義を終了する]
swf_enddoaction[現在のアクションを終了する]
swf_endshape[現在の形状の定義を完結する]
swf_endsymbol[シンボルの定義を終了する]
swf_fontsize[フォントの大きさを変更する]
swf_fontslant[フォントの傾きを設定する]
swf_fonttracking[現在のフォントのトラッキングを設定する]
swf_getbitmapinfo[ビットマップに関する情報を得る]
swf_getfontinfo[フォントの情報を得る]
swf_getframe[現在のフレームのフレーム番号を得る]
swf_labelframe[現在のフレームにラベルを付ける]
swf_lookat[視点変換を定義する]
swf_modifyobject[オブジェクトを修正する]
swf_mulcolor[グローバル乗算色を指定した rbga 値に設定する]
swf_nextid[次の未使用のオブジェクト ID を返す]
swf_oncondition[アクションリストのトリガとして使用されるトランジションを定義する]
swf_openfile[新規に Shockwave Flash ファイルをオープンする]
swf_ortho2[ユーザー座標の二次元直交マッピングを現在のビューポイントに定義する]
swf_ortho[現在のビューポートにおけるユーザー座標の直交マッピングを定義する]
swf_perspective[遠近法による投影変換を定義する]
swf_placeobject[オブジェクトを画面に配置する]
swf_polarview[極座標で視点を定義する]
swf_popmatrix[以前の変換行列を回復する]
swf_posround[オブジェクトを配置または移動する際の変換時の丸め処理を有効または無効にする]
swf_pushmatrix[現在の変換行列をスタックに入れる]
swf_removeobject[オブジェクトを削除する]
swf_rotate[現在の座標を回転する]
swf_scale[現在の変換をスケリーングする]
swf_setfont[現在のフォントを変更する]
swf_setframe[指定したフレームに切替える]
swf_shapearc[円弧を描画する]
swf_shapecurveto3[三次ベジエ曲線を描画する]
swf_shapecurveto[二点間に二次ベジエ曲線を描画する]
swf_shapefillbitmapclip[現在の塗りつぶしモードをクリップ付きビットマップに設定する]
swf_shapefillbitmaptile[現在の塗りつぶしモードをタイル状のビットマップに設定する]
swf_shapefilloff[塗りつぶしをオフにする]
swf_shapefillsolid[現在の塗りつぶし色を指定した色に設定する]
swf_shapelinesolid[現在の行のスタイルを設定する]
swf_shapelineto[線を描画する]
swf_shapemoveto[現在の位置を移動する]
swf_showframe[現在のフレームを表示する]
swf_startbutton[ボタンの定義を開始する]
swf_startdoaction[現在のフレームのアクションリストの記述を開始する]
swf_startshape[複雑な形状を開始する]
swf_startsymbol[シンボルを定義する]
swf_textwidth[文字列の幅を得る]
swf_translate[現在の座標軸を変換する]
swf_viewport[描画を行う範囲を選択する]
sybase_affected_rows[直近のクエリで変更された行の数を得る]
sybase_close[Sybase 接続を閉じる]
sybase_connect[Sybase サーバー接続をオープンする]
sybase_data_seek[内部行ポインタを移動する]
sybase_deadlock_retry_count[デッドロックの再試行回数を設定する]
sybase_fetch_array[行を配列として取り込む]
sybase_fetch_assoc[結果の行を連想配列として取得する]
sybase_fetch_field[結果からフィールド情報を取得する]
sybase_fetch_object[行をオブジェクトとして取り込む]
sybase_fetch_row[行を配列として取得する]
sybase_field_seek[フィールドオフセットを設定する]
sybase_free_result[結果メモリを開放する]
sybase_get_last_message[サーバーから直近のメッセージを返す]
sybase_min_client_severity[クライアントの severity の最小値を設定する]
sybase_min_error_severity[エラーの severity の最小値を設定する]
sybase_min_message_severity[メッセージの severity の最小値を設定する]
sybase_min_server_severity[サーバーの severity の最小値を設定する]
sybase_num_fields[結果におけるフィールドの数を取得する]
sybase_num_rows[結果における行の数を取得する]
sybase_pconnect[Sybase の持続的な接続をオープンする]
sybase_query[Sybase クエリを送信する]
sybase_result[結果データを取得する]
sybase_select_db[Sybase データベースを選択する]
sybase_set_message_handler[サーバーでメッセージが発生した際にコールされるハンドラを指定する]
sybase_unbuffered_query[Sybase クエリを送信し、ブロックしない]
symlink[シンボリックリンクを作成する]
sys_get_temp_dir[一時ファイル用に使用されるディレクトリのパスを返す]
sys_getloadavg[システムの平均負荷を取得する]
syslog[システムログのメッセージを生成する]
system[外部プログラムを実行し、出力を表示する]
taint[文字列を汚染させる]
tan[正接（タンジェント）]
tanh[双曲線正接（ハイパボリックタンジェント）]
tcpwrap_check[tcpwrap のチェックを実行する]
tempnam[一意なファイル名を生成する]
textdomain[デフォルトドメインを設定する]
tidy::__construct[新しい tidyオブジェクトを作成する]
tidy::body[Tidy パースツリーの <body> タグから始まる tidyNodeオブジェクトを返す]
tidy::cleanRepair[パースされたマークアップに設定に基く誤りの修正を行う]
tidy::diagnose[パース、修正されたマークアップの診断を行う]
tidy::getConfig[現在の Tidy の設定を取得する]
tidy::getHtmlVer[指定したドキュメントで検出された HTML バージョンを取得する]
tidy::getOpt[Tidy ドキュメントについて指定した設定オプションの値を返す]
tidy::getRelease[Tidy ライブラリのリリース日 (バージョン) を取得する]
tidy::getStatus[指定したドキュメントのステータスを取得する]
tidy::getoptdoc[与えられたオプション名に対するドキュメントを返す]
tidy::head[Tidy パースツリーの <head> タグから始まる tidyNodeオブジェクトを返す]
tidy::html[Tidy パースツリーの <html> タグから始まる tidyNodeオブジェクトを返す]
tidy::isXhtml[ドキュメントが XHTML ドキュメントかどうかを示す]
tidy::isXml[ドキュメントが一般的な XML ドキュメント (非 HTML/XHTML)かどうかを示す]
tidy::parseFile[ファイルまたは URI にあるマークアップをパースする]
tidy::parseString[文字列にストアされたドキュメントをパースする]
tidy::repairFile[ファイルを修正し、それを文字列として返す]
tidy::repairString[別途提供される設定ファイルを使用して文字列を修正する]
tidy::root[Tidy パースツリーのルートを表す tidyNodeを返す]
tidyNode::getParent[カレントノードの親ノードを返す]
tidyNode::hasChildren[ノードが子を持つかどうかを調べる]
tidyNode::hasSiblings[このノードが兄弟ノードを持つかどうかを調べる]
tidyNode::isAsp[このノードが ASP かどうかを調べる]
tidyNode::isComment[このノードがコメントを表すものかどうかを調べる]
tidyNode::isHtml[このノードが HTML ドキュメントであるかどうかを調べる]
tidyNode::isJste[このノードが JSTE であるかどうかを調べる]
tidyNode::isPhp[このノードが PHP であるかどうかを調べる]
tidyNode::isText[このノードが (マークアップでない) テキストであるかどうかを調べる]
tidy_access_count[指定したドキュメントについて発生したTidyアクセシビリティ警告の数を返す]
tidy_config_count[指定したドキュメントについて発生した Tidy 設定エラーの数を返す]
tidy_error_count[指定したドキュメントについて発生した Tidy エラーの数を返す]
tidy_get_error_buffer[指定したドキュメントのパースで発生した警告とエラーを返す]
tidy_get_output[パースされた Tidy マークアップを表す文字列を返す]
tidy_load_config[指定したエンコーディングで ASCII コードの Tidy設定ファイルをロードする]
tidy_reset_config[Tidy の設定をデフォルト値に戻す]
tidy_save_config[現在の設定を名前が付けられたファイルに保存する]
tidy_set_encoding[マークアップをパースする際の入力／出力エンコーディングを設定する]
tidy_setopt[指定した Tidy ドキュメントについての設定を更新する]
tidy_warning_count[指定したドキュメントについて発生した Tidy 警告の数を返す]
time[現在の Unix タイムスタンプを返す]
time_nanosleep[秒およびナノ秒単位で実行を遅延する]
time_sleep_until[指定した時刻まで実行を遅延する]
timezone_name_from_abbr[略称からタイムゾーン名を返す]
timezone_version_get[timezonedb のバージョンを取得する]
tmpfile[テンポラリファイルを作成する]
token_get_all[指定したソースを PHP トークンに分割する]
token_name[指定した PHP トークンのシンボル名を取得する]
touch[ファイルの最終アクセス時刻および最終更新日をセットする]
trader_acos[Vector Trigonometric ACos]
trader_ad[Chaikin A/D Line]
trader_add[Vector Arithmetic Add]
trader_adosc[Chaikin A/D Oscillator]
trader_adx[Average Directional Movement Index]
trader_adxr[Average Directional Movement IndexRating]
trader_apo[Absolute Price Oscillator]
trader_aroon[Aroon]
trader_aroonosc[Aroon Oscillator]
trader_asin[Vector Trigonometric ASin]
trader_atan[Vector Trigonometric ATan]
trader_atr[Average True Range]
trader_avgprice[Average Price]
trader_bbands[Bollinger Bands]
trader_beta[Beta]
trader_bop[Balance Of Power]
trader_cci[Commodity Channel Index]
trader_cdl2crows[Two Crows]
trader_cdl3blackcrows[Three Black Crows]
trader_cdl3inside[Three Inside Up/Down]
trader_cdl3linestrike[Three-Line Strike]
trader_cdl3outside[Three Outside Up/Down]
trader_cdl3starsinsouth[Three Stars In The South]
trader_cdl3whitesoldiers[Three Advancing White Soldiers]
trader_cdlabandonedbaby[Abandoned Baby]
trader_cdladvanceblock[Advance Block]
trader_cdlbelthold[Belt-hold]
trader_cdlbreakaway[Breakaway]
trader_cdlclosingmarubozu[Closing Marubozu]
trader_cdlconcealbabyswall[Concealing Baby Swallow]
trader_cdlcounterattack[Counterattack]
trader_cdldarkcloudcover[Dark Cloud Cover]
trader_cdldoji[Doji]
trader_cdldojistar[Doji Star]
trader_cdldragonflydoji[Dragonfly Doji]
trader_cdlengulfing[Engulfing Pattern]
trader_cdleveningdojistar[Evening Doji Star]
trader_cdleveningstar[Evening Star]
trader_cdlgapsidesidewhite[Up/Down-gap side-by-side white lines]
trader_cdlgravestonedoji[Gravestone Doji]
trader_cdlhammer[Hammer]
trader_cdlhangingman[Hanging Man]
trader_cdlharami[Harami Pattern]
trader_cdlharamicross[Harami Cross Pattern]
trader_cdlhighwave[High-Wave Candle]
trader_cdlhikkake[Hikkake Pattern]
trader_cdlhikkakemod[Modified Hikkake Pattern]
trader_cdlhomingpigeon[Homing Pigeon]
trader_cdlidentical3crows[Identical Three Crows]
trader_cdlinneck[In-Neck Pattern]
trader_cdlinvertedhammer[Inverted Hammer]
trader_cdlkicking[Kicking]
trader_cdlkickingbylength[Kicking - bull/bear determined by the longermarubozu]
trader_cdlladderbottom[Ladder Bottom]
trader_cdllongleggeddoji[Long Legged Doji]
trader_cdllongline[Long Line Candle]
trader_cdlmarubozu[Marubozu]
trader_cdlmatchinglow[Matching Low]
trader_cdlmathold[Mat Hold]
trader_cdlmorningdojistar[Morning Doji Star]
trader_cdlmorningstar[Morning Star]
trader_cdlonneck[On-Neck Pattern]
trader_cdlpiercing[Piercing Pattern]
trader_cdlrickshawman[Rickshaw Man]
trader_cdlrisefall3methods[Rising/Falling Three Methods]
trader_cdlseparatinglines[Separating Lines]
trader_cdlshootingstar[Shooting Star]
trader_cdlshortline[Short Line Candle]
trader_cdlspinningtop[Spinning Top]
trader_cdlstalledpattern[Stalled Pattern]
trader_cdlsticksandwich[Stick Sandwich]
trader_cdltakuri[Takuri (Dragonfly Doji with very long lowershadow)]
trader_cdltasukigap[Tasuki Gap]
trader_cdlthrusting[Thrusting Pattern]
trader_cdltristar[Tristar Pattern]
trader_cdlunique3river[Unique 3 River]
trader_cdlupsidegap2crows[Upside Gap Two Crows]
trader_cdlxsidegap3methods[Upside/Downside Gap Three Methods]
trader_ceil[Vector Ceil]
trader_cmo[Chande Momentum Oscillator]
trader_correl[Pearson's Correlation Coefficient (r)]
trader_cos[Vector Trigonometric Cos]
trader_cosh[Vector Trigonometric Cosh]
trader_dema[Double Exponential Moving Average]
trader_div[Vector Arithmetic Div]
trader_dx[Directional Movement Index]
trader_ema[Exponential Moving Average]
trader_errno[Get error code]
trader_exp[Vector Arithmetic Exp]
trader_floor[Vector Floor]
trader_get_compat[Get compatibility mode]
trader_get_unstable_period[Get unstable period]
trader_ht_dcperiod[Hilbert Transform - Dominant CyclePeriod]
trader_ht_dcphase[Hilbert Transform - Dominant CyclePhase]
trader_ht_phasor[Hilbert Transform - Phasor Components]
trader_ht_sine[Hilbert Transform - SineWave]
trader_ht_trendline[Hilbert Transform - InstantaneousTrendline]
trader_ht_trendmode[Hilbert Transform - Trend vs CycleMode]
trader_kama[Kaufman Adaptive Moving Average]
trader_linearreg[Linear Regression]
trader_linearreg_angle[Linear Regression Angle]
trader_linearreg_intercept[Linear Regression Intercept]
trader_linearreg_slope[Linear Regression Slope]
trader_ln[Vector Log Natural]
trader_log10[Vector Log10]
trader_ma[Moving average]
trader_macd[Moving Average Convergence/Divergence]
trader_macdext[MACD with controllable MA type]
trader_macdfix[Moving Average Convergence/Divergence Fix12/26]
trader_mama[MESA Adaptive Moving Average]
trader_mavp[Moving average with variable period]
trader_max[Highest value over a specified period]
trader_maxindex[Index of highest value over a specifiedperiod]
trader_medprice[Median Price]
trader_mfi[Money Flow Index]
trader_midpoint[MidPoint over period]
trader_midprice[Midpoint Price over period]
trader_min[Lowest value over a specified period]
trader_minindex[Index of lowest value over a specifiedperiod]
trader_minmax[Lowest and highest values over a specifiedperiod]
trader_minmaxindex[Indexes of lowest and highest values over aspecified period]
trader_minus_di[Minus Directional Indicator]
trader_minus_dm[Minus Directional Movement]
trader_mom[Momentum]
trader_mult[Vector Arithmetic Mult]
trader_natr[Normalized Average True Range]
trader_obv[On Balance Volume]
trader_plus_di[Plus Directional Indicator]
trader_plus_dm[Plus Directional Movement]
trader_ppo[Percentage Price Oscillator]
trader_roc[Rate of change :((price/prevPrice)-1)*100]
trader_rocp[Rate of change Percentage:(price-prevPrice)/prevPrice]
trader_rocr100[Rate of change ratio 100 scale:(price/prevPrice)*100]
trader_rocr[Rate of change ratio:(price/prevPrice)]
trader_rsi[Relative Strength Index]
trader_sar[Parabolic SAR]
trader_sarext[Parabolic SAR - Extended]
trader_set_compat[Set compatibility mode]
trader_set_unstable_period[Set unstable period]
trader_sin[Vector Trigonometric Sin]
trader_sinh[Vector Trigonometric Sinh]
trader_sma[Simple Moving Average]
trader_sqrt[Vector Square Root]
trader_stddev[Standard Deviation]
trader_stoch[Stochastic]
trader_stochf[Stochastic Fast]
trader_stochrsi[Stochastic Relative Strength Index]
trader_sub[Vector Arithmetic Subtraction]
trader_sum[Summation]
trader_t3[Triple Exponential Moving Average(T3)]
trader_tan[Vector Trigonometric Tan]
trader_tanh[Vector Trigonometric Tanh]
trader_tema[Triple Exponential Moving Average]
trader_trange[True Range]
trader_trima[Triangular Moving Average]
trader_trix[1-day Rate-Of-Change (ROC) of a TripleSmooth EMA]
trader_tsf[Time Series Forecast]
trader_typprice[Typical Price]
trader_ultosc[Ultimate Oscillator]
trader_var[Variance]
trader_wclprice[Weighted Close Price]
trader_willr[Williams' %R]
trader_wma[Weighted Moving Average]
trait_exists[トレイトが存在するかどうかを調べる]
trigger_error[ユーザーレベルのエラー/警告/通知メッセージを生成する]
trim[文字列の先頭および末尾にあるホワイトスペースを取り除く]
uasort[ユーザー定義の比較関数で配列をソートし、連想インデックスを保持する]
ucfirst[文字列の最初の文字を大文字にする]
ucwords[文字列の各単語の最初の文字を大文字にする]
udm_add_search_limit[種々の検索の制約を設定する]
udm_alloc_agent[mnoGoSearch セッションを確保する]
udm_alloc_agent_array[mnoGoSearch セッションを割り当てる]
udm_api_version[mnoGoSearch API バージョンを取得する]
udm_cat_list[現在のカテゴリと同じレベルのカテゴリを全て取得する]
udm_cat_path[現在のカテゴリへのパスを取得する]
udm_check_charset[指定した charset が mnogosearchで認識されるかどうか調べる]
udm_check_stored[保存された接続を調べる]
udm_clear_search_limits[mnoGoSearch 検索に関する全ての制約をクリアする]
udm_close_stored[保存した接続を閉じる]
udm_crc32[指定した文字列の CRC32 チェックサムを計算する]
udm_errno[mnoGoSearch エラー番号を取得する]
udm_error[mnoGoSearch エラーメッセージを得る]
udm_find[検索を実行する]
udm_free_agent[mnoGoSearch セッションを開放する]
udm_free_ispell_data[ispell データ用に確保されたメモリを解放する]
udm_free_res[mnoGoSearch 結果を開放する]
udm_get_doc_count[データベース内のドキュメントの総数を得る]
udm_get_res_field[mnoGoSearch 結果フィールドを取得する]
udm_get_res_param[mnoGoSearch 結果パラメータを取得する]
udm_hash32[指定した文字列の Hash32 チェックサムを返す]
udm_load_ispell_data[ispell データを読み込む]
udm_open_stored[保存した接続をオープンする]
udm_set_agent_param[mnoGoSearch エージェントのセッションパラメータを設定する]
uksort[ユーザー定義の比較関数を用いて、キーで配列をソートする]
umask[現在の umask を変更する]
uniqid[一意な ID を生成する]
unixtojd[Unix タイムスタンプをユリウス歴に変換する]
unlink[ファイルを削除する]
unpack[バイナリ文字列からデータを切り出す]
unregister_tick_function[各 tick の実行用の関数の登録を解除する]
unserialize[保存用表現から PHP の値を生成する]
unset[指定した変数の割当を解除する]
untaint[文字列の汚染を除去する]
urldecode[URL エンコードされた文字列をデコードする]
urlencode[文字列を URL エンコードする]
use_soap_error_handler[SOAP エラーハンドラを使用するかどうかを設定する]
usleep[マイクロ秒単位で実行を遅延する]
usort[ユーザー定義の比較関数を使用して、配列を値でソートする]
utf8_decode[UTF-8 エンコードされた ISO-8859-1 文字列をシングルバイトのISO-8859-1 に変換する]
utf8_encode[ISO-8859-1 文字列を UTF-8 にエンコードする]
var_dump[変数に関する情報をダンプする]
var_export[変数の文字列表現を出力または返す]
variant_abs[variant の絶対値を返す]
variant_add[2 つの variant 値を「加算」し、結果を返す]
variant_and[2 つの variant の論理積を計算し、結果を返す]
variant_cast[variant を、別の型の新しい variant に変換する]
variant_cat[2 つの variant 値を連結し、その結果を返す]
variant_cmp[2 つの variant を比較する]
variant_date_from_timestamp[Unix タイムスタンプを、日付形式の variant で返す]
variant_date_to_timestamp[日付/時刻の variant 値を Unix タイムスタンプに変換する]
variant_div[2 つの variant の除算結果を返す]
variant_eqv[2 つの variant のビット値が等しいかどうかを調べる]
variant_fix[variant の整数部を返す]
variant_get_type[variant オブジェクトの型を返す]
variant_idiv[variants を整数に変換し、除算の結果を返す]
variant_imp[2 つの variant のビット implication を行う]
variant_int[variant の整数部を返す]
variant_mod[2 つの variant の除算を行い、剰余を返す]
variant_mul[2 つの variant の乗算を行い、その結果を返す]
variant_neg[variant の論理否定演算を行う]
variant_not[variant のビット否定演算を行う]
variant_or[2 つの variant の論理和を計算する]
variant_pow[2 つの variant の累乗計算を行い、その結果を返す]
variant_round[指定した桁で variant を丸める]
variant_set[variant オブジェクトに新しい値を代入する]
variant_set_type[variant を「その場で」別の型に変換する]
variant_sub[左の variant から右の variant を引き、その結果を返す]
variant_xor[2 つの variant の排他的論理和を計算する]
version_compare[ふたつの "PHP 標準" バージョン番号文字列を比較する]
vfprintf[フォーマットされた文字列をストリームに書き込む]
virtual[Apache サブリクエストを実行する]
vpopmail_add_alias_domain[仮想ドメインへのエイリアスを追加する]
vpopmail_add_alias_domain_ex[既存の仮想ドメインにエイリアスを追加する]
vpopmail_add_domain[仮想ドメインを新たに追加する]
vpopmail_add_domain_ex[新規に仮想ドメインを追加する]
vpopmail_add_user[指定した仮想ドメインに新規ユーザーを追加する]
vpopmail_alias_add[仮想エイリアスを追加する]
vpopmail_alias_del[あるユーザーの仮想エイリアスを全て削除する]
vpopmail_alias_del_domain[あるドメインに関する仮想エイリアスを全て削除する]
vpopmail_alias_get[あるドメインに関するエイリアスを取得する]
vpopmail_alias_get_all[あるドメインに関するエイリアスを全て取得する]
vpopmail_auth_user[ユーザー名/ドメイン/パスワードの認証を試みる]
vpopmail_del_domain[仮想ドメインを削除する]
vpopmail_del_domain_ex[仮想ドメインを削除する]
vpopmail_del_user[仮想ドメインからユーザーを削除する]
vpopmail_error[直近の vpopmail エラーに関するエラーメッセージを取得する]
vpopmail_passwd[仮想ユーザーのパスワードを変更する]
vpopmail_set_user_quota[仮想ユーザーの容量制限(クオータ)を設定する]
vprintf[フォーマットされた文字列を出力する]
vsprintf[フォーマットされた文字列を返す]
w32api_deftype[他の w32api_functions で使用するために型を定義する]
w32api_init_dtype[データ型 typenameのインスタンスを作成し、そこに渡された値を代入する]
w32api_invoke_function[関数名の後ろに指定された引数を指定し、関数 funcname を実行する]
w32api_register_function[ライブラリの関数 function_name を PHP に登録する]
w32api_set_call_method[使用するコール方式を設定する]
wddx_add_vars[指定した ID の WDDX パケットに変数を追加する]
wddx_deserialize[WDDX パケットをデシリアライズする]
wddx_packet_end[指定した ID の WDDX パケットを終了する]
wddx_packet_start[新規の WDDX パケットを内部の構造体を用いて開始する]
wddx_serialize_value[単一の値を WDDX パケットにシリアライズする]
wddx_serialize_vars[変数を WDDX パケットにシリアライズする]
win32_continue_service[中断したサービスを再開する]
win32_create_service[SCM データベースに新しいサービスのエントリを作成する]
win32_delete_service[SCM データベースからサービスのエントリを削除する]
win32_get_last_control_message[サービスに送信された直近の制御メッセージを返す]
win32_pause_service[サービスを中断する]
win32_ps_list_procs[稼動中のプロセスの一覧を取得する]
win32_ps_stat_mem[メモリ使用量の統計情報を取得する]
win32_ps_stat_proc[プロセスの統計情報を取得する]
win32_query_service_status[サービスの状態を問い合わせる]
win32_set_service_status[サービスの状態を更新する]
win32_start_service[サービスを開始する]
win32_start_service_ctrl_dispatcher[スクリプトを SCM に登録し、指定した名前でサービスとして稼動させるようにする]
win32_stop_service[サービスを停止する]
wincache_fcache_fileinfo[ファイルキャッシュにキャッシュされたファイルについての情報を取得する]
wincache_fcache_meminfo[ファイルキャッシュのメモリ使用状況についての情報を取得する]
wincache_lock[指定したキーで排他ロックを確保する]
wincache_ocache_fileinfo[opcode キャッシュにキャッシュされたファイルについての情報を取得する]
wincache_ocache_meminfo[opcode キャッシュのメモリ使用状況についての情報を取得する]
wincache_refresh_if_changed[キャッシュされたファイルのキャッシュエントリをリフレッシュする]
wincache_rplist_fileinfo[ファイルパス解決キャッシュについての情報を取得する]
wincache_rplist_meminfo[ファイルパス解決キャッシュのメモリ使用状況についての情報を取得する]
wincache_scache_info[セッションキャッシュにキャッシュされたファイルについての情報を取得する]
wincache_scache_meminfo[セッションキャッシュのメモリ使用状況についての情報を取得する]
wincache_ucache_add[変数が既にキャッシュに存在しない場合にのみ変数をユーザーキャッシュに追加する]
wincache_ucache_cas[変数を古い値と比較して新しい値を代入する]
wincache_ucache_clear[ユーザーキャッシュの中身全体を削除する]
wincache_ucache_dec[キーに関連づけられた値を減少させる]
wincache_ucache_delete[変数をユーザーキャッシュから削除する]
wincache_ucache_exists[変数がユーザーキャッシュに存在するかどうかを調べる]
wincache_ucache_get[ユーザーキャッシュに格納された変数を取得する]
wincache_ucache_inc[キーに関連づけられた値を増加させる]
wincache_ucache_info[ユーザーキャッシュにキャッシュされたファイルについての情報を取得する]
wincache_ucache_meminfo[ユーザーキャッシュのメモリ使用状況についての情報を取得する]
wincache_ucache_set[変数をユーザーキャッシュに追加し、変数が既にキャッシュに存在する場合はそれを上書きする]
wincache_unlock[指定したキーの排他ロックを解放する]
wordwrap[指定した文字数で文字列を分割する]
xattr_get[拡張属性を取得する]
xattr_list[拡張属性の一覧を取得する]
xattr_remove[拡張属性を削除する]
xattr_set[拡張属性を設定する]
xattr_supported[ファイルシステムが拡張属性をサポートしているかどうかを調べる]
xdiff_file_bdiff[2 つのファイルのバイナリ diff を作成する]
xdiff_file_bdiff_size[バイナリ diff を適用して作成するファイルのサイズを読み込む]
xdiff_file_bpatch[ファイルにバイナリ diff 形式のパッチを適用する]
xdiff_file_diff[2 つのファイルの unified diff を作成する]
xdiff_file_diff_binary[xiff_file_bdiff のエイリアス]
xdiff_file_merge3[3 つのファイルをひとつに統合する]
xdiff_file_patch[ファイルに unified diff 形式のパッチを適用する]
xdiff_file_patch_binary[xdiff_file_bpatch のエイリアス]
xdiff_file_rabdiff[2 つのファイルのバイナリ diff を、Rabin の polynomialfingerprinting アルゴリズムで作成する]
xdiff_string_bdiff[2 つの文字列のバイナリ diff を作成する]
xdiff_string_bdiff_size[バイナリ diff を適用して作成するファイルのサイズを読み込む]
xdiff_string_bpatch[文字列にバイナリ diff 形式のパッチを適用する]
xdiff_string_diff[2 つの文字列の unified diff を作成する]
xdiff_string_diff_binary[xdiff_string_bdiff のエイリアス]
xdiff_string_merge3[3 つの文字列をひとつに統合する]
xdiff_string_patch[文字列に unified diff 形式のパッチを適用する]
xdiff_string_patch_binary[xdiff_string_bpatch のエイリアス]
xdiff_string_rabdiff[2 つの文字列のバイナリ diff を、Rabin の polynomialfingerprinting アルゴリズムで作成する]
xhprof_disable[xhprof プロファイラを終了する]
xhprof_enable[xhprof プロファイラを開始する]
xhprof_sample_disable[xhprof サンプルプロファイラを終了する]
xhprof_sample_enable[Description]
xml_error_string[XML パーサのエラー文字列を得る]
xml_get_current_byte_index[XML パーサのカレントのバイトインデックスを得る]
xml_get_current_column_number[XML パーサのカレントのカラム番号を取得する]
xml_get_current_line_number[XML パーサのカレントの行番号を得る]
xml_get_error_code[XML パーサのエラーコードを得る]
xml_parse[XML ドキュメントの処理を開始する]
xml_parse_into_struct[配列構造体に XML データを処理する]
xml_parser_create[XML パーサを作成する]
xml_parser_create_ns[名前空間をサポートした XML パーサを生成する]
xml_parser_free[XML パーサを解放する]
xml_parser_get_option[XML パーサからオプションを得る]
xml_parser_set_option[XML パーサのオプションを設定する]
xml_set_character_data_handler[文字データハンドラを設定する]
xml_set_default_handler[デフォルトのハンドラを設定する]
xml_set_element_handler[開始要素および終了要素のハンドラを設定する]
xml_set_end_namespace_decl_handler[名前空間終了ハンドラを設定する]
xml_set_external_entity_ref_handler[外部エンティティリファレンスハンドラを設定する]
xml_set_notation_decl_handler[表記法宣言ハンドラを設定する]
xml_set_object[オブジェクト内部で XML パーサを使用する]
xml_set_processing_instruction_handler[処理命令 (PI) 用ハンドラを設定する]
xml_set_start_namespace_decl_handler[名前空間開始ハンドラを設定する]
xml_set_unparsed_entity_decl_handler[処理されないエンティティ宣言用ハンドラを設定する]
xmlrpc_decode[XML をネイティブな PHP 型にデコードする]
xmlrpc_decode_request[XML をネイティブなPHP 型にデコードする]
xmlrpc_encode[PHP の値に関する XML を生成する]
xmlrpc_encode_request[メソッドリクエスト用の XML を生成する]
xmlrpc_get_type[PHP の値に関する xmlrpc 型を取得する]
xmlrpc_is_fault[配列の値が XMLRPC の失敗であるかどうかを調べる]
xmlrpc_parse_method_descriptions[XML を、メソッド説明のリストにデコードする]
xmlrpc_server_add_introspection_data[introspection ドキュメントを追加する]
xmlrpc_server_call_method[XML リクエストをパースし、メソッドをコールする]
xmlrpc_server_create[xmlrpc サーバーを作成する]
xmlrpc_server_destroy[サーバーリソースを破棄する]
xmlrpc_server_register_introspection_callback[ドキュメントを生成する PHP 関数を登録する]
xmlrpc_server_register_method[メソッド名が一致するメソッドリソースに PHP 関数を登録する]
xmlrpc_set_type[PHP 文字列型用に xmlrpc 型、base64 または datetimeを設定する]
xslt_backend_info[バックエンドのコンパイル設定についての情報を返す]
xslt_backend_name[バックエンドの名前を返す]
xslt_backend_version[Sablotron のバージョン番号を返す]
xslt_create[新規の XSLT プロセッサを作成する]
xslt_errno[エラー番号を返す]
xslt_error[エラー文字列を返す]
xslt_free[XSLT プロセッサを開放する]
xslt_getopt[xsl プロセッサのオプションを取得する]
xslt_process[XSLTによる変換を行う]
xslt_set_base[全ての XSLT変換用の基準 URI を設定する]
xslt_set_encoding[XMLドキュメントをパースするエンコーディングを設定する]
xslt_set_error_handler[XSLTプロセッサ用のエラーハンドラを設定する]
xslt_set_log[ログメッセージを書き込むためのログファイルを設定する]
xslt_set_object[コールバック関数を解決するためのオブジェクトを設定する]
xslt_set_sax_handler[XSLT プロセッサに SAX ハンドラを設定する]
xslt_set_sax_handlers[XML ドキュメントを処理する際にコールされる SAX ハンドラを設定する]
xslt_set_scheme_handler[XSLTプロセッサ用にスキーマハンドラを設定する]
xslt_set_scheme_handlers[XSLTプロセッサに関するスキーマハンドラを設定する]
xslt_setopt[指定した XSLT プロセッサにオプションを設定する]
yaml_emit[YAML 形式にした値を返す]
yaml_emit_file[YAML 形式にした値をファイルに送る]
yaml_parse[YAML ストリームをパースする]
yaml_parse_file[ファイルからの YAML ストリームをパースする]
yaml_parse_url[URL からの YAML ストリームをパースする]
yaz_addinfo[詳細なエラー情報を返す]
yaz_ccl_conf[CCL パーサを設定する]
yaz_ccl_parse[CCL パーサを起動する]
yaz_close[YAZ 接続をクローズする]
yaz_connect[Z39.50 サーバーへの接続を準備する]
yaz_database[セッション内のデータベースを指定する]
yaz_element[取得時の要素集合の名前を指定する]
yaz_errno[エラー番号を返す]
yaz_error[エラーの内容を返す]
yaz_es[拡張サービスのリクエストを準備する]
yaz_es_result[拡張サービスの結果を調査する]
yaz_get_option[接続に関するオプションの値を返す]
yaz_hits[直近の検索に関するヒット数を返す]
yaz_itemorder[ILL リクエストパッケージを関して Z39.50 Item Orderを準備する]
yaz_present[(Z39.50による)取得の準備を行う]
yaz_range[取得するレコードの範囲を指定する]
yaz_record[レコードを返す]
yaz_scan[スキャンの準備をする]
yaz_scan_result[スキャンリクエストの結果を返す]
yaz_schema[取得するスキーマを指定する]
yaz_search[検索を準備する]
yaz_set_option[接続に関するひとつあるいは複数のオプションを設定する]
yaz_sort[ソート条件を設定する]
yaz_syntax[取得用に適当なレコード構文を指定する]
yaz_wait[Z39.50 リクエストが完了するまで待つ]
yp_all[マップを走査し、各エントリ上で関数をコールする]
yp_cat[マップ全体を含む配列を返す]
yp_err_string[指定したエラーコードに対応するエラー文字列を返す]
yp_errno[前の操作のエラーコードを返す]
yp_first[指定したマップから最初のキー/値の組を返す]
yp_get_default_domain[マシンのデフォルト NIS ドメインを取得する]
yp_master[指定したマップのマスタ NIS サーバーのマシン名を返す]
yp_match[検索した行を返す]
yp_next[マップから、次のキー/値の組を返す]
yp_order[マップの呼出番号を返す]
zend_logo_guid[Zend guid を取得する]
zend_thread_id[現在のスレッドの一意な ID を返す]
zend_version[現在の Zend Engine のバージョンを取得する]
zip_close[ZIP ファイルアーカイブを閉じる]
zip_entry_close[ディレクトリエントリを閉じる]
zip_entry_compressedsize[ディレクトリエントリの圧縮時のサイズを取得する]
zip_entry_compressionmethod[ディレクトリエントリの圧縮方法を取得する]
zip_entry_filesize[ディレクトリエントリの実際のファイルサイズを取得する]
zip_entry_name[ディレクトリエントリの名前を取得する]
zip_entry_open[読込み用にディレクトリエントリをオープンする]
zip_entry_read[オープンされたディレクトリエントリから読み込む]
zip_open[Zip ファイルアーカイブをオープンする]
zip_read[Zip ファイルアーカイブの中の次のエントリを読み込む]
zlib_decode[raw/gzip/zlib で符号化されたデータを復元する]
zlib_encode[指定した符号化方式でデータを圧縮する]
zlib_get_coding_type[出力圧縮に使用されたコーディングの種類を返す]
